{"ast":null,"code":"import _get from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { promisify, inspect } from 'util';\nimport { createHash } from 'crypto';\nimport createDebug from 'debug';\nimport { load } from 'cheerio';\nimport { VKError, CaptchaType } from 'vk-io';\nimport { URL, URLSearchParams } from 'url';\nimport fetch from 'node-fetch';\nimport { CookieJar } from 'tough-cookie';\nvar _process$env$DEBUG = process.env.DEBUG,\n    DEBUG = _process$env$DEBUG === void 0 ? '' : _process$env$DEBUG;\nvar isDebug = DEBUG.includes('vk-io:authorization');\n\nvar AuthorizationError =\n/*#__PURE__*/\nfunction (_VKError) {\n  _inherits(AuthorizationError, _VKError);\n\n  /**\r\n   * Constructor\r\n   */\n  function AuthorizationError(_ref) {\n    var _this;\n\n    var message = _ref.message,\n        code = _ref.code,\n        _ref$pageHtml = _ref.pageHtml,\n        pageHtml = _ref$pageHtml === void 0 ? null : _ref$pageHtml;\n\n    _classCallCheck(this, AuthorizationError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthorizationError).call(this, {\n      message: message,\n      code: code\n    }));\n    _this.pageHtml = isDebug ? pageHtml : null;\n    return _this;\n  }\n\n  return AuthorizationError;\n}(VKError);\n/**\r\n * Blank html redirect\r\n */\n\n\nvar CALLBACK_BLANK = 'https://oauth.vk.com/blank.html';\n/**\r\n * User-Agent for standalone auth\r\n */\n\nvar DESKTOP_USER_AGENT = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36';\n/**\r\n * Auth error codes\r\n */\n\nvar AuthErrorCode;\n\n(function (AuthErrorCode) {\n  AuthErrorCode[\"PAGE_BLOCKED\"] = \"PAGE_BLOCKED\";\n  AuthErrorCode[\"INVALID_PHONE_NUMBER\"] = \"INVALID_PHONE_NUMBER\";\n  AuthErrorCode[\"AUTHORIZATION_FAILED\"] = \"AUTHORIZATION_FAILED\";\n  AuthErrorCode[\"FAILED_PASSED_CAPTCHA\"] = \"FAILED_PASSED_CAPTCHA\";\n  AuthErrorCode[\"FAILED_PASSED_TWO_FACTOR\"] = \"FAILED_PASSED_TWO_FACTOR\";\n})(AuthErrorCode || (AuthErrorCode = {}));\n/**\r\n * List of user permissions and their bit mask\r\n */\n\n\nvar userScopes = new Map([['notify', 1], ['friends', 2], ['photos', 4], ['audio', 8], ['video', 16], ['pages', 128], ['link', 256], ['status', 1024], ['notes', 2048], ['messages', 4096], ['wall', 8192], ['ads', 32768], ['offline', 65536], ['docs', 131072], ['groups', 262144], ['notifications', 524288], ['stats', 1048576], ['email', 4194304], ['market', 134217728]]);\n/**\r\n * List of group permissions and their bit mask\r\n */\n\nvar groupScopes = new Map([['stories', 1], ['photos', 4], // ['app_widget', 64],\n['messages', 4096], ['docs', 131072], ['manage', 262144]]);\nvar debug = createDebug('vk-io:util:fetch-cookie');\nvar REDIRECT_CODES = [303, 301, 302];\nvar USER_AGENT_RE = /^User-Agent$/i;\n\nvar findUserAgent = function findUserAgent(headers) {\n  if (!headers) {\n    return null;\n  }\n\n  var key = Object.keys(headers).find(function (header) {\n    return USER_AGENT_RE.test(header);\n  });\n\n  if (!key) {\n    return null;\n  }\n\n  return headers[key];\n};\n\nvar fetchCookieDecorator = function fetchCookieDecorator() {\n  var jar = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new CookieJar();\n  var setCookie = promisify(jar.setCookie).bind(jar);\n  var getCookieString = promisify(jar.getCookieString).bind(jar); // @ts-ignore\n\n  return (\n    /*#__PURE__*/\n    function () {\n      var _fetchCookie = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var options,\n            previousCookie,\n            _options$headers,\n            headers,\n            response,\n            _response$headers$raw,\n            _response$headers$raw2,\n            cookies,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                _context.next = 3;\n                return getCookieString(String(url));\n\n              case 3:\n                previousCookie = _context.sent;\n                _options$headers = options.headers, headers = _options$headers === void 0 ? {} : _options$headers;\n\n                if (previousCookie) {\n                  headers.cookie = previousCookie;\n                }\n\n                debug('fetch url %s', url);\n                _context.next = 9;\n                return fetch(url, _objectSpread({}, options, {\n                  headers: headers\n                }));\n\n              case 9:\n                response = _context.sent;\n                _response$headers$raw = response.headers.raw(), _response$headers$raw2 = _response$headers$raw['set-cookie'], cookies = _response$headers$raw2 === void 0 ? [] : _response$headers$raw2;\n\n                if (!(cookies.length === 0)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", response);\n\n              case 13:\n                _context.next = 15;\n                return Promise.all(cookies.map(function (cookie) {\n                  return setCookie(cookie, response.url);\n                }));\n\n              case 15:\n                return _context.abrupt(\"return\", response);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function fetchCookie(_x) {\n        return _fetchCookie.apply(this, arguments);\n      }\n\n      return fetchCookie;\n    }()\n  );\n};\n\nvar fetchCookieFollowRedirectsDecorator = function fetchCookieFollowRedirectsDecorator(jar) {\n  var fetchCookie = fetchCookieDecorator(jar);\n  return (\n    /*#__PURE__*/\n    function () {\n      var _fetchCookieFollowRedirects = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(url) {\n        var options,\n            response,\n            isRedirect,\n            follow,\n            userAgent,\n            headers,\n            redirectResponse,\n            _args2 = arguments;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n                _context2.next = 3;\n                return fetchCookie(url, _objectSpread({}, options, {\n                  redirect: 'manual'\n                }));\n\n              case 3:\n                response = _context2.sent;\n                isRedirect = REDIRECT_CODES.includes(response.status);\n\n                if (!(isRedirect && options.redirect !== 'manual' && options.follow !== 0)) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                debug('Redirect to', response.headers.get('location'));\n\n                if (options.follow) {\n                  follow = options.follow - 1;\n                }\n\n                userAgent = findUserAgent(options.headers);\n                headers = userAgent ? {\n                  'User-Agent': userAgent\n                } : {};\n                _context2.next = 12;\n                return fetchCookieFollowRedirects(response.headers.get('location'), {\n                  method: 'GET',\n                  body: null,\n                  headers: headers,\n                  follow: follow\n                });\n\n              case 12:\n                redirectResponse = _context2.sent;\n                return _context2.abrupt(\"return\", redirectResponse);\n\n              case 14:\n                return _context2.abrupt(\"return\", response);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function fetchCookieFollowRedirects(_x2) {\n        return _fetchCookieFollowRedirects.apply(this, arguments);\n      }\n\n      return fetchCookieFollowRedirects;\n    }()\n  );\n};\n/**\r\n * Returns the bit mask of the user permission by name\r\n */\n\n\nvar getUsersPermissionsByName = function getUsersPermissionsByName(rawScope) {\n  var scope = !Array.isArray(rawScope) ? rawScope.split(/,\\s{0,}/) : rawScope;\n  var bitMask = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = scope[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var name = _step.value;\n      var scopeBit = userScopes.get(name);\n\n      if (scopeBit) {\n        bitMask += scopeBit;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return bitMask;\n};\n/**\r\n * Returns the bit mask of the group permission by name\r\n */\n\n\nvar getGroupsPermissionsByName = function getGroupsPermissionsByName(rawScope) {\n  var scope = !Array.isArray(rawScope) ? rawScope.split(/,\\s{0,}/) : rawScope;\n  var bitMask = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = scope[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var name = _step2.value;\n      var scopeBit = groupScopes.get(name);\n\n      if (scopeBit) {\n        bitMask += scopeBit;\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return bitMask;\n};\n/**\r\n * Parse form\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nvar parseFormField = function parseFormField($) {\n  var $form = $('form[action][method]'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var fields = {};\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = $form.serializeArray()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var _ref3 = _step3.value;\n      var name = _ref3.name;\n      var value = _ref3.value;\n      fields[name] = value;\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return {\n    action: $form.attr('action'),\n    fields: fields\n  };\n};\n/**\r\n * Returns full URL use Response\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nvar getFullURL = function getFullURL(action, _ref4) {\n  var url = _ref4.url;\n\n  if (action.startsWith('https://')) {\n    return new URL(action);\n  }\n\n  var _ref5 = new URL(url),\n      protocol = _ref5.protocol,\n      host = _ref5.host;\n\n  return new URL(action, \"\".concat(protocol, \"//\").concat(host));\n};\n\nvar debug$1 = createDebug('vk-io:authorization:direct');\nvar _AuthErrorCode = AuthErrorCode,\n    INVALID_PHONE_NUMBER = _AuthErrorCode.INVALID_PHONE_NUMBER,\n    AUTHORIZATION_FAILED = _AuthErrorCode.AUTHORIZATION_FAILED,\n    FAILED_PASSED_CAPTCHA = _AuthErrorCode.FAILED_PASSED_CAPTCHA,\n    FAILED_PASSED_TWO_FACTOR = _AuthErrorCode.FAILED_PASSED_TWO_FACTOR;\n/**\r\n * Number of two-factorial attempts\r\n */\n\nvar TWO_FACTOR_ATTEMPTS = 3;\n/**\r\n * Number of captcha attempts\r\n */\n\nvar CAPTCHA_ATTEMPTS = 3;\n/**\r\n * Phone number check action\r\n */\n\nvar ACTION_SECURITY_CODE = 'act=security';\n\nvar DirectAuth =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function DirectAuth(vk) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, DirectAuth);\n\n    this.captchaValidate = null;\n    this.captchaAttempts = 0;\n    this.twoFactorValidate = null;\n    this.twoFactorAttempts = 0;\n    this.vk = vk;\n    var _options$appId = options.appId,\n        appId = _options$appId === void 0 ? vk.options.appId : _options$appId,\n        _options$appSecret = options.appSecret,\n        appSecret = _options$appSecret === void 0 ? vk.options.appSecret : _options$appSecret,\n        _options$login = options.login,\n        login = _options$login === void 0 ? vk.options.login : _options$login,\n        _options$phone = options.phone,\n        phone = _options$phone === void 0 ? vk.options.phone : _options$phone,\n        _options$password = options.password,\n        password = _options$password === void 0 ? vk.options.password : _options$password,\n        _options$scope = options.scope,\n        scope = _options$scope === void 0 ? vk.options.authScope : _options$scope,\n        _options$agent = options.agent,\n        agent = _options$agent === void 0 ? vk.options.agent : _options$agent,\n        _options$timeout = options.timeout,\n        timeout = _options$timeout === void 0 ? vk.options.authTimeout : _options$timeout,\n        _options$apiVersion = options.apiVersion,\n        apiVersion = _options$apiVersion === void 0 ? vk.options.apiVersion : _options$apiVersion;\n    this.options = {\n      appId: appId,\n      appSecret: appSecret,\n      login: login,\n      phone: phone,\n      password: password,\n      agent: agent,\n      scope: scope,\n      timeout: timeout,\n      apiVersion: apiVersion\n    };\n    this.started = false;\n    this.captchaValidate = null;\n    this.captchaAttempts = 0;\n    this.twoFactorValidate = null;\n    this.twoFactorAttempts = 0;\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(DirectAuth, [{\n    key: \"fetch\",\n\n    /**\r\n     * Executes the HTTP request\r\n     */\n    value: function fetch(url) // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _this$options = this.options,\n          agent = _this$options.agent,\n          timeout = _this$options.timeout;\n      var _options$headers2 = options.headers,\n          headers = _options$headers2 === void 0 ? {} : _options$headers2;\n      return this.fetchCookie(url, _objectSpread({}, options, {\n        agent: agent,\n        timeout: timeout,\n        compress: false,\n        headers: _objectSpread({}, headers, {\n          'User-Agent': DESKTOP_USER_AGENT\n        })\n      }));\n    }\n    /**\r\n     * Returns permission page\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"getPermissionsPage\",\n    value: function getPermissionsPage() {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = this.options.scope;\n\n      if (scope === 'all' || scope === null) {\n        throw new Error('Required option authScope not set');\n      } else if (typeof scope !== 'number') {\n        scope = getUsersPermissionsByName(scope);\n      }\n\n      debug$1('auth scope %s', scope);\n      var _this$options2 = this.options,\n          appId = _this$options2.appId,\n          appSecret = _this$options2.appSecret,\n          login = _this$options2.login,\n          phone = _this$options2.phone,\n          password = _this$options2.password,\n          apiVersion = _this$options2.apiVersion; // @ts-ignore\n\n      var params = new URLSearchParams(_objectSpread({}, query, {\n        username: login || phone,\n        grant_type: 'password',\n        client_secret: appSecret,\n        '2fa_supported': this.vk.callbackService.hasTwoFactorHandler ? 1 : 0,\n        v: apiVersion,\n        client_id: appId,\n        password: password,\n        scope: scope\n      }));\n      var url = new URL(\"https://oauth.vk.com/token?\".concat(params));\n      return this.fetch(url, {\n        method: 'GET'\n      });\n    }\n    /**\r\n     * Runs authorization\r\n     */\n    // @ts-ignore\n    // eslint-disable-next-line consistent-return, @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var response, text, isProcessed, isJSON, _text, _text$email, email, _text$user_id, user, _text$expires_in, expires, token, $;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.started) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: 'Authorization already started!',\n                  code: AUTHORIZATION_FAILED\n                });\n\n              case 2:\n                this.started = true;\n                this.fetchCookie = fetchCookieFollowRedirectsDecorator();\n                _context3.next = 6;\n                return this.getPermissionsPage();\n\n              case 6:\n                response = _context3.sent;\n                isProcessed = true;\n\n              case 8:\n                if (!isProcessed) {\n                  _context3.next = 39;\n                  break;\n                }\n\n                _context3.next = 11;\n                return response.text();\n\n              case 11:\n                text = _context3.sent;\n                isJSON = true;\n\n                try {\n                  text = JSON.parse(text);\n                } catch (e) {\n                  isJSON = false;\n                }\n\n                if (!isJSON) {\n                  _context3.next = 36;\n                  break;\n                }\n\n                if (!('access_token' in text)) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                _text = text, _text$email = _text.email, email = _text$email === void 0 ? null : _text$email, _text$user_id = _text.user_id, user = _text$user_id === void 0 ? null : _text$user_id, _text$expires_in = _text.expires_in, expires = _text$expires_in === void 0 ? null : _text$expires_in, token = _text.access_token;\n                return _context3.abrupt(\"return\", {\n                  email: email,\n                  user: user !== null ? Number(user) : 0,\n                  token: token,\n                  expires: expires !== null ? Number(expires) : 0\n                });\n\n              case 18:\n                if (!('error' in text)) {\n                  _context3.next = 36;\n                  break;\n                }\n\n                if (!(text.error === 'invalid_client')) {\n                  _context3.next = 21;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: \"Invalid client (\".concat(text.error_description, \")\"),\n                  code: AUTHORIZATION_FAILED\n                });\n\n              case 21:\n                if (!(text.error === 'need_captcha')) {\n                  _context3.next = 26;\n                  break;\n                }\n\n                _context3.next = 24;\n                return this.processCaptcha(text);\n\n              case 24:\n                response = _context3.sent;\n                return _context3.abrupt(\"continue\", 8);\n\n              case 26:\n                if (!(text.error === 'need_validation')) {\n                  _context3.next = 35;\n                  break;\n                }\n\n                if (!('validation_type' in text)) {\n                  _context3.next = 32;\n                  break;\n                }\n\n                _context3.next = 30;\n                return this.processTwoFactor(text);\n\n              case 30:\n                response = _context3.sent;\n                return _context3.abrupt(\"continue\", 8);\n\n              case 32:\n                $ = load(text);\n                response = this.processSecurityForm(response, $);\n                return _context3.abrupt(\"continue\", 8);\n\n              case 35:\n                throw new AuthorizationError({\n                  message: 'Unsupported type validation',\n                  code: AUTHORIZATION_FAILED\n                });\n\n              case 36:\n                throw new AuthorizationError({\n                  message: 'Authorization failed',\n                  code: AUTHORIZATION_FAILED\n                });\n\n              case 39:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function run() {\n        return _run.apply(this, arguments);\n      }\n\n      return run;\n    }()\n    /**\r\n     * Process captcha\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"processCaptcha\",\n    value: function () {\n      var _processCaptcha = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(_ref6) {\n        var sid, src, _ref7, key, validate, response;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                sid = _ref6.captcha_sid, src = _ref6.captcha_img;\n                debug$1('captcha process');\n\n                if (this.captchaValidate !== null) {\n                  this.captchaValidate.reject(new AuthorizationError({\n                    message: 'Incorrect captcha code',\n                    code: FAILED_PASSED_CAPTCHA\n                  }));\n                  this.captchaValidate = null;\n                  this.captchaAttempts += 1;\n                }\n\n                if (!(this.captchaAttempts >= CAPTCHA_ATTEMPTS)) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: 'Maximum attempts passage captcha',\n                  code: FAILED_PASSED_CAPTCHA\n                });\n\n              case 5:\n                _context4.next = 7;\n                return this.vk.callbackService.processingCaptcha({\n                  type: CaptchaType.DIRECT_AUTH,\n                  sid: sid,\n                  src: src\n                });\n\n              case 7:\n                _ref7 = _context4.sent;\n                key = _ref7.key;\n                validate = _ref7.validate;\n                this.captchaValidate = validate;\n                _context4.next = 13;\n                return this.getPermissionsPage({\n                  captcha_sid: sid,\n                  captcha_key: key\n                });\n\n              case 13:\n                response = _context4.sent;\n                return _context4.abrupt(\"return\", response);\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function processCaptcha(_x3) {\n        return _processCaptcha.apply(this, arguments);\n      }\n\n      return processCaptcha;\n    }()\n    /**\r\n     * Process two-factor\r\n     */\n\n  }, {\n    key: \"processTwoFactor\",\n    value: function () {\n      var _processTwoFactor = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5( // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      _ref8 // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) {\n        var validationType, phoneMask, _ref9, code, validate, response;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                validationType = _ref8.validation_type, phoneMask = _ref8.phone_mask;\n                debug$1('process two-factor handle');\n\n                if (this.twoFactorValidate !== null) {\n                  this.twoFactorValidate.reject(new AuthorizationError({\n                    message: 'Incorrect two-factor code',\n                    code: FAILED_PASSED_TWO_FACTOR\n                  }));\n                  this.twoFactorValidate = null;\n                  this.twoFactorAttempts += 1;\n                }\n\n                if (!(this.twoFactorAttempts >= TWO_FACTOR_ATTEMPTS)) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: 'Failed passed two-factor authentication',\n                  code: FAILED_PASSED_TWO_FACTOR\n                });\n\n              case 5:\n                _context5.next = 7;\n                return this.vk.callbackService.processingTwoFactor({\n                  phoneMask: phoneMask,\n                  type: validationType === '2fa_app' ? 'app' : 'sms'\n                });\n\n              case 7:\n                _ref9 = _context5.sent;\n                code = _ref9.code;\n                validate = _ref9.validate;\n                this.twoFactorValidate = validate;\n                _context5.next = 13;\n                return this.getPermissionsPage({\n                  code: code\n                });\n\n              case 13:\n                response = _context5.sent;\n                return _context5.abrupt(\"return\", response);\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function processTwoFactor(_x4) {\n        return _processTwoFactor.apply(this, arguments);\n      }\n\n      return processTwoFactor;\n    }()\n    /**\r\n     * Process security form\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"processSecurityForm\",\n    value: function () {\n      var _processSecurityForm = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(response, $) {\n        var _this$options3, login, phone, number, $field, prefix, postfix, _parseFormField, action, fields, url, rewResponse;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                debug$1('process security form');\n                _this$options3 = this.options, login = _this$options3.login, phone = _this$options3.phone;\n\n                if (!(phone !== null)) {\n                  _context6.next = 6;\n                  break;\n                }\n\n                number = phone;\n                _context6.next = 11;\n                break;\n\n              case 6:\n                if (!(login !== null && !login.includes('@'))) {\n                  _context6.next = 10;\n                  break;\n                }\n\n                number = login;\n                _context6.next = 11;\n                break;\n\n              case 10:\n                throw new AuthorizationError({\n                  message: 'Missing phone number in the phone or login field',\n                  code: INVALID_PHONE_NUMBER\n                });\n\n              case 11:\n                if (typeof number === 'string') {\n                  number = number.trim().replace(/^(\\+|00)/, '');\n                }\n\n                number = String(number);\n                $field = $('.field_prefix');\n                prefix = $field.first().text().trim().replace('+', '').length;\n                postfix = $field.last().text().trim().length;\n                _parseFormField = parseFormField($), action = _parseFormField.action, fields = _parseFormField.fields;\n                fields.code = number.slice(prefix, number.length - postfix);\n                url = getFullURL(action, response);\n                _context6.next = 21;\n                return this.fetch(url, {\n                  method: 'POST',\n                  body: new URLSearchParams(fields)\n                });\n\n              case 21:\n                rewResponse = _context6.sent;\n\n                if (!rewResponse.url.includes(ACTION_SECURITY_CODE)) {\n                  _context6.next = 24;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: 'Invalid phone number',\n                  code: INVALID_PHONE_NUMBER\n                });\n\n              case 24:\n                return _context6.abrupt(\"return\", rewResponse);\n\n              case 25:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function processSecurityForm(_x5, _x6) {\n        return _processSecurityForm.apply(this, arguments);\n      }\n\n      return processSecurityForm;\n    }()\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n  }]);\n\n  return DirectAuth;\n}();\n\nvar debug$2 = createDebug('vk-io:authorization:implicit-flow');\nvar _AuthErrorCode2 = AuthErrorCode,\n    PAGE_BLOCKED = _AuthErrorCode2.PAGE_BLOCKED,\n    INVALID_PHONE_NUMBER$1 = _AuthErrorCode2.INVALID_PHONE_NUMBER,\n    AUTHORIZATION_FAILED$1 = _AuthErrorCode2.AUTHORIZATION_FAILED,\n    FAILED_PASSED_CAPTCHA$1 = _AuthErrorCode2.FAILED_PASSED_CAPTCHA,\n    FAILED_PASSED_TWO_FACTOR$1 = _AuthErrorCode2.FAILED_PASSED_TWO_FACTOR;\n/**\r\n * Blocked action\r\n */\n\nvar ACTION_BLOCKED = 'act=blocked';\n/**\r\n * Two-factor auth check action\r\n */\n\nvar ACTION_AUTH_CODE = 'act=authcheck';\n/**\r\n * Phone number check action\r\n */\n\nvar ACTION_SECURITY_CODE$1 = 'act=security';\n/**\r\n * Number of two-factorial attempts\r\n */\n\nvar TWO_FACTOR_ATTEMPTS$1 = 3;\n/**\r\n * Number of captcha attempts\r\n */\n\nvar CAPTCHA_ATTEMPTS$1 = 3;\n/**\r\n * Removes the prefix\r\n */\n\nvar REPLACE_PREFIX_RE = /^[+|0]+/;\n/**\r\n * Find location.href text\r\n */\n\nvar FIND_LOCATION_HREF_RE = /location\\.href\\s+=\\s+\"([^\"]+)\"/i;\n\nvar ImplicitFlow =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function ImplicitFlow(vk) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, ImplicitFlow);\n\n    this.captchaValidate = null;\n    this.captchaAttempts = 0;\n    this.twoFactorValidate = null;\n    this.twoFactorAttempts = 0;\n    this.vk = vk;\n    var _options$appId2 = options.appId,\n        appId = _options$appId2 === void 0 ? vk.options.appId : _options$appId2,\n        _options$appSecret2 = options.appSecret,\n        appSecret = _options$appSecret2 === void 0 ? vk.options.appSecret : _options$appSecret2,\n        _options$login2 = options.login,\n        login = _options$login2 === void 0 ? vk.options.login : _options$login2,\n        _options$phone2 = options.phone,\n        phone = _options$phone2 === void 0 ? vk.options.phone : _options$phone2,\n        _options$password2 = options.password,\n        password = _options$password2 === void 0 ? vk.options.password : _options$password2,\n        _options$scope2 = options.scope,\n        scope = _options$scope2 === void 0 ? vk.options.authScope : _options$scope2,\n        _options$agent2 = options.agent,\n        agent = _options$agent2 === void 0 ? vk.options.agent : _options$agent2,\n        _options$timeout2 = options.timeout,\n        timeout = _options$timeout2 === void 0 ? vk.options.authTimeout : _options$timeout2,\n        _options$apiVersion2 = options.apiVersion,\n        apiVersion = _options$apiVersion2 === void 0 ? vk.options.apiVersion : _options$apiVersion2;\n    this.options = {\n      appId: appId,\n      appSecret: appSecret,\n      login: login,\n      phone: phone,\n      password: password,\n      agent: agent,\n      scope: scope,\n      timeout: timeout,\n      apiVersion: apiVersion\n    };\n    this.jar = new CookieJar();\n    this.started = false;\n    this.captchaValidate = null;\n    this.captchaAttempts = 0;\n    this.twoFactorValidate = null;\n    this.twoFactorAttempts = 0;\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(ImplicitFlow, [{\n    key: \"getCookies\",\n\n    /**\r\n     * Returns cookie\r\n     */\n    value: function () {\n      var _getCookies = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        var jar, getCookieString, _ref10, _ref11, login, main;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                jar = this.jar;\n                getCookieString = promisify(jar.getCookieString).bind(jar);\n                _context7.next = 4;\n                return Promise.all([getCookieString('https://login.vk.com'), getCookieString('https://vk.com')]);\n\n              case 4:\n                _ref10 = _context7.sent;\n                _ref11 = _slicedToArray(_ref10, 2);\n                login = _ref11[0];\n                main = _ref11[1];\n                return _context7.abrupt(\"return\", {\n                  'login.vk.com': login,\n                  'vk.com': main\n                });\n\n              case 9:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getCookies() {\n        return _getCookies.apply(this, arguments);\n      }\n\n      return getCookies;\n    }()\n    /**\r\n     * Executes the HTTP request\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"fetch\",\n    value: function fetch(url) // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _this$options4 = this.options,\n          agent = _this$options4.agent,\n          timeout = _this$options4.timeout;\n      var _options$headers3 = options.headers,\n          headers = _options$headers3 === void 0 ? {} : _options$headers3;\n      return this.fetchCookie(url, _objectSpread({}, options, {\n        agent: agent,\n        timeout: timeout,\n        compress: false,\n        headers: _objectSpread({}, headers, {\n          'User-Agent': DESKTOP_USER_AGENT\n        })\n      }));\n    }\n    /**\r\n     * Runs authorization\r\n     */\n    // eslint-disable-next-line consistent-return, @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"run\",\n    value: function () {\n      var _run2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8() {\n        var response, isProcessed, _response, url, $, $error, $service, isError, errorText, _parseFormField2, action, locations, location;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!this.started) {\n                  _context8.next = 2;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: 'Authorization already started!',\n                  code: AUTHORIZATION_FAILED$1\n                });\n\n              case 2:\n                this.started = true;\n                this.fetchCookie = fetchCookieFollowRedirectsDecorator(this.jar);\n                debug$2('get permissions page'); // @ts-ignore\n\n                _context8.next = 7;\n                return this.getPermissionsPage();\n\n              case 7:\n                response = _context8.sent;\n                isProcessed = true;\n\n              case 9:\n                if (!isProcessed) {\n                  _context8.next = 64;\n                  break;\n                }\n\n                _response = response, url = _response.url;\n                debug$2('URL', url);\n\n                if (!url.includes(CALLBACK_BLANK)) {\n                  _context8.next = 14;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", {\n                  response: response\n                });\n\n              case 14:\n                if (!url.includes(ACTION_BLOCKED)) {\n                  _context8.next = 17;\n                  break;\n                }\n\n                debug$2('page blocked');\n                throw new AuthorizationError({\n                  message: 'Page blocked',\n                  code: PAGE_BLOCKED\n                });\n\n              case 17:\n                _context8.t0 = load;\n                _context8.next = 20;\n                return response.text();\n\n              case 20:\n                _context8.t1 = _context8.sent;\n                $ = (0, _context8.t0)(_context8.t1);\n\n                if (!url.includes(ACTION_AUTH_CODE)) {\n                  _context8.next = 27;\n                  break;\n                }\n\n                _context8.next = 25;\n                return this.processTwoFactorForm(response, $);\n\n              case 25:\n                response = _context8.sent;\n                return _context8.abrupt(\"continue\", 9);\n\n              case 27:\n                if (!url.includes(ACTION_SECURITY_CODE$1)) {\n                  _context8.next = 32;\n                  break;\n                }\n\n                _context8.next = 30;\n                return this.processSecurityForm(response, $);\n\n              case 30:\n                response = _context8.sent;\n                return _context8.abrupt(\"continue\", 9);\n\n              case 32:\n                $error = $('.box_error');\n                $service = $('.service_msg_warning');\n                isError = $error.length !== 0;\n\n                if (!(this.captchaValidate === null && (isError || $service.length !== 0))) {\n                  _context8.next = 38;\n                  break;\n                }\n\n                errorText = isError ? $error.text() : $service.text();\n                throw new AuthorizationError({\n                  message: \"Auth form error: \".concat(errorText),\n                  code: AUTHORIZATION_FAILED$1,\n                  pageHtml: $.html()\n                });\n\n              case 38:\n                if (!($('input[name=\"pass\"]').length !== 0)) {\n                  _context8.next = 43;\n                  break;\n                }\n\n                _context8.next = 41;\n                return this.processAuthForm(response, $);\n\n              case 41:\n                response = _context8.sent;\n                return _context8.abrupt(\"continue\", 9);\n\n              case 43:\n                if (!url.includes('act=')) {\n                  _context8.next = 45;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: 'Unsupported authorization event',\n                  code: AUTHORIZATION_FAILED$1,\n                  pageHtml: $.html()\n                });\n\n              case 45:\n                debug$2('auth with login & pass complete');\n\n                if (!($('form').length !== 0)) {\n                  _context8.next = 54;\n                  break;\n                }\n\n                _parseFormField2 = parseFormField($), action = _parseFormField2.action;\n                debug$2('url grant access', action);\n                _context8.next = 51;\n                return this.fetch(action, {\n                  method: 'POST'\n                });\n\n              case 51:\n                response = _context8.sent;\n                _context8.next = 62;\n                break;\n\n              case 54:\n                locations = $.html().match(FIND_LOCATION_HREF_RE);\n\n                if (!(locations === null)) {\n                  _context8.next = 57;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: 'Could not log in',\n                  code: AUTHORIZATION_FAILED$1,\n                  pageHtml: $.html()\n                });\n\n              case 57:\n                location = locations[1].replace('&cancel=1', '');\n                debug$2('url grant access', location);\n                _context8.next = 61;\n                return this.fetch(location, {\n                  method: 'POST'\n                });\n\n              case 61:\n                response = _context8.sent;\n\n              case 62:\n                _context8.next = 9;\n                break;\n\n              case 64:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function run() {\n        return _run2.apply(this, arguments);\n      }\n\n      return run;\n    }()\n    /**\r\n     * Process form auth\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"processAuthForm\",\n    value: function () {\n      var _processAuthForm = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(response, $) {\n        var _this$options5, login, password, phone, _parseFormField3, action, fields, src, _ref12, key, validate, url, pageResponse;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                debug$2('process login handle');\n\n                if (this.captchaValidate) {\n                  this.captchaValidate.reject(new AuthorizationError({\n                    message: 'Incorrect captcha code',\n                    code: FAILED_PASSED_CAPTCHA$1,\n                    pageHtml: $.html()\n                  }));\n                  this.captchaValidate = null;\n                  this.captchaAttempts += 1;\n                }\n\n                if (!(this.captchaAttempts > CAPTCHA_ATTEMPTS$1)) {\n                  _context9.next = 4;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: 'Maximum attempts passage captcha',\n                  code: FAILED_PASSED_CAPTCHA$1\n                });\n\n              case 4:\n                _this$options5 = this.options, login = _this$options5.login, password = _this$options5.password, phone = _this$options5.phone;\n                _parseFormField3 = parseFormField($), action = _parseFormField3.action, fields = _parseFormField3.fields;\n                fields.email = login || phone;\n                fields.pass = password;\n\n                if (!('captcha_sid' in fields)) {\n                  _context9.next = 17;\n                  break;\n                }\n\n                src = $('.oauth_captcha').attr('src') || $('#captcha').attr('src');\n                _context9.next = 12;\n                return this.vk.callbackService.processingCaptcha({\n                  type: CaptchaType.IMPLICIT_FLOW_AUTH,\n                  sid: fields.captcha_sid,\n                  src: src\n                });\n\n              case 12:\n                _ref12 = _context9.sent;\n                key = _ref12.key;\n                validate = _ref12.validate;\n                this.captchaValidate = validate;\n                fields.captcha_key = key;\n\n              case 17:\n                debug$2('Fields', fields);\n                url = new URL(action);\n                url.searchParams.set('utf8', '1');\n                _context9.next = 22;\n                return this.fetch(url, {\n                  method: 'POST',\n                  body: new URLSearchParams(fields)\n                });\n\n              case 22:\n                pageResponse = _context9.sent;\n                return _context9.abrupt(\"return\", pageResponse);\n\n              case 24:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function processAuthForm(_x7, _x8) {\n        return _processAuthForm.apply(this, arguments);\n      }\n\n      return processAuthForm;\n    }()\n    /**\r\n     * Process two-factor form\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"processTwoFactorForm\",\n    value: function () {\n      var _processTwoFactorForm = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(response, $) {\n        var _parseFormField4, action, fields, _ref13, code, validate, url, newResponse;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                debug$2('process two-factor handle');\n\n                if (this.twoFactorValidate !== null) {\n                  this.twoFactorValidate.reject(new AuthorizationError({\n                    message: 'Incorrect two-factor code',\n                    code: FAILED_PASSED_TWO_FACTOR$1,\n                    pageHtml: $.html()\n                  }));\n                  this.twoFactorAttempts += 1;\n                }\n\n                if (!(this.twoFactorAttempts >= TWO_FACTOR_ATTEMPTS$1)) {\n                  _context10.next = 4;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: 'Failed passed two-factor authentication',\n                  code: FAILED_PASSED_TWO_FACTOR$1\n                });\n\n              case 4:\n                _parseFormField4 = parseFormField($), action = _parseFormField4.action, fields = _parseFormField4.fields;\n                _context10.next = 7;\n                return this.vk.callbackService.processingTwoFactor({});\n\n              case 7:\n                _ref13 = _context10.sent;\n                code = _ref13.code;\n                validate = _ref13.validate;\n                fields.code = code;\n                _context10.prev = 11;\n                url = getFullURL(action, response);\n                _context10.next = 15;\n                return this.fetch(url, {\n                  method: 'POST',\n                  body: new URLSearchParams(fields)\n                });\n\n              case 15:\n                newResponse = _context10.sent;\n                return _context10.abrupt(\"return\", newResponse);\n\n              case 19:\n                _context10.prev = 19;\n                _context10.t0 = _context10[\"catch\"](11);\n                validate.reject(_context10.t0);\n                throw _context10.t0;\n\n              case 23:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[11, 19]]);\n      }));\n\n      function processTwoFactorForm(_x9, _x10) {\n        return _processTwoFactorForm.apply(this, arguments);\n      }\n\n      return processTwoFactorForm;\n    }()\n    /**\r\n     * Process security form\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"processSecurityForm\",\n    value: function () {\n      var _processSecurityForm2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11(response, $) {\n        var _this$options6, login, phone, number, $field, _$field$first$text$tr, prefix, _$field$last$text$tri, postfix, _parseFormField5, action, fields, url, newResponse;\n\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                debug$2('process security form');\n                _this$options6 = this.options, login = _this$options6.login, phone = _this$options6.phone;\n\n                if (!(phone !== null)) {\n                  _context11.next = 6;\n                  break;\n                }\n\n                number = phone;\n                _context11.next = 11;\n                break;\n\n              case 6:\n                if (!(login !== null && !login.includes('@'))) {\n                  _context11.next = 10;\n                  break;\n                }\n\n                number = login;\n                _context11.next = 11;\n                break;\n\n              case 10:\n                throw new AuthorizationError({\n                  message: 'Missing phone number in the phone or login field',\n                  code: INVALID_PHONE_NUMBER$1,\n                  pageHtml: $.html()\n                });\n\n              case 11:\n                number = String(number).trim().replace(REPLACE_PREFIX_RE, '');\n                $field = $('.field_prefix');\n                _$field$first$text$tr = $field.first().text().trim().replace(REPLACE_PREFIX_RE, ''), prefix = _$field$first$text$tr.length;\n                _$field$last$text$tri = $field.last().text().trim(), postfix = _$field$last$text$tri.length;\n                _parseFormField5 = parseFormField($), action = _parseFormField5.action, fields = _parseFormField5.fields;\n                fields.code = number.slice(prefix, number.length - postfix);\n                url = getFullURL(action, response);\n                _context11.next = 20;\n                return this.fetch(url, {\n                  method: 'POST',\n                  body: new URLSearchParams(fields)\n                });\n\n              case 20:\n                newResponse = _context11.sent;\n\n                if (!newResponse.url.includes(ACTION_SECURITY_CODE$1)) {\n                  _context11.next = 23;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: 'Invalid phone number',\n                  code: INVALID_PHONE_NUMBER$1,\n                  pageHtml: $.html()\n                });\n\n              case 23:\n                return _context11.abrupt(\"return\", newResponse);\n\n              case 24:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function processSecurityForm(_x11, _x12) {\n        return _processSecurityForm2.apply(this, arguments);\n      }\n\n      return processSecurityForm;\n    }()\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n    /**\r\n     * Returns CookieJar\r\n     */\n\n  }, {\n    key: \"cookieJar\",\n    get: function get() {\n      return this.jar;\n    }\n    /**\r\n     * Sets the CookieJar\r\n     */\n    ,\n    set: function set(jar) {\n      this.jar = jar;\n    }\n  }]);\n\n  return ImplicitFlow;\n}();\n\nvar debug$3 = createDebug('vk-io:authorization:implicit-flow-user');\nvar _AuthErrorCode3 = AuthErrorCode,\n    AUTHORIZATION_FAILED$2 = _AuthErrorCode3.AUTHORIZATION_FAILED;\n\nvar ImplicitFlowUser =\n/*#__PURE__*/\nfunction (_ImplicitFlow) {\n  _inherits(ImplicitFlowUser, _ImplicitFlow);\n\n  function ImplicitFlowUser() {\n    _classCallCheck(this, ImplicitFlowUser);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ImplicitFlowUser).apply(this, arguments));\n  }\n\n  _createClass(ImplicitFlowUser, [{\n    key: \"getPermissionsPage\",\n\n    /**\r\n     * Returns permission page\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    value: function getPermissionsPage() {\n      var appId = this.options.appId;\n      var scope = this.options.scope;\n\n      if (scope === 'all' || scope === null) {\n        throw new Error('Required option authScope not set');\n      } else if (typeof scope !== 'number') {\n        scope = getUsersPermissionsByName(scope);\n      }\n\n      debug$3('auth scope %s', scope); // @ts-ignore\n\n      var params = new URLSearchParams({\n        redirect_uri: CALLBACK_BLANK,\n        response_type: 'token',\n        display: 'page',\n        v: this.options.apiVersion,\n        client_id: appId,\n        scope: scope\n      });\n      var url = new URL(\"https://oauth.vk.com/authorize?\".concat(params));\n      return this.fetch(url, {\n        method: 'GET'\n      });\n    }\n    /**\r\n     * Starts authorization\r\n     */\n    // @ts-ignore\n\n  }, {\n    key: \"run\",\n    value: function () {\n      var _run3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12() {\n        var _ref14, response, _ref15, hash, params, user, expires;\n\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return _get(_getPrototypeOf(ImplicitFlowUser.prototype), \"run\", this).call(this);\n\n              case 2:\n                _ref14 = _context12.sent;\n                response = _ref14.response;\n                _ref15 = new URL(response.url), hash = _ref15.hash;\n\n                if (hash.startsWith('#')) {\n                  hash = hash.substring(1);\n                }\n\n                params = new URLSearchParams(hash);\n\n                if (!params.has('error')) {\n                  _context12.next = 9;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: \"Failed passed grant access: \".concat(params.get('error_description') || 'Unknown error'),\n                  code: AUTHORIZATION_FAILED$2\n                });\n\n              case 9:\n                user = params.get('user_id');\n                expires = params.get('expires_in');\n                return _context12.abrupt(\"return\", {\n                  email: params.get('email'),\n                  user: user !== null ? Number(user) : null,\n                  token: params.get('access_token'),\n                  expires: expires !== null ? Number(expires) : null\n                });\n\n              case 12:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function run() {\n        return _run3.apply(this, arguments);\n      }\n\n      return run;\n    }()\n  }]);\n\n  return ImplicitFlowUser;\n}(ImplicitFlow);\n\nvar debug$4 = createDebug('vk-io:authorization:implicit-flow-user');\nvar _AuthErrorCode4 = AuthErrorCode,\n    AUTHORIZATION_FAILED$3 = _AuthErrorCode4.AUTHORIZATION_FAILED;\n\nvar ImplicitFlowGroups =\n/*#__PURE__*/\nfunction (_ImplicitFlow2) {\n  _inherits(ImplicitFlowGroups, _ImplicitFlow2);\n\n  /**\r\n   * Constructor\r\n   */\n  function ImplicitFlowGroups(vk, options) {\n    var _this2;\n\n    _classCallCheck(this, ImplicitFlowGroups);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ImplicitFlowGroups).call(this, vk, options));\n    var _options$groups = options.groups,\n        groups = _options$groups === void 0 ? null : _options$groups;\n\n    if (groups === null) {\n      throw new VKError({\n        message: 'Groups list must have',\n        code: 'GROUPS_NOT_SET'\n      });\n    }\n\n    if (!Array.isArray(groups)) {\n      groups = [groups];\n    }\n\n    _this2.groups = groups.map(function (rawGroup) {\n      var group = Number(rawGroup);\n      return group < 0 ? -group : group;\n    });\n    return _this2;\n  }\n  /**\r\n   * Returns permission page\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  _createClass(ImplicitFlowGroups, [{\n    key: \"getPermissionsPage\",\n    value: function getPermissionsPage() {\n      var appId = this.options.appId;\n      var scope = this.options.scope;\n\n      if (scope === 'all' || scope === null) {\n        throw new Error('Required option authScope not set');\n      } else if (typeof scope !== 'number') {\n        scope = getGroupsPermissionsByName(scope);\n      }\n\n      debug$4('auth scope %s', scope); // @ts-ignore\n\n      var params = new URLSearchParams({\n        group_ids: this.groups.join(','),\n        redirect_uri: CALLBACK_BLANK,\n        response_type: 'token',\n        display: 'page',\n        v: this.options.apiVersion,\n        client_id: appId,\n        scope: scope\n      });\n      var url = new URL(\"https://oauth.vk.com/authorize?\".concat(params));\n      return this.fetch(url, {\n        method: 'GET'\n      });\n    }\n    /**\r\n     * Starts authorization\r\n     */\n    // @ts-ignore\n\n  }, {\n    key: \"run\",\n    value: function () {\n      var _run4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13() {\n        var _ref16, response, _ref17, hash, params, expires, tokens, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, _ref20, _ref19, name, value, _name$split, group;\n\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return _get(_getPrototypeOf(ImplicitFlowGroups.prototype), \"run\", this).call(this);\n\n              case 2:\n                _ref16 = _context13.sent;\n                response = _ref16.response;\n                _ref17 = new URL(response.url), hash = _ref17.hash;\n\n                if (hash.startsWith('#')) {\n                  hash = hash.substring(1);\n                }\n\n                params = new URLSearchParams(hash);\n\n                if (!params.has('error')) {\n                  _context13.next = 9;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: \"Failed passed grant access: \".concat(params.get('error_description') || 'Unknown error'),\n                  code: AUTHORIZATION_FAILED$3\n                });\n\n              case 9:\n                expires = params.get('expires_in');\n\n                if (expires !== null) {\n                  expires = Number(expires);\n                }\n\n                tokens = [];\n                _iteratorNormalCompletion4 = true;\n                _didIteratorError4 = false;\n                _iteratorError4 = undefined;\n                _context13.prev = 15;\n                _iterator4 = params[Symbol.iterator]();\n\n              case 17:\n                if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n                  _context13.next = 29;\n                  break;\n                }\n\n                _ref20 = _step4.value;\n                _ref19 = _slicedToArray(_ref20, 2);\n                name = _ref19[0];\n                value = _ref19[1];\n\n                if (name.startsWith('access_token_')) {\n                  _context13.next = 24;\n                  break;\n                }\n\n                return _context13.abrupt(\"continue\", 26);\n\n              case 24:\n                /* Example group access_token_XXXXX */\n                _name$split = name.split('_'), group = _name$split[2];\n                tokens.push({\n                  group: Number(group),\n                  token: value,\n                  expires: expires\n                });\n\n              case 26:\n                _iteratorNormalCompletion4 = true;\n                _context13.next = 17;\n                break;\n\n              case 29:\n                _context13.next = 35;\n                break;\n\n              case 31:\n                _context13.prev = 31;\n                _context13.t0 = _context13[\"catch\"](15);\n                _didIteratorError4 = true;\n                _iteratorError4 = _context13.t0;\n\n              case 35:\n                _context13.prev = 35;\n                _context13.prev = 36;\n\n                if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                  _iterator4.return();\n                }\n\n              case 38:\n                _context13.prev = 38;\n\n                if (!_didIteratorError4) {\n                  _context13.next = 41;\n                  break;\n                }\n\n                throw _iteratorError4;\n\n              case 41:\n                return _context13.finish(38);\n\n              case 42:\n                return _context13.finish(35);\n\n              case 43:\n                return _context13.abrupt(\"return\", tokens);\n\n              case 44:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this, [[15, 31, 35, 43], [36,, 38, 42]]);\n      }));\n\n      function run() {\n        return _run4.apply(this, arguments);\n      }\n\n      return run;\n    }()\n  }]);\n\n  return ImplicitFlowGroups;\n}(ImplicitFlow);\n\nvar debug$5 = createDebug('vk-io:authorization:account-verification');\nvar _AuthErrorCode5 = AuthErrorCode,\n    INVALID_PHONE_NUMBER$2 = _AuthErrorCode5.INVALID_PHONE_NUMBER,\n    AUTHORIZATION_FAILED$4 = _AuthErrorCode5.AUTHORIZATION_FAILED,\n    FAILED_PASSED_CAPTCHA$2 = _AuthErrorCode5.FAILED_PASSED_CAPTCHA,\n    FAILED_PASSED_TWO_FACTOR$2 = _AuthErrorCode5.FAILED_PASSED_TWO_FACTOR;\n/**\r\n * Two-factor auth check action\r\n */\n\nvar ACTION_AUTH_CODE$1 = 'act=authcheck';\n/**\r\n * Phone number check action\r\n */\n\nvar ACTION_SECURITY_CODE$2 = 'act=security';\n/**\r\n * Bind a phone to a page\r\n */\n\nvar ACTION_VALIDATE = 'act=validate';\n/**\r\n * Bind a phone to a page action\r\n */\n\nvar ACTION_CAPTCHA = 'act=captcha';\n/**\r\n * Number of two-factorial attempts\r\n */\n\nvar TWO_FACTOR_ATTEMPTS$2 = 3;\n\nvar AccountVerification =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function AccountVerification(vk) {\n    _classCallCheck(this, AccountVerification);\n\n    this.captchaValidate = null;\n    this.captchaAttempts = 0;\n    this.twoFactorValidate = null;\n    this.twoFactorAttempts = 0;\n    this.vk = vk;\n    var _vk$options = vk.options,\n        agent = _vk$options.agent,\n        login = _vk$options.login,\n        phone = _vk$options.phone;\n    this.options = {\n      login: login,\n      phone: phone,\n      agent: agent\n    };\n    this.jar = new CookieJar();\n    this.fetchCookie = fetchCookieFollowRedirectsDecorator(this.jar);\n    this.captchaValidate = null;\n    this.captchaAttempts = 0;\n    this.twoFactorValidate = null;\n    this.twoFactorAttempts = 0;\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(AccountVerification, [{\n    key: \"fetch\",\n\n    /**\r\n     * Executes the HTTP request\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    value: function fetch(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var agent = this.options.agent;\n      var _options$headers4 = options.headers,\n          headers = _options$headers4 === void 0 ? {} : _options$headers4;\n      return this.fetchCookie(url, _objectSpread({}, options, {\n        agent: agent,\n        timeout: this.vk.options.authTimeout,\n        compress: false,\n        headers: _objectSpread({}, headers, {\n          'User-Agent': DESKTOP_USER_AGENT\n        })\n      }));\n    }\n    /**\r\n     * Runs authorization\r\n     */\n    // @ts-ignore\n    // eslint-disable-next-line consistent-return, @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"run\",\n    value: function () {\n      var _run5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee14(redirectUri) {\n        var response, isProcessed, _response2, url, _ref21, hash, params, user, $;\n\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.next = 2;\n                return this.fetch(redirectUri, {\n                  method: 'GET'\n                });\n\n              case 2:\n                response = _context14.sent;\n                isProcessed = true;\n\n              case 4:\n                if (!isProcessed) {\n                  _context14.next = 42;\n                  break;\n                }\n\n                _response2 = response, url = _response2.url;\n\n                if (!url.includes(CALLBACK_BLANK)) {\n                  _context14.next = 14;\n                  break;\n                }\n\n                _ref21 = new URL(response.url), hash = _ref21.hash;\n\n                if (hash.startsWith('#')) {\n                  hash = hash.substring(1);\n                }\n\n                params = new URLSearchParams(hash);\n\n                if (!params.has('error')) {\n                  _context14.next = 12;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: \"Failed passed grant access: \".concat(params.get('error_description') || 'Unknown error'),\n                  code: AUTHORIZATION_FAILED$4\n                });\n\n              case 12:\n                user = params.get('user_id');\n                return _context14.abrupt(\"return\", {\n                  user: user !== null ? Number(user) : null,\n                  token: params.get('access_token')\n                });\n\n              case 14:\n                _context14.t0 = load;\n                _context14.next = 17;\n                return response.text();\n\n              case 17:\n                _context14.t1 = _context14.sent;\n                $ = (0, _context14.t0)(_context14.t1);\n\n                if (!url.includes(ACTION_AUTH_CODE$1)) {\n                  _context14.next = 24;\n                  break;\n                }\n\n                _context14.next = 22;\n                return this.processTwoFactorForm(response, $);\n\n              case 22:\n                response = _context14.sent;\n                return _context14.abrupt(\"continue\", 4);\n\n              case 24:\n                if (!url.includes(ACTION_SECURITY_CODE$2)) {\n                  _context14.next = 29;\n                  break;\n                }\n\n                _context14.next = 27;\n                return this.processSecurityForm(response, $);\n\n              case 27:\n                response = _context14.sent;\n                return _context14.abrupt(\"continue\", 4);\n\n              case 29:\n                if (!url.includes(ACTION_VALIDATE)) {\n                  _context14.next = 34;\n                  break;\n                }\n\n                _context14.next = 32;\n                return this.processValidateForm(response, $);\n\n              case 32:\n                response = _context14.sent;\n                return _context14.abrupt(\"continue\", 4);\n\n              case 34:\n                if (!url.includes(ACTION_CAPTCHA)) {\n                  _context14.next = 39;\n                  break;\n                }\n\n                _context14.next = 37;\n                return this.processCaptchaForm(response, $);\n\n              case 37:\n                response = _context14.sent;\n                return _context14.abrupt(\"continue\", 4);\n\n              case 39:\n                throw new AuthorizationError({\n                  message: 'Account verification failed',\n                  code: AUTHORIZATION_FAILED$4\n                });\n\n              case 42:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function run(_x13) {\n        return _run5.apply(this, arguments);\n      }\n\n      return run;\n    }()\n    /**\r\n     * Process two-factor form\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"processTwoFactorForm\",\n    value: function () {\n      var _processTwoFactorForm2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee15(response, $) {\n        var _parseFormField6, action, fields, _ref22, code, validate, url, newResponse;\n\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                debug$5('process two-factor handle');\n\n                if (this.twoFactorValidate) {\n                  this.twoFactorValidate.reject(new AuthorizationError({\n                    message: 'Incorrect two-factor code',\n                    code: FAILED_PASSED_TWO_FACTOR$2,\n                    pageHtml: $.html()\n                  }));\n                  this.twoFactorAttempts += 1;\n                }\n\n                if (!(this.twoFactorAttempts >= TWO_FACTOR_ATTEMPTS$2)) {\n                  _context15.next = 4;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: 'Failed passed two-factor authentication',\n                  code: FAILED_PASSED_TWO_FACTOR$2\n                });\n\n              case 4:\n                _parseFormField6 = parseFormField($), action = _parseFormField6.action, fields = _parseFormField6.fields;\n                _context15.next = 7;\n                return this.vk.callbackService.processingTwoFactor({});\n\n              case 7:\n                _ref22 = _context15.sent;\n                code = _ref22.code;\n                validate = _ref22.validate;\n                fields.code = code;\n                _context15.prev = 11;\n                url = getFullURL(action, response);\n                _context15.next = 15;\n                return this.fetch(url, {\n                  method: 'POST',\n                  body: new URLSearchParams(fields)\n                });\n\n              case 15:\n                newResponse = _context15.sent;\n                return _context15.abrupt(\"return\", newResponse);\n\n              case 19:\n                _context15.prev = 19;\n                _context15.t0 = _context15[\"catch\"](11);\n                validate.reject(_context15.t0);\n                throw _context15.t0;\n\n              case 23:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this, [[11, 19]]);\n      }));\n\n      function processTwoFactorForm(_x14, _x15) {\n        return _processTwoFactorForm2.apply(this, arguments);\n      }\n\n      return processTwoFactorForm;\n    }()\n    /**\r\n     * Process security form\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"processSecurityForm\",\n    value: function () {\n      var _processSecurityForm3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee16(response, $) {\n        var _this$options7, login, phone, number, $field, prefix, postfix, _parseFormField7, action, fields, url, rewResponse;\n\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                debug$5('process security form');\n                _this$options7 = this.options, login = _this$options7.login, phone = _this$options7.phone;\n\n                if (!(phone !== null)) {\n                  _context16.next = 6;\n                  break;\n                }\n\n                number = phone;\n                _context16.next = 11;\n                break;\n\n              case 6:\n                if (!(login !== null && !login.includes('@'))) {\n                  _context16.next = 10;\n                  break;\n                }\n\n                number = login;\n                _context16.next = 11;\n                break;\n\n              case 10:\n                throw new AuthorizationError({\n                  message: 'Missing phone number in the phone or login field',\n                  code: INVALID_PHONE_NUMBER$2\n                });\n\n              case 11:\n                if (typeof number === 'string') {\n                  number = number.trim().replace(/^(\\+|00)/, '');\n                }\n\n                number = String(number);\n                $field = $('.field_prefix');\n                prefix = $field.first().text().trim().replace('+', '').length;\n                postfix = $field.last().text().trim().length;\n                _parseFormField7 = parseFormField($), action = _parseFormField7.action, fields = _parseFormField7.fields;\n                fields.code = number.slice(prefix, number.length - postfix);\n                url = getFullURL(action, response);\n                _context16.next = 21;\n                return this.fetch(url, {\n                  method: 'POST',\n                  body: new URLSearchParams(fields)\n                });\n\n              case 21:\n                rewResponse = _context16.sent;\n\n                if (!rewResponse.url.includes(ACTION_SECURITY_CODE$2)) {\n                  _context16.next = 24;\n                  break;\n                }\n\n                throw new AuthorizationError({\n                  message: 'Invalid phone number',\n                  code: INVALID_PHONE_NUMBER$2\n                });\n\n              case 24:\n                return _context16.abrupt(\"return\", rewResponse);\n\n              case 25:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function processSecurityForm(_x16, _x17) {\n        return _processSecurityForm3.apply(this, arguments);\n      }\n\n      return processSecurityForm;\n    }()\n    /**\r\n     * Process validation form\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"processValidateForm\",\n    value: function processValidateForm(response, $) {\n      var href = $('#activation_wrap a').attr('href');\n      var url = getFullURL(href, response);\n      return this.fetch(url, {\n        method: 'GET'\n      });\n    }\n    /**\r\n     * Process captcha form\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"processCaptchaForm\",\n    value: function () {\n      var _processCaptchaForm = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee17(response, $) {\n        var _parseFormField8, action, fields, src, _ref23, key, validate, url, pageResponse;\n\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                if (this.captchaValidate !== null) {\n                  this.captchaValidate.reject(new AuthorizationError({\n                    message: 'Incorrect captcha code',\n                    code: FAILED_PASSED_CAPTCHA$2\n                  }));\n                  this.captchaValidate = null;\n                  this.captchaAttempts += 1;\n                }\n\n                _parseFormField8 = parseFormField($), action = _parseFormField8.action, fields = _parseFormField8.fields;\n                src = $('.captcha_img').attr('src');\n                _context17.next = 5;\n                return this.vk.callbackService.processingCaptcha({\n                  type: CaptchaType.ACCOUNT_VERIFICATION,\n                  sid: fields.captcha_sid,\n                  src: src\n                });\n\n              case 5:\n                _ref23 = _context17.sent;\n                key = _ref23.key;\n                validate = _ref23.validate;\n                this.captchaValidate = validate;\n                fields.captcha_key = key;\n                url = getFullURL(action, response);\n                url.searchParams.set('utf8', '1');\n                _context17.next = 14;\n                return this.fetch(url, {\n                  method: 'POST',\n                  body: new URLSearchParams(fields)\n                });\n\n              case 14:\n                pageResponse = _context17.sent;\n                return _context17.abrupt(\"return\", pageResponse);\n\n              case 16:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function processCaptchaForm(_x18, _x19) {\n        return _processCaptchaForm.apply(this, arguments);\n      }\n\n      return processCaptchaForm;\n    }()\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n  }]);\n\n  return AccountVerification;\n}();\n\nvar openAPIParams = ['expire', 'secret', 'mid', 'sid', 'sig'];\n\nvar Authorization =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function Authorization(vk) {\n    _classCallCheck(this, Authorization);\n\n    this.vk = vk;\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(Authorization, [{\n    key: \"implicitFlowUser\",\n\n    /**\r\n     * Standalone authorization with login & password\r\n     */\n    value: function implicitFlowUser() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return new ImplicitFlowUser(this.vk, options);\n    }\n    /**\r\n     * Standalone authorization with login & password for group\r\n     */\n\n  }, {\n    key: \"implicitFlowGroups\",\n    value: function implicitFlowGroups(groups) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // @ts-ignore\n      return new ImplicitFlowGroups(this.vk, _objectSpread({}, options, {\n        groups: groups\n      }));\n    }\n    /**\r\n     * Direct authorization with login & login in user application\r\n     */\n\n  }, {\n    key: \"direct\",\n    value: function direct() {\n      var _this$vk$options = this.vk.options,\n          appId = _this$vk$options.appId,\n          appSecret = _this$vk$options.appSecret; // @ts-ignore\n\n      return new DirectAuth(this.vk, {\n        appId: appId,\n        appSecret: appSecret\n      });\n    }\n    /**\r\n     * Direct authorization with login & login in android application\r\n     */\n\n  }, {\n    key: \"androidApp\",\n    value: function androidApp() {\n      return new DirectAuth(this.vk, {\n        appId: 2274003,\n        appSecret: 'hHbZxrka2uZ6jB1inYsH'\n      });\n    }\n    /**\r\n     * Direct authorization with login & login in windows application\r\n     */\n\n  }, {\n    key: \"windowsApp\",\n    value: function windowsApp() {\n      return new DirectAuth(this.vk, {\n        appId: 3697615,\n        appSecret: 'AlVXZFMUqyrnABp8ncuU'\n      });\n    }\n    /**\r\n     * Direct authorization with login & login in windows phone application\r\n     */\n\n  }, {\n    key: \"windowsPhoneApp\",\n    value: function windowsPhoneApp() {\n      return new DirectAuth(this.vk, {\n        appId: 3502557,\n        appSecret: 'PEObAuQi6KloPM4T30DV'\n      });\n    }\n    /**\r\n     * Direct authorization with login & login in iphone application\r\n     */\n\n  }, {\n    key: \"iphoneApp\",\n    value: function iphoneApp() {\n      return new DirectAuth(this.vk, {\n        appId: 3140623,\n        appSecret: 'VeWdmVclDCtn6ihuP1nt'\n      });\n    }\n    /**\r\n     * Direct authorization with login & login in ipad application\r\n     */\n\n  }, {\n    key: \"ipadApp\",\n    value: function ipadApp() {\n      return new DirectAuth(this.vk, {\n        appId: 3682744,\n        appSecret: 'mY6CDUswIVdJLCD3j15n'\n      });\n    }\n    /**\r\n     * Direct authorization with login & login in VK Me application\r\n     */\n\n  }, {\n    key: \"vkMeApp\",\n    value: function vkMeApp() {\n      return new DirectAuth(this.vk, {\n        appId: 6146827,\n        appSecret: 'qVxWRF1CwHERuIrKBnqe'\n      });\n    }\n    /**\r\n     * Verifies that the user is authorized through the Open API\r\n     */\n\n  }, {\n    key: \"userAuthorizedThroughOpenAPI\",\n    value: function () {\n      var _userAuthorizedThroughOpenAPI = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee18( // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      params) {\n        var paramsKeys, sign, _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, key, isNotExpire, authorized;\n\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                paramsKeys = Object.keys(params).filter(function (key) {\n                  return openAPIParams.includes(key);\n                }).sort();\n                sign = '';\n                _iteratorNormalCompletion5 = true;\n                _didIteratorError5 = false;\n                _iteratorError5 = undefined;\n                _context18.prev = 5;\n\n                for (_iterator5 = paramsKeys[Symbol.iterator](); !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                  key = _step5.value;\n\n                  if (key !== 'sig') {\n                    sign += \"\".concat(key, \"=\").concat(params[key]);\n                  }\n                }\n\n                _context18.next = 13;\n                break;\n\n              case 9:\n                _context18.prev = 9;\n                _context18.t0 = _context18[\"catch\"](5);\n                _didIteratorError5 = true;\n                _iteratorError5 = _context18.t0;\n\n              case 13:\n                _context18.prev = 13;\n                _context18.prev = 14;\n\n                if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                  _iterator5.return();\n                }\n\n              case 16:\n                _context18.prev = 16;\n\n                if (!_didIteratorError5) {\n                  _context18.next = 19;\n                  break;\n                }\n\n                throw _iteratorError5;\n\n              case 19:\n                return _context18.finish(16);\n\n              case 20:\n                return _context18.finish(13);\n\n              case 21:\n                sign += this.vk.options.appSecret;\n                sign = createHash('md5').update(sign).digest('hex');\n                isNotExpire = params.expire > Date.now() / 1000;\n                authorized = params.sig === sign && isNotExpire;\n                return _context18.abrupt(\"return\", {\n                  authorized: authorized\n                });\n\n              case 26:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this, [[5, 9, 13, 21], [14,, 16, 20]]);\n      }));\n\n      function userAuthorizedThroughOpenAPI(_x20) {\n        return _userAuthorizedThroughOpenAPI.apply(this, arguments);\n      }\n\n      return userAuthorizedThroughOpenAPI;\n    }()\n    /**\r\n     * Custom inspect object\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: inspect.custom,\n    value: function value(depth, options) {\n      var name = this.constructor.name;\n      return \"\".concat(options.stylize(name, 'special'), \" {}\");\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n  }]);\n\n  return Authorization;\n}();\n\nexport default Authorization;\nexport { AccountVerification, AuthErrorCode, Authorization, AuthorizationError, DirectAuth as DirectAuthorization, ImplicitFlow, ImplicitFlowGroups, ImplicitFlowUser, groupScopes, userScopes };","map":null,"metadata":{},"sourceType":"module"}