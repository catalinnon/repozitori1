{"ast":null,"code":"// AppRegistry transitively installs YellowBox as a side effect, which overrides various console\n// methods that we need to set up before we override them\nimport { AppRegistry } from 'react-native';\nAppRegistry; // eslint-disable-line no-unused-expressions\n// NOTE(2018-10-29): temporarily filter out cyclic dependency warnings here since they are noisy and\n// each warning symbolicates a stack trace, which is slow when there are many warnings\n// NOTE(2019-05-27): temporarily filter out LottieAnimationView warnings triggered by\n// unmaintained react-native-safe-module dependency.\n\nvar originalWarn = console.warn;\n\nconsole.warn = function warn() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length > 0 && typeof args[0] === 'string' && (/^Require cycle: .*node_modules/.test(args[0]) || /Use UIManager\\.getViewManagerConfig\\('LottieAnimationView'\\) instead\\./.test(args[0]) || /ReactNative\\.NativeModules\\.LottieAnimationView\\.getConstants/.test(args[0]))) {\n    return;\n  }\n\n  originalWarn.apply(console, args);\n};\n\nvar originalError = console.error;\n\nconsole.error = function error() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  if (args.length > 0 && typeof args[0] === 'string' && /^Warning: .* has been extracted/.test(args[0])) {\n    return;\n  }\n\n  originalError.apply(console, args);\n};","map":null,"metadata":{},"sourceType":"module"}