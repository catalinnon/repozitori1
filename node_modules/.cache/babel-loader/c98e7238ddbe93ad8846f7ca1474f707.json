{"ast":null,"code":"import _construct from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/construct\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _get from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _wrapNativeSuper from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/wrapNativeSuper\";\nimport _defineProperty from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\NodeJS\\\\TestVKMiniApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\n\nvar _attachmentsTypes;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createServer, Agent } from 'https';\nimport { inspect, deprecate, promisify } from 'util';\nimport fetch from 'node-fetch';\nimport createDebug from 'debug';\nimport { URLSearchParams, URL } from 'url';\nimport { randomBytes } from 'crypto';\nimport { createReadStream } from 'fs';\nimport { Stream, PassThrough, Readable } from 'stream';\nimport { SandwichStream } from 'sandwich-stream';\nimport { compose, noopNext, getOptionalMiddleware, Composer as Composer$1 } from 'middleware-io';\nimport { createServer as createServer$1 } from 'http';\n\nvar APIMethods = function APIMethods() {\n  _classCallCheck(this, APIMethods);\n};\n\nvar version = \"4.0.0-rc.28\"; // @ts-ignore\n\n/**\r\n * Chat peer ID\r\n */\n\nvar CHAT_PEER = 2e9;\n/**\r\n * Minimum time interval api with error\r\n */\n\nvar MINIMUM_TIME_INTERVAL_API = 1133;\n/**\r\n * Default options\r\n */\n\nvar defaultOptions = {\n  // @ts-ignore\n  agent: null,\n  token: null,\n  language: null,\n  appId: null,\n  appSecret: null,\n  login: null,\n  phone: null,\n  password: null,\n  authScope: null,\n  authTimeout: 10e3,\n  apiMode: 'sequential',\n  apiWait: 3e3,\n  apiLimit: 3,\n  apiVersion: '5.103',\n  apiBaseUrl: 'https://api.vk.com/method',\n  apiAttempts: 3,\n  apiTimeout: 10e3,\n  apiHeaders: {\n    'User-Agent': \"vk-io/\".concat(version, \" (+https://github.com/negezor/vk-io)\")\n  },\n  apiExecuteCount: 25,\n  apiExecuteMethods: ['messages.send'],\n  uploadTimeout: 20e3,\n  pollingWait: 3e3,\n  pollingAttempts: 3,\n  pollingGroupId: null,\n  webhookSecret: null,\n  webhookConfirmation: null,\n  collectAttempts: 3\n};\n/**\r\n * The attachment types\r\n */\n\nvar AttachmentType;\n\n(function (AttachmentType) {\n  AttachmentType[\"AUDIO\"] = \"audio\";\n  AttachmentType[\"AUDIO_MESSAGE\"] = \"audio_message\";\n  AttachmentType[\"GRAFFITI\"] = \"graffiti\";\n  AttachmentType[\"DOCUMENT\"] = \"doc\";\n  AttachmentType[\"GIFT\"] = \"gift\";\n  AttachmentType[\"LINK\"] = \"link\";\n  AttachmentType[\"MARKET_ALBUM\"] = \"market_album\";\n  AttachmentType[\"MARKET\"] = \"market\";\n  AttachmentType[\"PHOTO\"] = \"photo\";\n  AttachmentType[\"STICKER\"] = \"sticker\";\n  AttachmentType[\"VIDEO\"] = \"video\";\n  AttachmentType[\"WALL_REPLY\"] = \"wall_reply\";\n  AttachmentType[\"WALL\"] = \"wall\";\n  AttachmentType[\"POLL\"] = \"poll\";\n  AttachmentType[\"STORY\"] = \"story\";\n})(AttachmentType || (AttachmentType = {}));\n\nvar attachmentTypes = AttachmentType;\n/**\r\n * Default extensions for attachments\r\n */\n\nvar DefaultExtension;\n\n(function (DefaultExtension) {\n  DefaultExtension[\"photo\"] = \"jpg\";\n  DefaultExtension[\"video\"] = \"mp4\";\n  DefaultExtension[\"audio\"] = \"mp3\";\n  DefaultExtension[\"graffiti\"] = \"png\";\n  DefaultExtension[\"audioMessage\"] = \"ogg\";\n})(DefaultExtension || (DefaultExtension = {}));\n/**\r\n * Default content type for attachments\r\n */\n\n\nvar DefaultContentType;\n\n(function (DefaultContentType) {\n  DefaultContentType[\"photo\"] = \"image/jpeg\";\n  DefaultContentType[\"video\"] = \"video/mp4\";\n  DefaultContentType[\"audio\"] = \"audio/mp3\";\n  DefaultContentType[\"graffiti\"] = \"image/png\";\n  DefaultContentType[\"audioMessage\"] = \"audio/ogg\";\n})(DefaultContentType || (DefaultContentType = {}));\n/**\r\n * Sources of captcha\r\n */\n\n\nvar CaptchaType;\n\n(function (CaptchaType) {\n  CaptchaType[CaptchaType[\"API\"] = 0] = \"API\";\n  CaptchaType[CaptchaType[\"DIRECT_AUTH\"] = 1] = \"DIRECT_AUTH\";\n  CaptchaType[CaptchaType[\"IMPLICIT_FLOW_AUTH\"] = 2] = \"IMPLICIT_FLOW_AUTH\";\n  CaptchaType[CaptchaType[\"ACCOUNT_VERIFICATION\"] = 3] = \"ACCOUNT_VERIFICATION\";\n})(CaptchaType || (CaptchaType = {}));\n\nvar captchaTypes = CaptchaType;\n/**\r\n * Message source\r\n */\n\nvar MessageSource;\n\n(function (MessageSource) {\n  MessageSource[\"USER\"] = \"user\";\n  MessageSource[\"CHAT\"] = \"chat\";\n  MessageSource[\"GROUP\"] = \"group\";\n  MessageSource[\"EMAIL\"] = \"email\";\n})(MessageSource || (MessageSource = {}));\n\nvar messageSources = MessageSource;\n/**\r\n * Resource types\r\n */\n\nvar ResourceType;\n\n(function (ResourceType) {\n  ResourceType[\"USER\"] = \"user\";\n  ResourceType[\"GROUP\"] = \"group\";\n  ResourceType[\"APPLICATION\"] = \"application\";\n})(ResourceType || (ResourceType = {}));\n\nvar resourceTypes = ResourceType;\n/**\r\n * Updates sources\r\n */\n\nvar UpdateSource;\n\n(function (UpdateSource) {\n  UpdateSource[\"POLLING\"] = \"POLLING\";\n  UpdateSource[\"WEBHOOK\"] = \"WEBHOOK\";\n  UpdateSource[\"WEBSOCKET\"] = \"WEBSOCKET\";\n})(UpdateSource || (UpdateSource = {}));\n/**\r\n * API error codes\r\n */\n\n\nvar APIErrorCode;\n\n(function (APIErrorCode) {\n  APIErrorCode[APIErrorCode[\"UNKNOWN_ERROR\"] = 1] = \"UNKNOWN_ERROR\";\n  APIErrorCode[APIErrorCode[\"APP_SWITCHED_OFF\"] = 2] = \"APP_SWITCHED_OFF\";\n  APIErrorCode[APIErrorCode[\"UNKNOWN_METHOD\"] = 3] = \"UNKNOWN_METHOD\";\n  APIErrorCode[APIErrorCode[\"INVALID_SIGNATURE\"] = 4] = \"INVALID_SIGNATURE\";\n  APIErrorCode[APIErrorCode[\"AUTH_FAILURE\"] = 5] = \"AUTH_FAILURE\";\n  APIErrorCode[APIErrorCode[\"TOO_MANY_REQUESTS\"] = 6] = \"TOO_MANY_REQUESTS\";\n  APIErrorCode[APIErrorCode[\"SCOPE_NEEDED\"] = 7] = \"SCOPE_NEEDED\";\n  APIErrorCode[APIErrorCode[\"INCORRECT_REQUEST\"] = 8] = \"INCORRECT_REQUEST\";\n  APIErrorCode[APIErrorCode[\"TOO_MANY_SIMILAR_ACTIONS\"] = 9] = \"TOO_MANY_SIMILAR_ACTIONS\";\n  APIErrorCode[APIErrorCode[\"INTERNAL_ERROR\"] = 10] = \"INTERNAL_ERROR\";\n  APIErrorCode[APIErrorCode[\"RESPONSE_SIZE_TOO_BIG\"] = 13] = \"RESPONSE_SIZE_TOO_BIG\";\n  APIErrorCode[APIErrorCode[\"CAPTCHA_REQUIRED\"] = 14] = \"CAPTCHA_REQUIRED\";\n  APIErrorCode[APIErrorCode[\"ACCESS_DENIED\"] = 15] = \"ACCESS_DENIED\";\n  APIErrorCode[APIErrorCode[\"USER_VALIDATION_REQUIRED\"] = 17] = \"USER_VALIDATION_REQUIRED\";\n  APIErrorCode[APIErrorCode[\"PAGE_BLOCKED\"] = 18] = \"PAGE_BLOCKED\";\n  APIErrorCode[APIErrorCode[\"STANDALONE_ONLY\"] = 20] = \"STANDALONE_ONLY\";\n  APIErrorCode[APIErrorCode[\"STANDALONE_AND_OPEN_API_ONLY\"] = 21] = \"STANDALONE_AND_OPEN_API_ONLY\";\n  APIErrorCode[APIErrorCode[\"METHOD_DISABLED\"] = 23] = \"METHOD_DISABLED\";\n  APIErrorCode[APIErrorCode[\"CONFIRMATION_REQUIRED\"] = 24] = \"CONFIRMATION_REQUIRED\";\n  APIErrorCode[APIErrorCode[\"GROUP_TOKEN_NOT_VALID\"] = 27] = \"GROUP_TOKEN_NOT_VALID\";\n  APIErrorCode[APIErrorCode[\"APP_TOKEN_NOT_VALID\"] = 28] = \"APP_TOKEN_NOT_VALID\";\n  APIErrorCode[APIErrorCode[\"METHOD_CALL_LIMIT\"] = 29] = \"METHOD_CALL_LIMIT\";\n  APIErrorCode[APIErrorCode[\"PROFILE_IS_PRIVATE\"] = 30] = \"PROFILE_IS_PRIVATE\";\n  APIErrorCode[APIErrorCode[\"WRONG_PARAMETER\"] = 100] = \"WRONG_PARAMETER\";\n  APIErrorCode[APIErrorCode[\"INVALID_APPLICATION_ID\"] = 101] = \"INVALID_APPLICATION_ID\";\n  APIErrorCode[APIErrorCode[\"LIMIT_ENTRY_EXHAUSTED\"] = 103] = \"LIMIT_ENTRY_EXHAUSTED\";\n  APIErrorCode[APIErrorCode[\"INCORRECT_USER_ID\"] = 113] = \"INCORRECT_USER_ID\";\n  APIErrorCode[APIErrorCode[\"INVALID_TIMESTAMP\"] = 150] = \"INVALID_TIMESTAMP\";\n  APIErrorCode[APIErrorCode[\"ALBUM_ACCESS_DENIED\"] = 200] = \"ALBUM_ACCESS_DENIED\";\n  APIErrorCode[APIErrorCode[\"AUDIO_ACCESS_DENIED\"] = 201] = \"AUDIO_ACCESS_DENIED\";\n  APIErrorCode[APIErrorCode[\"GROUP_ACCESS_DENIED\"] = 203] = \"GROUP_ACCESS_DENIED\";\n  APIErrorCode[APIErrorCode[\"ALBUM_OVERFLOW\"] = 300] = \"ALBUM_OVERFLOW\";\n  APIErrorCode[APIErrorCode[\"PAYMENTS_DISABLED\"] = 500] = \"PAYMENTS_DISABLED\";\n  APIErrorCode[APIErrorCode[\"COMMERCIAL_ACCESS_DENIED\"] = 600] = \"COMMERCIAL_ACCESS_DENIED\";\n  APIErrorCode[APIErrorCode[\"COMMERCIAL_ERROR\"] = 603] = \"COMMERCIAL_ERROR\";\n  APIErrorCode[APIErrorCode[\"BLACKLISTED_USER\"] = 900] = \"BLACKLISTED_USER\";\n  APIErrorCode[APIErrorCode[\"MESSAGE_COMMUNITY_BLOCKED_BY_USER\"] = 901] = \"MESSAGE_COMMUNITY_BLOCKED_BY_USER\";\n  APIErrorCode[APIErrorCode[\"MESSAGE_BLOCKED_BY_USER_PRIVACY\"] = 902] = \"MESSAGE_BLOCKED_BY_USER_PRIVACY\";\n  APIErrorCode[APIErrorCode[\"UNABLE_TO_EDIT_MESSAGE_AFTER_DAY\"] = 909] = \"UNABLE_TO_EDIT_MESSAGE_AFTER_DAY\";\n  APIErrorCode[APIErrorCode[\"MESSAGE_CANNOT_EDIT_IS_TOO_LONG\"] = 910] = \"MESSAGE_CANNOT_EDIT_IS_TOO_LONG\";\n  APIErrorCode[APIErrorCode[\"KEYBOARD_FORMAT_IS_INVALID\"] = 911] = \"KEYBOARD_FORMAT_IS_INVALID\";\n  APIErrorCode[APIErrorCode[\"CHAT_BOT_FEATURE\"] = 912] = \"CHAT_BOT_FEATURE\";\n  APIErrorCode[APIErrorCode[\"TOO_MANY_FORWARDED_MESSAGES\"] = 913] = \"TOO_MANY_FORWARDED_MESSAGES\";\n  APIErrorCode[APIErrorCode[\"MESSAGE_TOO_LONG\"] = 914] = \"MESSAGE_TOO_LONG\";\n  APIErrorCode[APIErrorCode[\"NO_ACCESS_TO_CONVERSATION\"] = 917] = \"NO_ACCESS_TO_CONVERSATION\";\n  APIErrorCode[APIErrorCode[\"CANNOT_EDIT_THIS_TYPE_MESSAGE\"] = 920] = \"CANNOT_EDIT_THIS_TYPE_MESSAGE\";\n  APIErrorCode[APIErrorCode[\"UNABLE_TO_FORWARD_MESSAGES\"] = 921] = \"UNABLE_TO_FORWARD_MESSAGES\";\n  APIErrorCode[APIErrorCode[\"UNABLE_TO_DELETE_MESSAGE_FOR_RECIPIENTS\"] = 924] = \"UNABLE_TO_DELETE_MESSAGE_FOR_RECIPIENTS\";\n  APIErrorCode[APIErrorCode[\"NOT_ADMIN_CHAT\"] = 925] = \"NOT_ADMIN_CHAT\";\n  APIErrorCode[APIErrorCode[\"COMMUNITY_CANNOT_INTERACT_WITH_THIS_PEER\"] = 932] = \"COMMUNITY_CANNOT_INTERACT_WITH_THIS_PEER\";\n  APIErrorCode[APIErrorCode[\"CONTACT_NOT_FOUND\"] = 936] = \"CONTACT_NOT_FOUND\";\n})(APIErrorCode || (APIErrorCode = {}));\n\nvar apiErrors = APIErrorCode;\n/**\r\n * Upload error codes\r\n */\n\nvar UploadErrorCode;\n\n(function (UploadErrorCode) {\n  UploadErrorCode[\"MISSING_PARAMETERS\"] = \"MISSING_PARAMETERS\";\n  UploadErrorCode[\"NO_FILES_TO_UPLOAD\"] = \"NO_FILES_TO_UPLOAD\";\n  UploadErrorCode[\"EXCEEDED_MAX_FILES\"] = \"EXCEEDED_MAX_FILES\";\n  UploadErrorCode[\"UNSUPPORTED_SOURCE_TYPE\"] = \"UNSUPPORTED_SOURCE_TYPE\";\n})(UploadErrorCode || (UploadErrorCode = {}));\n\nvar uploadErrors = UploadErrorCode;\n/**\r\n * Updates error codes\r\n */\n\nvar UpdatesErrorCode;\n\n(function (UpdatesErrorCode) {\n  UpdatesErrorCode[\"NEED_RESTART\"] = \"NEED_RESTART\";\n  UpdatesErrorCode[\"POLLING_REQUEST_FAILED\"] = \"POLLING_REQUEST_FAILED\";\n})(UpdatesErrorCode || (UpdatesErrorCode = {}));\n\nvar updatesErrors = UpdatesErrorCode;\n/**\r\n * Collect error codes\r\n */\n\nvar CollectErrorCode;\n\n(function (CollectErrorCode) {\n  CollectErrorCode[\"EXECUTE_ERROR\"] = \"EXECUTE_ERROR\";\n})(CollectErrorCode || (CollectErrorCode = {}));\n\nvar collectErrors = CollectErrorCode;\n/**\r\n * Snippets error codes\r\n */\n\nvar SnippetErrorCode;\n\n(function (SnippetErrorCode) {\n  SnippetErrorCode[\"INVALID_URL\"] = \"INVALID_URL\";\n  SnippetErrorCode[\"INVALID_RESOURCE\"] = \"INVALID_RESOURCE\";\n  SnippetErrorCode[\"RESOURCE_NOT_FOUND\"] = \"RESOURCE_NOT_FOUND\";\n})(SnippetErrorCode || (SnippetErrorCode = {}));\n\nvar snippetsErrors = SnippetErrorCode;\n/**\r\n * Snippets error codes\r\n */\n\nvar SharedErrorCode;\n\n(function (SharedErrorCode) {\n  SharedErrorCode[\"MISSING_CAPTCHA_HANDLER\"] = \"MISSING_CAPTCHA_HANDLER\";\n  SharedErrorCode[\"MISSING_TWO_FACTOR_HANDLER\"] = \"MISSING_TWO_FACTOR_HANDLER\";\n})(SharedErrorCode || (SharedErrorCode = {}));\n\nvar sharedErrors = SharedErrorCode;\n/**\r\n * VK Platforms\r\n */\n\nvar platforms = new Map([[1, 'mobile'], [2, 'iphone'], [3, 'ipad'], [4, 'android'], [5, 'wphone'], [6, 'windows'], [7, 'web'], [8, 'standalone']]);\n/**\r\n * Parse attachments with RegExp\r\n */\n\nvar parseAttachment = /(photo|video|audio|doc|audio_message|graffiti|wall|market|poll|gift)([-\\d]+)_(\\d+)_?(\\w+)?/;\n/**\r\n * Parse resource with RegExp\r\n */\n\nvar parseResource = /(id|club|public|albums|tag|app(?:lication))([-\\d]+)/;\n/**\r\n * Parse owner resource with RegExp\r\n */\n\nvar parseOwnerResource = /(album|topic|wall|page|videos)([-\\d]+)_(\\d+)/;\n/**\r\n * Inspect custom data\r\n */\n\nvar inspectCustomData = Symbol('inspectCustomData');\n/**\r\n * Returns method for execute\r\n */\n\nvar getExecuteMethod = function getExecuteMethod(method) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var options = {};\n\n  for (var _i = 0, _Object$entries = Object.entries(params); _i < _Object$entries.length; _i++) {\n    var _ref3 = _Object$entries[_i];\n\n    var _ref2 = _slicedToArray(_ref3, 2);\n\n    var key = _ref2[0];\n    var value = _ref2[1];\n    options[key] = typeof value === 'object' ? String(value) : value;\n  }\n\n  return \"API.\".concat(method, \"(\").concat(JSON.stringify(options), \")\");\n};\n/**\r\n * Returns chain for execute\r\n */\n\n\nvar getChainReturn = function getChainReturn(methods) {\n  return \"return [\".concat(methods.join(','), \"];\");\n};\n/**\r\n * Resolve task\r\n */\n\n\nvar resolveExecuteTask = function resolveExecuteTask(tasks, result) {\n  var errors = 0;\n  result.response.forEach(function (response, i) {\n    if (response !== false) {\n      tasks[i].resolve(response);\n      return;\n    }\n\n    tasks[i].reject(result.errors[errors]);\n    errors += 1;\n  });\n};\n/**\r\n * Returns random ID\r\n */\n\n\nvar getRandomId = function getRandomId() {\n  return \"\".concat(Math.floor(Math.random() * 1e4)).concat(Date.now());\n};\n/**\r\n * Delay N-ms\r\n */\n\n\nvar delay = function delay(delayed) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delayed);\n  });\n};\n\nvar lt = /&lt;/g;\nvar qt = /&gt;/g;\nvar br = /<br>/g;\nvar amp = /&amp;/g;\nvar quot = /&quot;/g;\n/**\r\n * Decodes HTML entities\r\n */\n\nvar unescapeHTML = function unescapeHTML(text) {\n  return text.replace(lt, '<').replace(qt, '>').replace(br, '\\n').replace(amp, '&').replace(quot, '\"');\n};\n/**\r\n * Copies object params to new object\r\n */\n\n\nvar copyParams = function copyParams(params, properties) {\n  // @ts-ignore\n  var copies = {};\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = properties[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var property = _step.value;\n      copies[property] = params[property];\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return copies;\n};\n/**\r\n * Returns peer id type\r\n */\n\n\nvar getPeerType = function getPeerType(id) {\n  if (CHAT_PEER < id) {\n    return MessageSource.CHAT;\n  }\n\n  if (id < 0) {\n    return MessageSource.GROUP;\n  }\n\n  return MessageSource.USER;\n};\n/**\r\n * Displays deprecated message\r\n */\n\n\nvar showDeprecatedMessage = function showDeprecatedMessage(message) {\n  // eslint-disable-next-line no-console\n  console.log(\" \\x1B[31mDeprecated:\\x1B[39m\", message);\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nvar applyMixins = function applyMixins(derivedCtor, baseCtors) {\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = baseCtors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var baseCtor = _step2.value;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = Object.getOwnPropertyNames(baseCtor.prototype)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var name = _step3.value;\n\n          if (name === 'constructor') {\n            continue;\n          }\n\n          Object.defineProperty(derivedCtor.prototype, name, // @ts-ignore\n          Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n};\n\nvar APIRequest =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function APIRequest(_ref4) {\n    var _this = this;\n\n    var method = _ref4.method,\n        _ref4$params = _ref4.params,\n        params = _ref4$params === void 0 ? {} : _ref4$params;\n\n    _classCallCheck(this, APIRequest);\n\n    this.attempts = 0;\n    this.method = method;\n    this.params = _objectSpread({}, params);\n    this.promise = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(APIRequest, [{\n    key: \"addAttempt\",\n\n    /**\r\n     * Adds attempt\r\n     */\n    value: function addAttempt() {\n      this.attempts += 1;\n      return this.attempts;\n    }\n    /**\r\n     * Returns string to execute\r\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return getExecuteMethod(this.method, this.params);\n    }\n    /**\r\n     * Custom inspect object\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: inspect.custom,\n    value: function value(depth, options) {\n      var name = this.constructor.name;\n      var method = this.method,\n          params = this.params,\n          promise = this.promise;\n      var payload = {\n        method: method,\n        params: params,\n        promise: promise\n      };\n      return \"\".concat(options.stylize(name, 'special'), \" \").concat(inspect(payload, options));\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n  }]);\n\n  return APIRequest;\n}();\n/**\r\n * General error class\r\n */\n\n\nvar VKError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(VKError, _Error);\n\n  /**\r\n   * Constructor\r\n   */\n  function VKError(_ref5) {\n    var _this2;\n\n    var code = _ref5.code,\n        message = _ref5.message;\n\n    _classCallCheck(this, VKError);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(VKError).call(this, message));\n    _this2.code = code;\n    _this2.message = message;\n    _this2.name = _this2.constructor.name;\n    Error.captureStackTrace(_assertThisInitialized(_this2), _this2.constructor);\n    return _this2;\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(VKError, [{\n    key: \"toJSON\",\n\n    /**\r\n     * Returns property for json\r\n     */\n    value: function toJSON() {\n      var json = {};\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = Object.getOwnPropertyNames(this)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var key = _step4.value;\n          // @ts-ignore\n          json[key] = this[key];\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return json;\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n  }]);\n\n  return VKError;\n}(_wrapNativeSuper(Error));\n\nvar _APIErrorCode = APIErrorCode,\n    CAPTCHA_REQUIRED = _APIErrorCode.CAPTCHA_REQUIRED,\n    USER_VALIDATION_REQUIRED = _APIErrorCode.USER_VALIDATION_REQUIRED,\n    CONFIRMATION_REQUIRED = _APIErrorCode.CONFIRMATION_REQUIRED;\n\nvar APIError =\n/*#__PURE__*/\nfunction (_VKError) {\n  _inherits(APIError, _VKError);\n\n  /**\r\n   * Constructor\r\n   */\n  function APIError(payload) {\n    var _this3;\n\n    _classCallCheck(this, APIError);\n\n    var code = Number(payload.error_code);\n    var message = \"Code \\u2116\".concat(code, \" - \").concat(payload.error_msg);\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(APIError).call(this, {\n      code: code,\n      message: message\n    }));\n    _this3.params = payload.request_params;\n\n    if (code === CAPTCHA_REQUIRED) {\n      _this3.captchaSid = Number(payload.captcha_sid);\n      _this3.captchaImg = payload.captcha_img;\n    } else if (code === USER_VALIDATION_REQUIRED) {\n      _this3.redirectUri = payload.redirect_uri;\n    } else if (code === CONFIRMATION_REQUIRED) {\n      _this3.confirmationText = payload.confirmation_text;\n    }\n\n    return _this3;\n  }\n\n  return APIError;\n}(VKError);\n\nvar UploadError =\n/*#__PURE__*/\nfunction (_VKError2) {\n  _inherits(UploadError, _VKError2);\n\n  function UploadError() {\n    _classCallCheck(this, UploadError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UploadError).apply(this, arguments));\n  }\n\n  return UploadError;\n}(VKError);\n\nvar CollectError =\n/*#__PURE__*/\nfunction (_VKError3) {\n  _inherits(CollectError, _VKError3);\n\n  /**\r\n   * Constructor\r\n   */\n  function CollectError(_ref6) {\n    var _this4;\n\n    var message = _ref6.message,\n        code = _ref6.code,\n        errors = _ref6.errors;\n\n    _classCallCheck(this, CollectError);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(CollectError).call(this, {\n      message: message,\n      code: code\n    }));\n    _this4.errors = errors;\n    return _this4;\n  }\n\n  return CollectError;\n}(VKError);\n\nvar UpdatesError =\n/*#__PURE__*/\nfunction (_VKError4) {\n  _inherits(UpdatesError, _VKError4);\n\n  function UpdatesError() {\n    _classCallCheck(this, UpdatesError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UpdatesError).apply(this, arguments));\n  }\n\n  return UpdatesError;\n}(VKError);\n\nvar ExecuteError =\n/*#__PURE__*/\nfunction (_VKError5) {\n  _inherits(ExecuteError, _VKError5);\n\n  /**\r\n   * Constructor\r\n   */\n  function ExecuteError(options) {\n    var _this5;\n\n    _classCallCheck(this, ExecuteError);\n\n    var code = Number(options.error_code);\n    var message = \"Code \\u2116\".concat(code, \" - \").concat(options.error_msg);\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(ExecuteError).call(this, {\n      code: code,\n      message: message\n    }));\n    _this5.method = options.method;\n    return _this5;\n  }\n\n  return ExecuteError;\n}(VKError);\n\nvar SnippetsError =\n/*#__PURE__*/\nfunction (_VKError6) {\n  _inherits(SnippetsError, _VKError6);\n\n  function SnippetsError() {\n    _classCallCheck(this, SnippetsError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SnippetsError).apply(this, arguments));\n  }\n\n  return SnippetsError;\n}(VKError);\n\nfunction sequential(api, next) {\n  // @ts-ignore\n  api.callMethod(api.queue.shift());\n  next();\n}\n\nfunction parallel(_x, _x2) {\n  return _parallel.apply(this, arguments);\n}\n\nfunction _parallel() {\n  _parallel = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee64(api, next) {\n    var queue, apiExecuteCount, tasks, chain, i, request, _request, _iteratorNormalCompletion16, _didIteratorError16, _iteratorError16, _iterator16, _step16, task;\n\n    return _regeneratorRuntime.wrap(function _callee64$(_context64) {\n      while (1) {\n        switch (_context64.prev = _context64.next) {\n          case 0:\n            // @ts-ignore\n            queue = api.queue;\n\n            if (!queue[0].method.startsWith('execute')) {\n              _context64.next = 4;\n              break;\n            }\n\n            // @ts-ignore\n            sequential(api, next);\n            return _context64.abrupt(\"return\");\n\n          case 4:\n            _context64.next = 6;\n            return delay(0);\n\n          case 6:\n            // @ts-ignore\n            apiExecuteCount = api.vk.options.apiExecuteCount;\n            tasks = [];\n            chain = [];\n            i = 0;\n\n          case 10:\n            if (!(i < queue.length)) {\n              _context64.next = 22;\n              break;\n            }\n\n            if (!queue[i].method.startsWith('execute')) {\n              _context64.next = 13;\n              break;\n            }\n\n            return _context64.abrupt(\"continue\", 19);\n\n          case 13:\n            request = queue.splice(i, 1)[0];\n            i -= 1;\n            tasks.push(request);\n            chain.push(String(request));\n\n            if (!(tasks.length >= apiExecuteCount)) {\n              _context64.next = 19;\n              break;\n            }\n\n            return _context64.abrupt(\"break\", 22);\n\n          case 19:\n            i += 1;\n            _context64.next = 10;\n            break;\n\n          case 22:\n            _context64.prev = 22;\n            _request = new APIRequest({\n              method: 'execute',\n              params: {\n                code: getChainReturn(chain)\n              }\n            }); // @ts-ignore\n\n            api.callMethod(_request);\n            next();\n            _context64.t0 = resolveExecuteTask;\n            _context64.t1 = tasks;\n            _context64.next = 30;\n            return _request.promise;\n\n          case 30:\n            _context64.t2 = _context64.sent;\n            (0, _context64.t0)(_context64.t1, _context64.t2);\n            _context64.next = 55;\n            break;\n\n          case 34:\n            _context64.prev = 34;\n            _context64.t3 = _context64[\"catch\"](22);\n            _iteratorNormalCompletion16 = true;\n            _didIteratorError16 = false;\n            _iteratorError16 = undefined;\n            _context64.prev = 39;\n\n            for (_iterator16 = tasks[Symbol.iterator](); !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n              task = _step16.value;\n              task.reject(_context64.t3);\n            }\n\n            _context64.next = 47;\n            break;\n\n          case 43:\n            _context64.prev = 43;\n            _context64.t4 = _context64[\"catch\"](39);\n            _didIteratorError16 = true;\n            _iteratorError16 = _context64.t4;\n\n          case 47:\n            _context64.prev = 47;\n            _context64.prev = 48;\n\n            if (!_iteratorNormalCompletion16 && _iterator16.return != null) {\n              _iterator16.return();\n            }\n\n          case 50:\n            _context64.prev = 50;\n\n            if (!_didIteratorError16) {\n              _context64.next = 53;\n              break;\n            }\n\n            throw _iteratorError16;\n\n          case 53:\n            return _context64.finish(50);\n\n          case 54:\n            return _context64.finish(47);\n\n          case 55:\n          case \"end\":\n            return _context64.stop();\n        }\n      }\n    }, _callee64, null, [[22, 34], [39, 43, 47, 55], [48,, 50, 54]]);\n  }));\n  return _parallel.apply(this, arguments);\n}\n\nfunction parallelSelected(_x3, _x4) {\n  return _parallelSelected.apply(this, arguments);\n}\n\nfunction _parallelSelected() {\n  _parallelSelected = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee65(api, next) {\n    var _api$vk$options, apiExecuteMethods, apiExecuteCount, queue, tasks, chain, i, request, _request2, _iteratorNormalCompletion17, _didIteratorError17, _iteratorError17, _iterator17, _step17, task;\n\n    return _regeneratorRuntime.wrap(function _callee65$(_context65) {\n      while (1) {\n        switch (_context65.prev = _context65.next) {\n          case 0:\n            // @ts-ignore\n            _api$vk$options = api.vk.options, apiExecuteMethods = _api$vk$options.apiExecuteMethods, apiExecuteCount = _api$vk$options.apiExecuteCount; // @ts-ignore\n\n            queue = api.queue;\n\n            if (apiExecuteMethods.includes(queue[0].method)) {\n              _context65.next = 5;\n              break;\n            }\n\n            sequential(api, next);\n            return _context65.abrupt(\"return\");\n\n          case 5:\n            _context65.next = 7;\n            return delay(0);\n\n          case 7:\n            tasks = [];\n            chain = [];\n            i = 0;\n\n          case 10:\n            if (!(i < queue.length)) {\n              _context65.next = 22;\n              break;\n            }\n\n            if (apiExecuteMethods.includes(queue[i].method)) {\n              _context65.next = 13;\n              break;\n            }\n\n            return _context65.abrupt(\"continue\", 19);\n\n          case 13:\n            request = queue.splice(i, 1)[0];\n            i -= 1;\n            tasks.push(request);\n            chain.push(String(request));\n\n            if (!(tasks.length >= apiExecuteCount)) {\n              _context65.next = 19;\n              break;\n            }\n\n            return _context65.abrupt(\"break\", 22);\n\n          case 19:\n            i += 1;\n            _context65.next = 10;\n            break;\n\n          case 22:\n            if (!(tasks.length === 0)) {\n              _context65.next = 25;\n              break;\n            }\n\n            sequential(api, next);\n            return _context65.abrupt(\"return\");\n\n          case 25:\n            _context65.prev = 25;\n            _request2 = new APIRequest({\n              method: 'execute',\n              params: {\n                code: getChainReturn(chain)\n              }\n            }); // @ts-ignore\n\n            api.callMethod(_request2);\n            next();\n            _context65.t0 = resolveExecuteTask;\n            _context65.t1 = tasks;\n            _context65.next = 33;\n            return _request2.promise;\n\n          case 33:\n            _context65.t2 = _context65.sent;\n            (0, _context65.t0)(_context65.t1, _context65.t2);\n            _context65.next = 58;\n            break;\n\n          case 37:\n            _context65.prev = 37;\n            _context65.t3 = _context65[\"catch\"](25);\n            _iteratorNormalCompletion17 = true;\n            _didIteratorError17 = false;\n            _iteratorError17 = undefined;\n            _context65.prev = 42;\n\n            for (_iterator17 = tasks[Symbol.iterator](); !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n              task = _step17.value;\n              task.reject(_context65.t3);\n            }\n\n            _context65.next = 50;\n            break;\n\n          case 46:\n            _context65.prev = 46;\n            _context65.t4 = _context65[\"catch\"](42);\n            _didIteratorError17 = true;\n            _iteratorError17 = _context65.t4;\n\n          case 50:\n            _context65.prev = 50;\n            _context65.prev = 51;\n\n            if (!_iteratorNormalCompletion17 && _iterator17.return != null) {\n              _iterator17.return();\n            }\n\n          case 53:\n            _context65.prev = 53;\n\n            if (!_didIteratorError17) {\n              _context65.next = 56;\n              break;\n            }\n\n            throw _iteratorError17;\n\n          case 56:\n            return _context65.finish(53);\n\n          case 57:\n            return _context65.finish(50);\n\n          case 58:\n          case \"end\":\n            return _context65.stop();\n        }\n      }\n    }, _callee65, null, [[25, 37], [42, 46, 50, 58], [51,, 53, 57]]);\n  }));\n  return _parallelSelected.apply(this, arguments);\n}\n\nvar _APIErrorCode2 = APIErrorCode,\n    CAPTCHA_REQUIRED$1 = _APIErrorCode2.CAPTCHA_REQUIRED,\n    TOO_MANY_REQUESTS = _APIErrorCode2.TOO_MANY_REQUESTS,\n    USER_VALIDATION_REQUIRED$1 = _APIErrorCode2.USER_VALIDATION_REQUIRED;\nvar debug = createDebug('vk-io:api');\nvar requestHandlers = {\n  sequential: sequential,\n  parallel: parallel,\n  parallel_selected: parallelSelected\n};\n/**\r\n * Returns request handler\r\n */\n\nvar getRequestHandler = function getRequestHandler() {\n  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'sequential';\n  var handler = requestHandlers[mode];\n\n  if (!handler) {\n    throw new VKError({\n      message: 'Unsuported api mode',\n      code: 'UNSUPPORTED_MODE'\n    });\n  }\n\n  return handler;\n};\n\nvar groupMethods = ['account', 'ads', 'appWidgets', 'apps', 'audio', 'auth', 'board', 'database', 'docs', 'fave', 'friends', 'gifts', 'groups', 'leads', 'leadForms', 'likes', 'market', 'messages', 'newsfeed', 'notes', 'notifications', 'orders', 'pages', 'photos', 'places', 'polls', 'podcasts', 'prettyCards', 'search', 'secure', 'stats', 'status', 'storage', 'stories', 'streaming', 'users', 'utils', 'video', 'wall', 'widgets', 'junction'];\n/**\r\n * Working with API methods\r\n */\n\nvar API =\n/*#__PURE__*/\nfunction (_APIMethods) {\n  _inherits(API, _APIMethods);\n\n  /**\r\n   * Constructor\r\n   */\n  function API(vk) {\n    var _this6;\n\n    _classCallCheck(this, API);\n\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(API).call(this));\n    _this6.queue = [];\n    _this6.started = false;\n    _this6.suspended = false;\n    _this6.vk = vk;\n    var _iteratorNormalCompletion5 = true;\n    var _didIteratorError5 = false;\n    var _iteratorError5 = undefined;\n\n    try {\n      var _loop = function _loop() {\n        var group = _step5.value;\n        var isMessagesGroup = group === 'messages';\n        /**\r\n         * NOTE: Optimization for other methods\r\n         *\r\n         * Instead of checking everywhere the presence of a property in an object\r\n         * The check is only for the messages group\r\n         * Since it is necessary to change the behavior of the sending method\r\n         */\n        // @ts-ignore\n\n        _this6[group] = new Proxy(isMessagesGroup ? {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          send: function send() {\n            var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            var messageParams = params.random_id === undefined ? _objectSpread({}, params, {\n              random_id: getRandomId()\n            }) : params;\n            return _this6.enqueue('messages.send', messageParams);\n          }\n        } : {}, {\n          get: isMessagesGroup // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ? function (obj, prop) {\n            return obj[prop] || // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            function (params) {\n              return _this6.enqueue(\"\".concat(group, \".\").concat(prop), params);\n            };\n          } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          : function (obj, prop) {\n            return function (params) {\n              return _this6.enqueue(\"\".concat(group, \".\").concat(prop), params);\n            };\n          }\n        });\n      };\n\n      for (var _iterator5 = groupMethods[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n        _loop();\n      }\n    } catch (err) {\n      _didIteratorError5 = true;\n      _iteratorError5 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n          _iterator5.return();\n        }\n      } finally {\n        if (_didIteratorError5) {\n          throw _iteratorError5;\n        }\n      }\n    }\n\n    return _this6;\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(API, [{\n    key: \"execute\",\n\n    /**\r\n     * Call execute method\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    value: function execute(params) {\n      return this.enqueue('execute', params);\n    }\n    /**\r\n     * Call execute procedure\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"procedure\",\n    value: function procedure(name, params) {\n      return this.enqueue(\"execute.\".concat(name), params);\n    }\n    /**\r\n     * Call raw method\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"call\",\n    value: function call(method, params) {\n      return this.enqueue(method, params);\n    }\n    /**\r\n     * Adds request for queue\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"callWithRequest\",\n    value: function callWithRequest(request) {\n      this.queue.push(request);\n      this.worker();\n      return request.promise;\n    }\n    /**\r\n     * Adds method to queue\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(method, params) {\n      var request = new APIRequest({\n        method: method,\n        params: params\n      });\n      return this.callWithRequest(request);\n    }\n    /**\r\n     * Adds an element to the beginning of the queue\r\n     */\n\n  }, {\n    key: \"requeue\",\n    value: function requeue(request) {\n      this.queue.unshift(request);\n      this.worker();\n    }\n    /**\r\n     * Running queue\r\n     */\n\n  }, {\n    key: \"worker\",\n    value: function worker() {\n      var _this7 = this;\n\n      if (this.started) {\n        return;\n      }\n\n      this.started = true;\n      var _this$vk$options = this.vk.options,\n          apiLimit = _this$vk$options.apiLimit,\n          apiMode = _this$vk$options.apiMode;\n      var handler = getRequestHandler(apiMode);\n      var interval = Math.round(MINIMUM_TIME_INTERVAL_API / apiLimit);\n\n      var work = function work() {\n        if (_this7.queue.length === 0 || _this7.suspended) {\n          _this7.started = false;\n          return;\n        }\n\n        handler(_this7, function () {\n          setTimeout(work, interval);\n        });\n      };\n\n      work();\n    }\n    /**\r\n     * Calls the api method\r\n     */\n\n  }, {\n    key: \"callMethod\",\n    value: function () {\n      var _callMethod = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(request) {\n        var options, method, params, startTime, response, endTime;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = this.vk.options;\n                method = request.method; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n                params = _objectSpread({\n                  access_token: options.token,\n                  v: options.apiVersion\n                }, request.params);\n\n                if (options.language !== null) {\n                  params.lang = options.language;\n                }\n\n                debug(\"http --> \".concat(method));\n                startTime = Date.now();\n                _context.prev = 6;\n                _context.next = 9;\n                return fetch(\"\".concat(options.apiBaseUrl, \"/\").concat(method), {\n                  method: 'POST',\n                  compress: false,\n                  agent: options.agent,\n                  timeout: options.apiTimeout,\n                  headers: _objectSpread({}, options.apiHeaders, {\n                    connection: 'keep-alive'\n                  }),\n                  body: new URLSearchParams(params)\n                });\n\n              case 9:\n                response = _context.sent;\n                _context.next = 12;\n                return response.json();\n\n              case 12:\n                response = _context.sent;\n                _context.next = 26;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](6);\n\n                if (!(request.addAttempt() <= options.apiAttempts)) {\n                  _context.next = 23;\n                  break;\n                }\n\n                _context.next = 20;\n                return delay(options.apiWait);\n\n              case 20:\n                debug(\"Request \".concat(method, \" restarted \").concat(request.attempts, \" times\"));\n                this.requeue(request);\n                return _context.abrupt(\"return\");\n\n              case 23:\n                if (request.captchaValidate) {\n                  request.captchaValidate.reject(_context.t0);\n                }\n\n                request.reject(_context.t0);\n                return _context.abrupt(\"return\");\n\n              case 26:\n                endTime = (Date.now() - startTime).toLocaleString();\n                debug(\"http <-- \".concat(method, \" \").concat(endTime, \"ms\"));\n\n                if (!('error' in response)) {\n                  _context.next = 31;\n                  break;\n                }\n\n                this.handleError(request, new APIError(response.error));\n                return _context.abrupt(\"return\");\n\n              case 31:\n                if (request.captchaValidate) {\n                  request.captchaValidate.resolve();\n                }\n\n                if (!method.startsWith('execute')) {\n                  _context.next = 35;\n                  break;\n                }\n\n                request.resolve({\n                  response: response.response,\n                  errors: (response.execute_errors || []).map(function (error) {\n                    return new ExecuteError(error);\n                  })\n                });\n                return _context.abrupt(\"return\");\n\n              case 35:\n                request.resolve(response.response !== undefined ? response.response : response);\n\n              case 36:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 15]]);\n      }));\n\n      function callMethod(_x5) {\n        return _callMethod.apply(this, arguments);\n      }\n\n      return callMethod;\n    }()\n    /**\r\n     * Error API handler\r\n     */\n\n  }, {\n    key: \"handleError\",\n    value: function () {\n      var _handleError = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(request, error) {\n        var code, AccountVerification, verification, _ref7, token, captchaSid, _ref8, key, validate;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                code = error.code;\n\n                if (!(code === TOO_MANY_REQUESTS)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                if (!this.suspended) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                this.requeue(request);\n                return _context2.abrupt(\"return\");\n\n              case 5:\n                this.suspended = true;\n                _context2.next = 8;\n                return delay(MINIMUM_TIME_INTERVAL_API / this.vk.options.apiLimit + 50);\n\n              case 8:\n                this.suspended = false;\n                this.requeue(request);\n                return _context2.abrupt(\"return\");\n\n              case 11:\n                if (request.captchaValidate) {\n                  request.captchaValidate.reject(error);\n                }\n\n                if (!(code === USER_VALIDATION_REQUIRED$1)) {\n                  _context2.next = 46;\n                  break;\n                }\n\n                if (this.suspended) {\n                  this.requeue(request);\n                }\n\n                _context2.prev = 14;\n                _context2.next = 17;\n                return import('@vk-io/authorization');\n\n              case 17:\n                AccountVerification = _context2.sent.AccountVerification;\n                _context2.next = 24;\n                break;\n\n              case 20:\n                _context2.prev = 20;\n                _context2.t0 = _context2[\"catch\"](14);\n                request.reject(error);\n                return _context2.abrupt(\"return\");\n\n              case 24:\n                this.suspended = true;\n                _context2.prev = 25;\n                // @ts-ignore\n                verification = new AccountVerification(this.vk);\n                _context2.next = 29;\n                return verification.run(error.redirectUri);\n\n              case 29:\n                _ref7 = _context2.sent;\n                token = _ref7.token;\n                debug('Account verification passed');\n                this.vk.token = token;\n                this.suspended = false;\n                this.requeue(request);\n                _context2.next = 45;\n                break;\n\n              case 37:\n                _context2.prev = 37;\n                _context2.t1 = _context2[\"catch\"](25);\n                debug('Account verification error', _context2.t1);\n                request.reject(error);\n                _context2.next = 43;\n                return delay(15e3);\n\n              case 43:\n                this.suspended = false;\n                this.worker();\n\n              case 45:\n                return _context2.abrupt(\"return\");\n\n              case 46:\n                if (!(code !== CAPTCHA_REQUIRED$1 || !this.vk.callbackService.hasCaptchaHandler)) {\n                  _context2.next = 49;\n                  break;\n                }\n\n                request.reject(error);\n                return _context2.abrupt(\"return\");\n\n              case 49:\n                _context2.prev = 49;\n                captchaSid = error.captchaSid;\n                _context2.next = 53;\n                return this.vk.callbackService.processingCaptcha({\n                  type: CaptchaType.API,\n                  src: error.captchaImg,\n                  sid: captchaSid,\n                  request: request\n                });\n\n              case 53:\n                _ref8 = _context2.sent;\n                key = _ref8.key;\n                validate = _ref8.validate;\n                request.captchaValidate = validate;\n                request.params.captcha_sid = captchaSid;\n                request.params.captcha_key = key;\n                this.requeue(request);\n                _context2.next = 65;\n                break;\n\n              case 62:\n                _context2.prev = 62;\n                _context2.t2 = _context2[\"catch\"](49);\n                request.reject(_context2.t2);\n\n              case 65:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[14, 20], [25, 37], [49, 62]]);\n      }));\n\n      function handleError(_x6, _x7) {\n        return _handleError.apply(this, arguments);\n      }\n\n      return handleError;\n    }()\n    /**\r\n     * Custom inspect object\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: inspect.custom,\n    value: function value(depth, options) {\n      var name = this.constructor.name;\n      var started = this.started,\n          queue = this.queue;\n      var payload = {\n        started: started,\n        queue: queue\n      };\n      return \"\".concat(options.stylize(name, 'special'), \" \").concat(inspect(payload, options));\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n    /**\r\n     * Returns the current used API version\r\n     */\n\n  }, {\n    key: \"API_VERSION\",\n    get: function get() {\n      return this.vk.options.apiVersion;\n    }\n  }]);\n\n  return API;\n}(APIMethods);\n/**\r\n * Check object is stream\r\n */\n\n\nvar isStream = function isStream(source) {\n  return typeof source === 'object' && source instanceof Stream;\n};\n/**\r\n * Copies object params to new object\r\n */\n\n\nvar copyParams$1 = function copyParams$1(params, properties) {\n  // @ts-ignore\n  var copies = {};\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = properties[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var property = _step6.value;\n\n      if (property in params) {\n        copies[property] = params[property];\n      }\n    }\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n        _iterator6.return();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n\n  return copies;\n};\n/**\r\n * Returns buffer from stream in Promise\r\n */\n\n\nvar streamToBuffer = function streamToBuffer(stream) {\n  return new Promise(function (resolve, reject) {\n    var accum = [];\n    stream.on('error', reject);\n    stream.on('end', function () {\n      resolve(Buffer.concat(accum));\n    });\n    stream.on('data', function (chunk) {\n      accum.push(chunk);\n    });\n  });\n};\n\nvar CRNL = '\\r\\n';\n\nvar MultipartStream =\n/*#__PURE__*/\nfunction (_SandwichStream) {\n  _inherits(MultipartStream, _SandwichStream);\n\n  /**\r\n   * Constructor\r\n   */\n  function MultipartStream(boundary) {\n    var _this8;\n\n    _classCallCheck(this, MultipartStream);\n\n    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(MultipartStream).call(this, {\n      head: \"--\".concat(boundary).concat(CRNL),\n      tail: \"\".concat(CRNL, \"--\").concat(boundary, \"--\"),\n      separator: \"\".concat(CRNL, \"--\").concat(boundary).concat(CRNL)\n    }));\n    _this8.boundary = boundary;\n    return _this8;\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(MultipartStream, [{\n    key: \"addPart\",\n\n    /**\r\n     * Adds part\r\n     */\n    value: function addPart(part) {\n      var partStream = new PassThrough();\n\n      if ('headers' in part) {\n        // @ts-ignore\n        for (var _i2 = 0, _Object$entries2 = Object.entries(part.headers); _i2 < _Object$entries2.length; _i2++) {\n          var _ref11 = _Object$entries2[_i2];\n\n          var _ref10 = _slicedToArray(_ref11, 2);\n\n          var key = _ref10[0];\n          var header = _ref10[1];\n          partStream.write(\"\".concat(key, \":\").concat(header).concat(CRNL));\n        }\n      }\n\n      partStream.write(CRNL);\n\n      if (isStream(part.body)) {\n        part.body.pipe(partStream);\n      } else {\n        partStream.end(part.body);\n      }\n\n      this.add(partStream);\n    }\n    /**\r\n     * Adds form data\r\n     */\n\n  }, {\n    key: \"append\",\n    value: function append(field, body, _ref12) {\n      var _ref12$filename = _ref12.filename,\n          filename = _ref12$filename === void 0 ? null : _ref12$filename,\n          _ref12$headers = _ref12.headers,\n          headers = _ref12$headers === void 0 ? {} : _ref12$headers;\n      var header = \"form-data; name=\\\"\".concat(field, \"\\\"\");\n\n      if (filename !== null) {\n        header += \"; filename=\\\"\".concat(filename, \"\\\"\");\n      }\n\n      this.addPart({\n        headers: _objectSpread({}, headers, {\n          'Content-Disposition': header\n        }),\n        body: body\n      });\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n  }]);\n\n  return MultipartStream;\n}(SandwichStream);\n\nvar Attachment =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function Attachment(type, ownerId, id) {\n    var accessKey = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    _classCallCheck(this, Attachment);\n\n    this.type = type;\n    this.ownerId = Number(ownerId);\n    this.id = Number(id);\n    this.accessKey = accessKey;\n    this.$filled = false;\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(Attachment, [{\n    key: \"equals\",\n\n    /**\r\n     * Checks that the attachment is equivalent with object\r\n     */\n    value: function equals(attachment) {\n      var target = typeof attachment === 'string' ? Attachment.fromString(attachment) : attachment;\n      return this.type === target.type && this.ownerId === target.ownerId && this.id === target.id;\n    }\n    /**\r\n     * Returns a string to attach a VK\r\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var accessKey = this.accessKey !== null ? \"_\".concat(this.accessKey) : '';\n      return \"\".concat(this.type).concat(this.ownerId, \"_\").concat(this.id).concat(accessKey);\n    }\n    /**\r\n     * Returns data for JSON\r\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return _objectSpread({\n        id: this.id,\n        ownerId: this.ownerId,\n        accessKey: this.accessKey\n      }, this[inspectCustomData]());\n    }\n    /**\r\n     * Returns the custom data\r\n     */\n\n  }, {\n    key: inspectCustomData,\n    value: function value() {\n      return {\n        payload: this.payload\n      };\n    }\n    /**\r\n     * Custom inspect object\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: inspect.custom,\n    value: function value(depth, options) {\n      var name = this.constructor.name;\n      var customData = this.toJSON();\n      var payload = this.$filled ? \"\".concat(inspect(customData, _objectSpread({}, options, {\n        compact: false\n      }))) : '{}';\n      return \"\".concat(options.stylize(name, 'special'), \" <\").concat(options.stylize(this, 'string'), \"> \").concat(payload);\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n    /**\r\n     * Parse attachment with string\r\n     */\n\n  }, {\n    key: \"isFilled\",\n\n    /**\r\n     * Returns whether the attachment is filled\r\n     */\n    get: function get() {\n      return this.$filled;\n    }\n    /**\r\n     * Can be attached via string representation\r\n     */\n    // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"canBeAttached\",\n    get: function get() {\n      return true;\n    }\n  }], [{\n    key: \"fromString\",\n    value: function fromString(attachment) {\n      if (!parseAttachment.test(attachment)) {\n        throw new TypeError('Incorrect attachment');\n      }\n\n      var _attachment$match = attachment.match(parseAttachment),\n          _attachment$match2 = _slicedToArray(_attachment$match, 5),\n          type = _attachment$match2[1],\n          ownerId = _attachment$match2[2],\n          id = _attachment$match2[3],\n          accessKey = _attachment$match2[4];\n\n      return new Attachment(type, ownerId, id, accessKey);\n    }\n  }]);\n\n  return Attachment;\n}();\n\nvar ExternalAttachment =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function ExternalAttachment(type, payload) {\n    _classCallCheck(this, ExternalAttachment);\n\n    this.type = type;\n    this.payload = payload;\n    this.$filled = false;\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(ExternalAttachment, [{\n    key: \"toJSON\",\n\n    /**\r\n     * Returns data for JSON\r\n     */\n    value: function toJSON() {\n      return this[inspectCustomData]();\n    }\n    /**\r\n     * Returns the custom data\r\n     */\n\n  }, {\n    key: inspectCustomData,\n    value: function value() {\n      return {\n        payload: this.payload\n      };\n    }\n    /**\r\n     * Custom inspect object\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: inspect.custom,\n    value: function value(depth, options) {\n      var name = this.constructor.name;\n      var customData = this.toJSON();\n      var payload = inspect(customData, _objectSpread({}, options, {\n        compact: false\n      }));\n      return \"\".concat(options.stylize(name, 'special'), \" \").concat(payload);\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n    /**\r\n     * Returns whether the attachment is filled\r\n     */\n\n  }, {\n    key: \"isFilled\",\n    get: function get() {\n      return this.$filled;\n    }\n    /**\r\n     * Can be attached via string representation\r\n     */\n    // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"canBeAttached\",\n    get: function get() {\n      return false;\n    }\n  }]);\n\n  return ExternalAttachment;\n}();\n\nvar _AttachmentType = AttachmentType,\n    POLL = _AttachmentType.POLL;\n\nvar PollAttachment =\n/*#__PURE__*/\nfunction (_Attachment) {\n  _inherits(PollAttachment, _Attachment);\n\n  /**\r\n   * Constructor\r\n   */\n  function PollAttachment(payload, vk) {\n    var _this9;\n\n    _classCallCheck(this, PollAttachment);\n\n    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(PollAttachment).call(this, POLL, payload.owner_id, payload.id, payload.access_key)); // @ts-ignore\n\n    _this9.vk = vk;\n    _this9.payload = payload;\n    _this9.$filled = 'answers' in payload;\n    return _this9;\n  }\n  /**\r\n   * Load attachment payload\r\n   */\n\n\n  _createClass(PollAttachment, [{\n    key: \"loadAttachmentPayload\",\n    value: function () {\n      var _loadAttachmentPayload = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var _ref13, _ref14, poll;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.$filled) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                _context3.next = 4;\n                return this.vk.api.polls.getById({\n                  poll_id: this.id,\n                  owner_id: this.ownerId\n                });\n\n              case 4:\n                _ref13 = _context3.sent;\n                _ref14 = _slicedToArray(_ref13, 1);\n                poll = _ref14[0];\n                this.payload = poll;\n\n                if (this.payload.access_key) {\n                  this.accessKey = this.payload.access_key;\n                }\n\n                this.$filled = true;\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadAttachmentPayload() {\n        return _loadAttachmentPayload.apply(this, arguments);\n      }\n\n      return loadAttachmentPayload;\n    }()\n    /**\r\n     * Checks whether the poll is anonymous\r\n     */\n\n  }, {\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['authorId', 'question', 'createdAt', 'endedAt', 'votes', 'answerIds', 'friends', 'answers', 'background', 'photo']);\n    }\n  }, {\n    key: \"isAnonymous\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.anonymous);\n    }\n    /**\r\n     * Checks whether the poll allows multiple choice of answers\r\n     */\n\n  }, {\n    key: \"isMultiple\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.multiple);\n    }\n    /**\r\n     * Checks whether the poll is complete\r\n     */\n\n  }, {\n    key: \"isClosed\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.closed);\n    }\n    /**\r\n     * Check whether questions are attached to the discussion\r\n     */\n\n  }, {\n    key: \"isBoard\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.is_board);\n    }\n    /**\r\n     * Check if can edit the poll\r\n     */\n\n  }, {\n    key: \"isCanEdit\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.can_edit);\n    }\n    /**\r\n     * Check if can vote in the survey\r\n     */\n\n  }, {\n    key: \"isCanVote\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.can_vote);\n    }\n    /**\r\n     * Check if can complain about the poll\r\n     */\n\n  }, {\n    key: \"isCanReport\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.can_report);\n    }\n    /**\r\n     * Check if can share a survey\r\n     */\n\n  }, {\n    key: \"isCanShare\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.can_share);\n    }\n    /**\r\n     * Returns the ID of the poll author\r\n     */\n\n  }, {\n    key: \"authorId\",\n    get: function get() {\n      return this.payload.author_id || null;\n    }\n    /**\r\n     * Returns the question text\r\n     */\n\n  }, {\n    key: \"question\",\n    get: function get() {\n      return this.payload.question || null;\n    }\n    /**\r\n     * Returns the date when this poll was created\r\n     */\n\n  }, {\n    key: \"createdAt\",\n    get: function get() {\n      return this.payload.created || null;\n    }\n    /**\r\n     * Returns the end date of the poll in Unixtime. 0, if the poll is unlimited\r\n     */\n\n  }, {\n    key: \"endedAt\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return this.payload.end_date;\n    }\n    /**\r\n     * Returns the number of votes\r\n     */\n\n  }, {\n    key: \"votes\",\n    get: function get() {\n      return this.payload.votes || null;\n    }\n    /**\r\n     * Returns the identifiers of the response options selected by the current user\r\n     */\n\n  }, {\n    key: \"answerIds\",\n    get: function get() {\n      return this.payload.answer_ids || null;\n    }\n    /**\r\n     * Returns the identifiers of 3 friends who voted in the poll\r\n     */\n\n  }, {\n    key: \"friends\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return this.payload.friends || [];\n    }\n    /**\r\n     * Returns the information about the options for the answer\r\n     */\n\n  }, {\n    key: \"answers\",\n    get: function get() {\n      return this.payload.answers || null;\n    }\n    /**\r\n     * Returns the poll snippet background\r\n     */\n\n  }, {\n    key: \"background\",\n    get: function get() {\n      return this.payload.background || null;\n    }\n    /**\r\n     * Returns a photo - the poll snippet background\r\n     */\n\n  }, {\n    key: \"photo\",\n    get: function get() {\n      return this.payload.photo || null;\n    }\n  }]);\n\n  return PollAttachment;\n}(Attachment);\n\nvar _AttachmentType2 = AttachmentType,\n    GIFT = _AttachmentType2.GIFT;\n\nvar GiftAttachment =\n/*#__PURE__*/\nfunction (_ExternalAttachment) {\n  _inherits(GiftAttachment, _ExternalAttachment);\n\n  /**\r\n   * Constructor\r\n   */\n  function GiftAttachment(payload, vk) {\n    var _this10;\n\n    _classCallCheck(this, GiftAttachment);\n\n    _this10 = _possibleConstructorReturn(this, _getPrototypeOf(GiftAttachment).call(this, GIFT, payload)); // @ts-ignore\n\n    _this10.vk = vk;\n    return _this10;\n  }\n  /**\r\n   * Returns the identifier gift\r\n   */\n\n\n  _createClass(GiftAttachment, [{\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return {\n        id: this.id\n      };\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this.payload.id;\n    }\n  }]);\n\n  return GiftAttachment;\n}(ExternalAttachment);\n\nvar Attachmentable =\n/*#__PURE__*/\nfunction () {\n  function Attachmentable() {\n    _classCallCheck(this, Attachmentable);\n  }\n\n  _createClass(Attachmentable, [{\n    key: \"hasAttachments\",\n\n    /**\r\n     * Checks for the presence of attachments\r\n     */\n    value: function hasAttachments() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (type === null) {\n        return this.attachments.length > 0;\n      }\n\n      return this.attachments.some(function (attachment) {\n        return attachment.type === type;\n      });\n    }\n  }, {\n    key: \"getAttachments\",\n    value: function getAttachments() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (type === null) {\n        return this.attachments;\n      }\n\n      return this.attachments.filter(function (attachment) {\n        return attachment.type === type;\n      });\n    }\n  }]);\n\n  return Attachmentable;\n}(); // eslint-disable-next-line import/no-cycle\n\n\nvar attachmentsTypes = (_attachmentsTypes = {}, _defineProperty(_attachmentsTypes, AttachmentType.POLL, function () {\n  return PollAttachment;\n}), _defineProperty(_attachmentsTypes, AttachmentType.GIFT, function () {\n  return GiftAttachment;\n}), _defineProperty(_attachmentsTypes, AttachmentType.WALL, function () {\n  return WallAttachment;\n}), _defineProperty(_attachmentsTypes, AttachmentType.LINK, function () {\n  return LinkAttachment;\n}), _defineProperty(_attachmentsTypes, AttachmentType.PHOTO, function () {\n  return PhotoAttachment;\n}), _defineProperty(_attachmentsTypes, AttachmentType.AUDIO, function () {\n  return AudioAttachment;\n}), _defineProperty(_attachmentsTypes, AttachmentType.STORY, function () {\n  return StoryAttachment;\n}), _defineProperty(_attachmentsTypes, AttachmentType.VIDEO, function () {\n  return VideoAttachment;\n}), _defineProperty(_attachmentsTypes, AttachmentType.DOCUMENT, function () {\n  return DocumentAttachment;\n}), _defineProperty(_attachmentsTypes, AttachmentType.MARKET, function () {\n  return MarketAttachment;\n}), _defineProperty(_attachmentsTypes, AttachmentType.STICKER, function () {\n  return StickerAttachment;\n}), _defineProperty(_attachmentsTypes, AttachmentType.GRAFFITI, function () {\n  return GraffitiAttachment;\n}), _defineProperty(_attachmentsTypes, AttachmentType.WALL_REPLY, function () {\n  return WallReplyAttachment;\n}), _defineProperty(_attachmentsTypes, AttachmentType.MARKET_ALBUM, function () {\n  return MarketAlbumAttachment;\n}), _defineProperty(_attachmentsTypes, AttachmentType.AUDIO_MESSAGE, function () {\n  return AudioMessageAttachment;\n}), _attachmentsTypes);\n/**\r\n * Transform raw attachments to wrapper\r\n */\n// @ts-ignore\n// eslint-disable-next-line import/prefer-default-export, @typescript-eslint/no-explicit-any\n\nvar transformAttachments = function transformAttachments() {\n  var attachments = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var vk = arguments.length > 1 ? arguments[1] : undefined;\n  return attachments.map(function (item) {\n    var type = item.type; // @ts-ignore\n\n    var attachment = attachmentsTypes[type];\n    return attachment ? new (attachment())(item[type], vk) : false;\n  }).filter(Boolean);\n};\n\nvar _AttachmentType3 = AttachmentType,\n    WALL = _AttachmentType3.WALL;\nvar kAttachments = Symbol('attachments');\nvar kCopyHistoryAttachments = Symbol('copyHistoryAttachments');\n\nvar WallAttachment =\n/*#__PURE__*/\nfunction (_Attachment2) {\n  _inherits(WallAttachment, _Attachment2);\n\n  /**\r\n   * Constructor\r\n   */\n  function WallAttachment(payload, vk) {\n    var _this11;\n\n    _classCallCheck(this, WallAttachment);\n\n    _this11 = _possibleConstructorReturn(this, _getPrototypeOf(WallAttachment).call(this, WALL, payload.owner_id || payload.to_id, payload.id, payload.access_key)); // @ts-ignore\n\n    _this11.vk = vk;\n    _this11.payload = payload;\n    _this11.$filled = 'date' in payload;\n    return _this11;\n  }\n  /**\r\n   * Load attachment payload\r\n   */\n\n\n  _createClass(WallAttachment, [{\n    key: \"loadAttachmentPayload\",\n    value: function () {\n      var _loadAttachmentPayload2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var _ref15, _ref16, post;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.$filled) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 2:\n                _context4.next = 4;\n                return this.vk.api.wall.getById({\n                  posts: \"\".concat(this.ownerId, \"_\").concat(this.id),\n                  extended: 0\n                });\n\n              case 4:\n                _ref15 = _context4.sent;\n                _ref16 = _slicedToArray(_ref15, 1);\n                post = _ref16[0];\n                // @ts-ignore\n                this.payload = post;\n                this[kAttachments] = null;\n                this[kCopyHistoryAttachments] = null;\n\n                if (this.payload.access_key) {\n                  this.accessKey = this.payload.access_key;\n                }\n\n                this.$filled = true;\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function loadAttachmentPayload() {\n        return _loadAttachmentPayload2.apply(this, arguments);\n      }\n\n      return loadAttachmentPayload;\n    }()\n    /**\r\n     * Checks has comments\r\n     */\n\n  }, {\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['authorId', 'createdUserId', 'replyOwnerId', 'replyPostId', 'signerId', 'createdAt', 'postType', 'text', 'viewsCount', 'likesCount', 'repostsCount', 'commentsCount', 'likes', 'postSource', 'geo', 'copyHistory', 'attachments']);\n    }\n  }, {\n    key: \"hasComments\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      var commentsCount = this.commentsCount;\n      return commentsCount !== null ? commentsCount > 0 : null;\n    }\n    /**\r\n     * Checks has ads in post\r\n     */\n\n  }, {\n    key: \"hasAds\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.marked_as_ads);\n    }\n    /**\r\n     * Checks has this user reposted\r\n     */\n\n  }, {\n    key: \"hasUserReposted\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.reposts.user_reposted);\n    }\n    /**\r\n     * Checks has this user likes\r\n     */\n\n  }, {\n    key: \"hasUserLike\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.likes.user_likes);\n    }\n    /**\r\n     * Checks can the current user comment on the entry\r\n     */\n\n  }, {\n    key: \"isCanUserCommented\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.comments.can_post);\n    }\n    /**\r\n     * Checks if a community can comment on a post\r\n     */\n\n  }, {\n    key: \"isCanGroupsCommented\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.comments.groups_can_post);\n    }\n    /**\r\n     * Checks if you can comment on a post\r\n     */\n\n  }, {\n    key: \"isCanCommented\",\n    get: function get() {\n      return this.isCanUserCommented || this.isCanGroupsCommented;\n    }\n    /**\r\n     * Checks if a user can close on a comments\r\n     */\n\n  }, {\n    key: \"isCanCloseComments\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.comments.can_close);\n    }\n    /**\r\n     * Checks if a user can open on a comments\r\n     */\n\n  }, {\n    key: \"isCanOpenComments\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.comments.can_open);\n    }\n    /**\r\n     * Checks whether the current user can like the record\r\n     */\n\n  }, {\n    key: \"isCanLike\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.likes.can_like);\n    }\n    /**\r\n     * hecks whether the current user can repost the record\r\n     */\n\n  }, {\n    key: \"isCanReposted\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.likes.can_publish);\n    }\n    /**\r\n     * Checks is can this user pin post\r\n     */\n\n  }, {\n    key: \"isCanPin\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.can_pin);\n    }\n    /**\r\n     * Checks is can this user delete post\r\n     */\n\n  }, {\n    key: \"isCanDelete\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.can_delete);\n    }\n    /**\r\n     * Checks is can this user edit post\r\n     */\n\n  }, {\n    key: \"isCanEdit\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.can_edit);\n    }\n    /**\r\n     * Checks is can this user edit post\r\n     */\n\n  }, {\n    key: \"isPinned\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.is_pinned);\n    }\n    /**\r\n     * Checks is post created only by friends\r\n     */\n\n  }, {\n    key: \"isFriendsOnly\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.friends_only);\n    }\n    /**\r\n     * Checks is bookmarked current user\r\n     */\n\n  }, {\n    key: \"isFavorited\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.is_favorite);\n    }\n    /**\r\n     * Returns the identifier author\r\n     */\n\n  }, {\n    key: \"authorId\",\n    get: function get() {\n      return this.payload.from_id || null;\n    }\n    /**\r\n     * Returns the administrator identifier that posted the entry\r\n     */\n\n  }, {\n    key: \"createdUserId\",\n    get: function get() {\n      return this.payload.created_by || null;\n    }\n    /**\r\n     * The identifier of the record owner, in response to which the current\r\n     */\n\n  }, {\n    key: \"replyOwnerId\",\n    get: function get() {\n      return this.payload.reply_owner_id || null;\n    }\n    /**\r\n     * The identifier of the record in response to which the current one was left.\r\n     */\n\n  }, {\n    key: \"replyPostId\",\n    get: function get() {\n      return this.payload.reply_post_id || null;\n    }\n    /**\r\n     * Returns author identifier if the entry was published\r\n     * on behalf of the community and signed by the user\r\n     */\n\n  }, {\n    key: \"signerId\",\n    get: function get() {\n      return this.payload.signer_id || null;\n    }\n    /**\r\n     * Returns the date when this post was created\r\n     */\n\n  }, {\n    key: \"createdAt\",\n    get: function get() {\n      return this.payload.date || null;\n    }\n    /**\r\n     * Returns the post type\r\n     */\n\n  }, {\n    key: \"postType\",\n    get: function get() {\n      return this.payload.post_type || null;\n    }\n    /**\r\n     * Returns the post text\r\n     */\n\n  }, {\n    key: \"text\",\n    get: function get() {\n      return this.payload.text || null;\n    }\n    /**\r\n     * Returns the number of record views\r\n     */\n\n  }, {\n    key: \"viewsCount\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return 'views' in this.payload ? this.payload.views.count : null;\n    }\n    /**\r\n     * Returns the likes count\r\n     */\n\n  }, {\n    key: \"likesCount\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return 'likes' in this.payload ? this.payload.likes.count : null;\n    }\n    /**\r\n     * Returns the reposts count\r\n     */\n\n  }, {\n    key: \"repostsCount\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return 'reposts' in this.payload ? this.payload.reposts.count : null;\n    }\n    /**\r\n     * Returns the comments count\r\n     */\n\n  }, {\n    key: \"commentsCount\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return 'comments' in this.payload ? this.payload.comments.count : null;\n    }\n    /**\r\n     * Returns the likes info\r\n     */\n\n  }, {\n    key: \"likes\",\n    get: function get() {\n      return this.payload.likes || null;\n    }\n    /**\r\n     * Returns the post source\r\n     */\n\n  }, {\n    key: \"postSource\",\n    get: function get() {\n      return this.payload.post_source || null;\n    }\n    /**\r\n     * Returns the geo location\r\n     */\n\n  }, {\n    key: \"geo\",\n    get: function get() {\n      return this.payload.geo || null;\n    }\n    /**\r\n     * Returns the history of reposts for post\r\n     */\n\n  }, {\n    key: \"copyHistory\",\n    get: function get() {\n      var _this12 = this;\n\n      if (!this[kCopyHistoryAttachments]) {\n        this[kCopyHistoryAttachments] = this.payload.copy_history ? this.payload.copy_history.map(function (history) {\n          return new WallAttachment(history, _this12.vk);\n        }) : [];\n      }\n\n      return this[kCopyHistoryAttachments];\n    }\n    /**\r\n     * Returns the attachments\r\n     */\n\n  }, {\n    key: \"attachments\",\n    get: function get() {\n      if (!this[kAttachments]) {\n        this[kAttachments] = transformAttachments(this.payload.attachments || [], this.vk);\n      }\n\n      return this[kAttachments];\n    }\n  }]);\n\n  return WallAttachment;\n}(Attachment);\n\napplyMixins(WallAttachment, [Attachmentable]);\nvar _AttachmentType4 = AttachmentType,\n    PHOTO = _AttachmentType4.PHOTO;\nvar SMALL_SIZES = ['m', 's'];\nvar MEDIUM_SIZES = ['y', 'r', 'q', 'p'].concat(SMALL_SIZES);\nvar LARGE_SIZES = ['w', 'z'].concat(_toConsumableArray(MEDIUM_SIZES));\n\nvar PhotoAttachment =\n/*#__PURE__*/\nfunction (_Attachment3) {\n  _inherits(PhotoAttachment, _Attachment3);\n\n  /**\r\n   * Constructor\r\n   */\n  function PhotoAttachment(payload, vk) {\n    var _this13;\n\n    _classCallCheck(this, PhotoAttachment);\n\n    _this13 = _possibleConstructorReturn(this, _getPrototypeOf(PhotoAttachment).call(this, PHOTO, payload.owner_id, payload.id, payload.access_key)); // @ts-ignore\n\n    _this13.vk = vk;\n    _this13.payload = payload;\n    _this13.$filled = 'album_id' in payload && 'date' in payload;\n    return _this13;\n  }\n  /**\r\n   * Load attachment payload\r\n   */\n\n\n  _createClass(PhotoAttachment, [{\n    key: \"loadAttachmentPayload\",\n    value: function () {\n      var _loadAttachmentPayload3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var _ref17, _ref18, photo;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!this.$filled) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 2:\n                _context5.next = 4;\n                return this.vk.api.photos.getById({\n                  photos: \"\".concat(this.ownerId, \"_\").concat(this.id),\n                  extended: 0\n                });\n\n              case 4:\n                _ref17 = _context5.sent;\n                _ref18 = _slicedToArray(_ref17, 1);\n                photo = _ref18[0];\n                // @ts-ignore\n                this.payload = photo;\n\n                if (this.payload.access_key) {\n                  this.accessKey = this.payload.access_key;\n                }\n\n                this.$filled = true;\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function loadAttachmentPayload() {\n        return _loadAttachmentPayload3.apply(this, arguments);\n      }\n\n      return loadAttachmentPayload;\n    }()\n    /**\r\n     * Returns the ID of the user who uploaded the image\r\n     */\n\n  }, {\n    key: \"getSizes\",\n\n    /**\r\n     * Returns the sizes of the required types\r\n     */\n    value: function getSizes(sizeTypes) {\n      var sizes = this.sizes;\n\n      if (!sizes) {\n        return [];\n      } // @ts-ignore\n\n\n      return sizeTypes.map(function (sizeType) {\n        return sizes.find(function (size) {\n          return size.type === sizeType;\n        }) || null;\n      }).filter(Boolean);\n    }\n    /**\r\n     * Returns the custom data\r\n     */\n\n  }, {\n    key: inspectCustomData,\n    value: function value() {\n      return copyParams(this, ['userId', 'albumId', 'text', 'createdAt', 'height', 'width', 'smallPhoto', 'mediumPhoto', 'largePhoto', 'sizes']);\n    }\n  }, {\n    key: \"userId\",\n    get: function get() {\n      return this.payload.user_id || null;\n    }\n    /**\r\n     * Returns the ID of the album\r\n     */\n\n  }, {\n    key: \"albumId\",\n    get: function get() {\n      return this.payload.album_id || null;\n    }\n    /**\r\n     * Returns the photo text\r\n     */\n\n  }, {\n    key: \"text\",\n    get: function get() {\n      return this.payload.text || null;\n    }\n    /**\r\n     * Returns the date when this photo was created\r\n     */\n\n  }, {\n    key: \"createdAt\",\n    get: function get() {\n      return this.payload.date || null;\n    }\n    /**\r\n     * Returns the photo height\r\n     */\n\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.payload.height || null;\n    }\n    /**\r\n     * Returns the photo width\r\n     */\n\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this.payload.width || null;\n    }\n    /**\r\n     * Returns the URL of a small photo\r\n     * (130 or 75)\r\n     */\n\n  }, {\n    key: \"smallPhoto\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      var _this$getSizes = this.getSizes(SMALL_SIZES),\n          _this$getSizes2 = _slicedToArray(_this$getSizes, 1),\n          size = _this$getSizes2[0];\n\n      return size.url;\n    }\n    /**\r\n     * Returns the URL of a medium photo\r\n     * (807 or 604 or less)\r\n     */\n\n  }, {\n    key: \"mediumPhoto\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      var _this$getSizes3 = this.getSizes(MEDIUM_SIZES),\n          _this$getSizes4 = _slicedToArray(_this$getSizes3, 1),\n          size = _this$getSizes4[0];\n\n      return size.url;\n    }\n    /**\r\n     * Returns the URL of a large photo\r\n     * (2560 or 1280 or less)\r\n     */\n\n  }, {\n    key: \"largePhoto\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      var _this$getSizes5 = this.getSizes(LARGE_SIZES),\n          _this$getSizes6 = _slicedToArray(_this$getSizes5, 1),\n          size = _this$getSizes6[0];\n\n      return size.url;\n    }\n    /**\r\n     * Returns the sizes\r\n     */\n\n  }, {\n    key: \"sizes\",\n    get: function get() {\n      return this.payload.sizes || null;\n    }\n  }]);\n\n  return PhotoAttachment;\n}(Attachment);\n\nvar _AttachmentType5 = AttachmentType,\n    LINK = _AttachmentType5.LINK;\nvar kPhoto = Symbol('kPhoto');\n\nvar LinkAttachment =\n/*#__PURE__*/\nfunction (_ExternalAttachment2) {\n  _inherits(LinkAttachment, _ExternalAttachment2);\n\n  /**\r\n   * Constructor\r\n   */\n  function LinkAttachment(payload, vk) {\n    var _this14;\n\n    _classCallCheck(this, LinkAttachment);\n\n    _this14 = _possibleConstructorReturn(this, _getPrototypeOf(LinkAttachment).call(this, LINK, payload)); // @ts-ignore\n\n    _this14.vk = vk;\n    return _this14;\n  }\n  /**\r\n   * Checks for the presence of a photo in a link\r\n   */\n\n\n  _createClass(LinkAttachment, [{\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['title', 'caption', 'description', 'url', 'product', 'button', 'photo']);\n    }\n  }, {\n    key: \"hasPhoto\",\n    get: function get() {\n      return Boolean(this[kPhoto]);\n    }\n    /**\r\n     * Returns the title\r\n     */\n\n  }, {\n    key: \"title\",\n    get: function get() {\n      return this.payload.title;\n    }\n    /**\r\n     * Returns the title\r\n     */\n\n  }, {\n    key: \"caption\",\n    get: function get() {\n      return this.payload.caption || null;\n    }\n    /**\r\n     * Returns the description\r\n     */\n\n  }, {\n    key: \"description\",\n    get: function get() {\n      return this.payload.description || null;\n    }\n    /**\r\n     * Returns the URL of the link\r\n     */\n\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this.payload.url;\n    }\n    /**\r\n     * Returns the product\r\n     */\n\n  }, {\n    key: \"product\",\n    get: function get() {\n      return this.payload.product;\n    }\n    /**\r\n     * Returns the button\r\n     */\n\n  }, {\n    key: \"button\",\n    get: function get() {\n      return this.payload.button || null;\n    }\n    /**\r\n     * Returns the photo\r\n     */\n\n  }, {\n    key: \"photo\",\n    get: function get() {\n      if (!this[kPhoto]) {\n        this[kPhoto] = this.payload.photo ? new PhotoAttachment(this.payload.photo, this.vk) : null;\n      }\n\n      return this[kPhoto];\n    }\n  }]);\n\n  return LinkAttachment;\n}(ExternalAttachment);\n\nvar _AttachmentType6 = AttachmentType,\n    AUDIO = _AttachmentType6.AUDIO;\n\nvar AudioAttachment =\n/*#__PURE__*/\nfunction (_Attachment4) {\n  _inherits(AudioAttachment, _Attachment4);\n\n  /**\r\n   * Constructor\r\n   */\n  function AudioAttachment(payload, vk) {\n    var _this15;\n\n    _classCallCheck(this, AudioAttachment);\n\n    _this15 = _possibleConstructorReturn(this, _getPrototypeOf(AudioAttachment).call(this, AUDIO, payload.owner_id, payload.id, payload.access_key)); // @ts-ignore\n\n    _this15.vk = vk;\n    _this15.payload = payload;\n    _this15.$filled = 'duration' in payload && 'date' in payload;\n    return _this15;\n  }\n  /**\r\n   * Load attachment payload\r\n   */\n\n\n  _createClass(AudioAttachment, [{\n    key: \"loadAttachmentPayload\",\n    value: function () {\n      var _loadAttachmentPayload4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        var _ref19, _ref20, audio;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!this.$filled) {\n                  _context6.next = 2;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 2:\n                _context6.next = 4;\n                return this.vk.api.audio.getById({\n                  audios: \"\".concat(this.ownerId, \"_\").concat(this.id)\n                });\n\n              case 4:\n                _ref19 = _context6.sent;\n                _ref20 = _slicedToArray(_ref19, 1);\n                audio = _ref20[0];\n                this.payload = audio;\n\n                if (this.payload.access_key) {\n                  this.accessKey = this.payload.access_key;\n                }\n\n                this.$filled = true;\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function loadAttachmentPayload() {\n        return _loadAttachmentPayload4.apply(this, arguments);\n      }\n\n      return loadAttachmentPayload;\n    }()\n    /**\r\n     * Checks whether audio is in high quality\r\n     */\n\n  }, {\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['lyricsId', 'albumId', 'genreId', 'title', 'artist', 'duration', 'createdAt', 'url']);\n    }\n  }, {\n    key: \"isHq\",\n    get: function get() {\n      var isHq = this.payload.is_hq;\n\n      if (isHq === undefined) {\n        return null;\n      }\n\n      return isHq === 1;\n    }\n    /**\r\n     * Returns the ID of the lyric\r\n     */\n\n  }, {\n    key: \"lyricsId\",\n    get: function get() {\n      return this.payload.lyrics_id || null;\n    }\n    /**\r\n     * Returns the ID of the album\r\n     */\n\n  }, {\n    key: \"albumId\",\n    get: function get() {\n      return this.payload.album_id || null;\n    }\n    /**\r\n     * Returns the ID of the genre\r\n     */\n\n  }, {\n    key: \"genreId\",\n    get: function get() {\n      return this.payload.genre_id || null;\n    }\n    /**\r\n     * Returns the title\r\n     */\n\n  }, {\n    key: \"title\",\n    get: function get() {\n      return this.payload.title || null;\n    }\n    /**\r\n     * Returns the artist\r\n     */\n\n  }, {\n    key: \"artist\",\n    get: function get() {\n      return this.payload.artist || null;\n    }\n    /**\r\n     * Returns the duration\r\n     */\n\n  }, {\n    key: \"duration\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return this.payload.duration;\n    }\n    /**\r\n     * Returns the date object when this audio was created\r\n     */\n\n  }, {\n    key: \"createdAt\",\n    get: function get() {\n      return this.payload.date || null;\n    }\n    /**\r\n     * Returns the URL of the audio\r\n     */\n\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this.payload.url || null;\n    }\n  }]);\n\n  return AudioAttachment;\n}(Attachment);\n\nvar _AttachmentType7 = AttachmentType,\n    VIDEO = _AttachmentType7.VIDEO;\n\nvar VideoAttachment =\n/*#__PURE__*/\nfunction (_Attachment5) {\n  _inherits(VideoAttachment, _Attachment5);\n\n  /**\r\n   * Constructor\r\n   */\n  function VideoAttachment(payload, vk) {\n    var _this16;\n\n    _classCallCheck(this, VideoAttachment);\n\n    _this16 = _possibleConstructorReturn(this, _getPrototypeOf(VideoAttachment).call(this, VIDEO, payload.owner_id, payload.id, payload.access_key)); // @ts-ignore\n\n    _this16.vk = vk;\n    _this16.payload = payload;\n    _this16.$filled = 'date' in payload;\n    return _this16;\n  }\n  /**\r\n   * Load attachment payload\r\n   */\n\n\n  _createClass(VideoAttachment, [{\n    key: \"loadAttachmentPayload\",\n    value: function () {\n      var _loadAttachmentPayload5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        var _ref21, items, _items, video;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!this.$filled) {\n                  _context7.next = 2;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\");\n\n              case 2:\n                _context7.next = 4;\n                return this.vk.api.video.get({\n                  videos: \"\".concat(this.ownerId, \"_\").concat(this.id),\n                  extended: 0\n                });\n\n              case 4:\n                _ref21 = _context7.sent;\n                items = _ref21.items;\n                _items = _slicedToArray(items, 1), video = _items[0]; // @ts-ignore\n\n                this.payload = video;\n\n                if (this.payload.access_key) {\n                  this.accessKey = this.payload.access_key;\n                }\n\n                this.$filled = true;\n\n              case 10:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function loadAttachmentPayload() {\n        return _loadAttachmentPayload5.apply(this, arguments);\n      }\n\n      return loadAttachmentPayload;\n    }()\n    /**\r\n     * Checks whether the video is repeatable\r\n     */\n\n  }, {\n    key: \"checkBooleanInProperty\",\n\n    /**\r\n     * Checks for a boolean value in the property\r\n     */\n    value: function checkBooleanInProperty(name) {\n      // @ts-ignore\n      var property = this.payload[name];\n\n      if (typeof property !== 'number') {\n        return null;\n      }\n\n      return property === 1;\n    }\n    /**\r\n     * Returns the custom data\r\n     */\n\n  }, {\n    key: inspectCustomData,\n    value: function value() {\n      return copyParams(this, ['title', 'description', 'duration', 'createdAt', 'addedAt', 'viewsCount', 'commentsCount', 'player', 'platformName']);\n    }\n  }, {\n    key: \"isRepeat\",\n    get: function get() {\n      return this.checkBooleanInProperty('repeat');\n    }\n    /**\r\n     * Checks that the user can add a video to himself\r\n     */\n\n  }, {\n    key: \"isCanAdd\",\n    get: function get() {\n      return this.checkBooleanInProperty('can_add');\n    }\n    /**\r\n     * Checks if the user can edit the video\r\n     */\n\n  }, {\n    key: \"isCanEdit\",\n    get: function get() {\n      return this.checkBooleanInProperty('can_edit');\n    }\n    /**\r\n     * Checks whether the video is being processed\r\n     */\n\n  }, {\n    key: \"isProcessing\",\n    get: function get() {\n      return this.checkBooleanInProperty('processing');\n    }\n    /**\r\n     * Checks whether the video is a broadcast\r\n     */\n\n  }, {\n    key: \"isBroadcast\",\n    get: function get() {\n      return this.checkBooleanInProperty('live');\n    }\n    /**\r\n     * Checks whether the video is a broadcast\r\n     */\n\n  }, {\n    key: \"isUpcoming\",\n    get: function get() {\n      return this.checkBooleanInProperty('upcoming');\n    }\n    /**\r\n     * Checks is bookmarked current user\r\n     */\n\n  }, {\n    key: \"isFavorited\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.is_favorite);\n    }\n    /**\r\n     * Returns the title\r\n     */\n\n  }, {\n    key: \"title\",\n    get: function get() {\n      return this.payload.title || null;\n    }\n    /**\r\n     * Returns the description\r\n     */\n\n  }, {\n    key: \"description\",\n    get: function get() {\n      return this.payload.description || null;\n    }\n    /**\r\n     * Returns the duration\r\n     */\n\n  }, {\n    key: \"duration\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return this.payload.duration;\n    }\n    /**\r\n     * Returns the date when this video was created\r\n     */\n\n  }, {\n    key: \"createdAt\",\n    get: function get() {\n      return this.payload.date || null;\n    }\n    /**\r\n     * Returns the date when this video was added\r\n     */\n\n  }, {\n    key: \"addedAt\",\n    get: function get() {\n      return this.payload.adding_date || null;\n    }\n    /**\r\n     * Returns the count views\r\n     */\n\n  }, {\n    key: \"viewsCount\",\n    get: function get() {\n      return this.payload.views || null;\n    }\n    /**\r\n     * Returns the count comments\r\n     */\n\n  }, {\n    key: \"commentsCount\",\n    get: function get() {\n      return this.payload.comments || null;\n    }\n    /**\r\n     * Returns the URL of the page with the player\r\n     */\n\n  }, {\n    key: \"player\",\n    get: function get() {\n      return this.payload.player || null;\n    }\n    /**\r\n     * Returns the name of the platform (for video recordings added from external sites)\r\n     */\n\n  }, {\n    key: \"platformName\",\n    get: function get() {\n      return this.payload.platform || null;\n    }\n  }]);\n\n  return VideoAttachment;\n}(Attachment);\n\nvar _AttachmentType8 = AttachmentType,\n    STORY = _AttachmentType8.STORY;\nvar kVideo = Symbol('video');\nvar kPhoto$1 = Symbol('photo');\nvar kParentStory = Symbol('parentStory');\n\nvar StoryAttachment =\n/*#__PURE__*/\nfunction (_Attachment6) {\n  _inherits(StoryAttachment, _Attachment6);\n\n  /**\r\n   * Constructor\r\n   */\n  function StoryAttachment(payload, vk) {\n    var _this17;\n\n    _classCallCheck(this, StoryAttachment);\n\n    _this17 = _possibleConstructorReturn(this, _getPrototypeOf(StoryAttachment).call(this, STORY, payload.owner_id, payload.id, payload.access_key)); // @ts-ignore\n\n    _this17.vk = vk;\n    _this17.payload = payload;\n    _this17.$filled = 'is_deleted' in payload || 'is_expired' in payload;\n    return _this17;\n  }\n  /**\r\n   * Load attachment payload\r\n   */\n\n\n  _createClass(StoryAttachment, [{\n    key: \"loadAttachmentPayload\",\n    value: function () {\n      var _loadAttachmentPayload6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8() {\n        var _ref22, _ref23, story;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!this.$filled) {\n                  _context8.next = 2;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\");\n\n              case 2:\n                _context8.next = 4;\n                return this.vk.api.stories.getById({\n                  stories: \"\".concat(this.ownerId, \"_\").concat(this.id),\n                  extended: 0\n                });\n\n              case 4:\n                _ref22 = _context8.sent;\n                _ref23 = _slicedToArray(_ref22, 1);\n                story = _ref23[0];\n                this.payload = story;\n\n                if (this.payload.access_key) {\n                  this.accessKey = this.payload.access_key;\n                }\n\n                this.$filled = true;\n\n              case 10:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function loadAttachmentPayload() {\n        return _loadAttachmentPayload6.apply(this, arguments);\n      }\n\n      return loadAttachmentPayload;\n    }()\n    /**\r\n     * Checks is story expired\r\n     */\n\n  }, {\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      if (this.isDeleted) {\n        return copyParams(this, ['isDeleted']);\n      }\n\n      if (this.isExpired) {\n        return copyParams(this, ['isExpired', 'expiresAt']);\n      }\n\n      return copyParams(this, ['isExpired', 'isDeleted', 'isSeen', 'isCanReply', 'isCanShare', 'isCanComment', 'storyType', 'photo', 'video', 'createdAt', 'expiresAt', 'viewsCount', 'link', 'replies', 'parentStoryId', 'parentStoryOwnerId', 'parentStory', 'clickableStickers']);\n    }\n  }, {\n    key: \"isExpired\",\n    get: function get() {\n      return this.payload.is_expired;\n    }\n    /**\r\n     * Checks is story deleted\r\n     */\n\n  }, {\n    key: \"isDeleted\",\n    get: function get() {\n      return this.payload.is_deleted;\n    }\n    /**\r\n     * Checks is story viewed by current user\r\n     */\n\n  }, {\n    key: \"isSeen\",\n    get: function get() {\n      if (!this.$filled) {\n        return undefined;\n      }\n\n      return this.payload.seen === 1;\n    }\n    /**\r\n     * Checks can story reply\r\n     */\n\n  }, {\n    key: \"isCanReply\",\n    get: function get() {\n      if (!this.$filled) {\n        return undefined;\n      }\n\n      return this.payload.can_reply === 1;\n    }\n    /**\r\n     * Checks can story share\r\n     */\n\n  }, {\n    key: \"isCanShare\",\n    get: function get() {\n      if (!this.$filled) {\n        return undefined;\n      }\n\n      return this.payload.can_share === 1;\n    }\n    /**\r\n     * Checks can story comment\r\n     */\n\n  }, {\n    key: \"isCanComment\",\n    get: function get() {\n      if (!this.$filled) {\n        return undefined;\n      }\n\n      return this.payload.can_comment === 1;\n    }\n    /**\r\n     * Returns the type of story\r\n     */\n\n  }, {\n    key: \"storyType\",\n    get: function get() {\n      return this.payload.type;\n    }\n    /**\r\n     * Returns the story photo\r\n     */\n\n  }, {\n    key: \"photo\",\n    get: function get() {\n      if (!this.$filled) {\n        return undefined;\n      }\n\n      if (!this[kPhoto$1]) {\n        this[kPhoto$1] = new PhotoAttachment(this.payload.photo, this.vk);\n      }\n\n      return this[kPhoto$1];\n    }\n    /**\r\n     * Returns the story video\r\n     */\n\n  }, {\n    key: \"video\",\n    get: function get() {\n      if (!this.$filled) {\n        return undefined;\n      }\n\n      if (!this[kVideo]) {\n        this[kVideo] = new VideoAttachment(this.payload.video, this.vk);\n      }\n\n      return this[kVideo];\n    }\n    /**\r\n     * Returns the date when this story was created\r\n     */\n\n  }, {\n    key: \"createdAt\",\n    get: function get() {\n      return this.payload.date;\n    }\n    /**\r\n     * Returns the date when this story was expires\r\n     */\n\n  }, {\n    key: \"expiresAt\",\n    get: function get() {\n      return this.payload.expires_at;\n    }\n    /**\r\n     * Returns the story views count\r\n     */\n\n  }, {\n    key: \"viewsCount\",\n    get: function get() {\n      return this.payload.views;\n    }\n    /**\r\n     * Returns the story link\r\n     */\n\n  }, {\n    key: \"link\",\n    get: function get() {\n      return this.payload.link;\n    }\n    /**\r\n     * Returns the story replies\r\n     */\n\n  }, {\n    key: \"replies\",\n    get: function get() {\n      return this.payload.replies;\n    }\n    /**\r\n     * Returns the parent story id\r\n     */\n\n  }, {\n    key: \"parentStoryId\",\n    get: function get() {\n      return this.payload.parent_story_id;\n    }\n    /**\r\n     * Returns the parent story owner id\r\n     */\n\n  }, {\n    key: \"parentStoryOwnerId\",\n    get: function get() {\n      return this.payload.parent_story_owner_id;\n    }\n    /**\r\n     * Returns the parent story\r\n     */\n\n  }, {\n    key: \"parentStory\",\n    get: function get() {\n      if (!this.$filled) {\n        return undefined;\n      }\n\n      if (!this[kParentStory]) {\n        this[kParentStory] = new StoryAttachment(this.payload.parent_story, this.vk);\n      }\n\n      return this[kParentStory];\n    }\n    /**\r\n     * Returns the parent story clickable stickers\r\n     */\n\n  }, {\n    key: \"clickableStickers\",\n    get: function get() {\n      return this.payload.clickable_stickers;\n    }\n  }]);\n\n  return StoryAttachment;\n}(Attachment);\n\nvar _AttachmentType9 = AttachmentType,\n    MARKET = _AttachmentType9.MARKET;\n\nvar MarketAttachment =\n/*#__PURE__*/\nfunction (_Attachment7) {\n  _inherits(MarketAttachment, _Attachment7);\n\n  /**\r\n   * Constructor\r\n   */\n  function MarketAttachment(payload, vk) {\n    var _this18;\n\n    _classCallCheck(this, MarketAttachment);\n\n    _this18 = _possibleConstructorReturn(this, _getPrototypeOf(MarketAttachment).call(this, MARKET, payload.owner_id, payload.id, payload.access_key)); // @ts-ignore\n\n    _this18.vk = vk;\n    _this18.payload = payload;\n    _this18.$filled = 'title' in payload && 'date' in payload;\n    return _this18;\n  }\n  /**\r\n   * Load attachment payload\r\n   */\n\n\n  _createClass(MarketAttachment, [{\n    key: \"loadAttachmentPayload\",\n    value: function () {\n      var _loadAttachmentPayload7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9() {\n        var _ref24, _ref25, market;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (!this.$filled) {\n                  _context9.next = 2;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\");\n\n              case 2:\n                _context9.next = 4;\n                return this.vk.api.market.getById({\n                  item_ids: \"\".concat(this.ownerId, \"_\").concat(this.id),\n                  extended: 0\n                });\n\n              case 4:\n                _ref24 = _context9.sent;\n                _ref25 = _slicedToArray(_ref24, 1);\n                market = _ref25[0];\n                this.payload = market;\n\n                if (this.payload.access_key) {\n                  this.accessKey = this.payload.access_key;\n                }\n\n                this.$filled = true;\n\n              case 10:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function loadAttachmentPayload() {\n        return _loadAttachmentPayload7.apply(this, arguments);\n      }\n\n      return loadAttachmentPayload;\n    }()\n    /**\r\n     * Checks is bookmarked current user\r\n     */\n\n  }, {\n    key: \"isFavorited\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return Boolean(this.payload.is_favorite);\n    }\n  }]);\n\n  return MarketAttachment;\n}(Attachment);\n\nvar _AttachmentType10 = AttachmentType,\n    STICKER = _AttachmentType10.STICKER;\n\nvar StickerAttachment =\n/*#__PURE__*/\nfunction (_ExternalAttachment3) {\n  _inherits(StickerAttachment, _ExternalAttachment3);\n\n  /**\r\n   * Constructor\r\n   */\n  function StickerAttachment(payload, vk) {\n    var _this19;\n\n    _classCallCheck(this, StickerAttachment);\n\n    _this19 = _possibleConstructorReturn(this, _getPrototypeOf(StickerAttachment).call(this, STICKER, payload)); // @ts-ignore\n\n    _this19.vk = vk;\n    return _this19;\n  }\n  /**\r\n   * Returns the identifier sticker\r\n   */\n\n\n  _createClass(StickerAttachment, [{\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['id', 'productId', 'images', 'imagesWithBackground']);\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this.payload.sticker_id;\n    }\n    /**\r\n     * Returns the identifier product\r\n     */\n\n  }, {\n    key: \"productId\",\n    get: function get() {\n      return this.payload.product_id;\n    }\n    /**\r\n     * Returns the images sizes\r\n     */\n\n  }, {\n    key: \"images\",\n    get: function get() {\n      return this.payload.images || [];\n    }\n    /**\r\n     * Returns the images sizes with backgrounds\r\n     */\n\n  }, {\n    key: \"imagesWithBackground\",\n    get: function get() {\n      return this.payload.images_with_background || [];\n    }\n  }]);\n\n  return StickerAttachment;\n}(ExternalAttachment);\n\nvar _AttachmentType11 = AttachmentType,\n    GRAFFITI = _AttachmentType11.GRAFFITI;\n\nvar GraffitiAttachment =\n/*#__PURE__*/\nfunction (_Attachment8) {\n  _inherits(GraffitiAttachment, _Attachment8);\n\n  /**\r\n   * Constructor\r\n   */\n  function GraffitiAttachment(payload, vk) {\n    var _this20;\n\n    _classCallCheck(this, GraffitiAttachment);\n\n    _this20 = _possibleConstructorReturn(this, _getPrototypeOf(GraffitiAttachment).call(this, GRAFFITI, payload.owner_id, payload.id, payload.access_key)); // @ts-ignore\n\n    _this20.vk = vk;\n    _this20.payload = payload;\n    _this20.$filled = 'url' in payload;\n    return _this20;\n  }\n  /**\r\n   * Load attachment payload\r\n   */\n\n\n  _createClass(GraffitiAttachment, [{\n    key: \"loadAttachmentPayload\",\n    value: function () {\n      var _loadAttachmentPayload8 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10() {\n        var _ref26, _ref27, document;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (!this.$filled) {\n                  _context10.next = 2;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\");\n\n              case 2:\n                _context10.next = 4;\n                return this.vk.api.docs.getById({\n                  docs: \"\".concat(this.ownerId, \"_\").concat(this.id)\n                });\n\n              case 4:\n                _ref26 = _context10.sent;\n                _ref27 = _slicedToArray(_ref26, 1);\n                document = _ref27[0];\n                // @ts-ignore\n                this.payload = document;\n\n                if (this.payload.access_key) {\n                  this.accessKey = this.payload.access_key;\n                }\n\n                this.$filled = true;\n\n              case 10:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function loadAttachmentPayload() {\n        return _loadAttachmentPayload8.apply(this, arguments);\n      }\n\n      return loadAttachmentPayload;\n    }()\n    /**\r\n     * Returns the graffiti height\r\n     */\n\n  }, {\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['height', 'width', 'url']);\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.payload.height || null;\n    }\n    /**\r\n     * Returns the graffiti width\r\n     */\n\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this.payload.width || null;\n    }\n    /**\r\n     * Returns the URL of the document\r\n     */\n\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this.payload.url || null;\n    }\n  }]);\n\n  return GraffitiAttachment;\n}(Attachment);\n\nvar _AttachmentType12 = AttachmentType,\n    DOCUMENT = _AttachmentType12.DOCUMENT;\n/**\r\n * Types of documents\r\n */\n\nvar documentTypes = new Map([[1, 'text'], [2, 'archive'], [3, 'gif'], [4, 'image'], [5, 'audio'], [6, 'video'], [7, 'book'], [8, 'unknown']]);\n\nvar DocumentAttachment =\n/*#__PURE__*/\nfunction (_Attachment9) {\n  _inherits(DocumentAttachment, _Attachment9);\n\n  /**\r\n   * Constructor\r\n   */\n  function DocumentAttachment(payload, vk) {\n    var _this21;\n\n    _classCallCheck(this, DocumentAttachment);\n\n    _this21 = _possibleConstructorReturn(this, _getPrototypeOf(DocumentAttachment).call(this, DOCUMENT, payload.owner_id, payload.id, payload.access_key)); // @ts-ignore\n\n    _this21.vk = vk;\n    _this21.payload = payload;\n    _this21.$filled = 'ext' in payload && 'date' in payload;\n    return _this21;\n  }\n  /**\r\n   * Load attachment payload\r\n   */\n\n\n  _createClass(DocumentAttachment, [{\n    key: \"loadAttachmentPayload\",\n    value: function () {\n      var _loadAttachmentPayload9 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11() {\n        var _ref28, _ref29, document;\n\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                if (!this.$filled) {\n                  _context11.next = 2;\n                  break;\n                }\n\n                return _context11.abrupt(\"return\");\n\n              case 2:\n                _context11.next = 4;\n                return this.vk.api.docs.getById({\n                  docs: \"\".concat(this.ownerId, \"_\").concat(this.id)\n                });\n\n              case 4:\n                _ref28 = _context11.sent;\n                _ref29 = _slicedToArray(_ref28, 1);\n                document = _ref29[0];\n                // @ts-ignore\n                this.payload = document;\n\n                if (this.payload.access_key) {\n                  this.accessKey = this.payload.access_key;\n                }\n\n                this.$filled = true;\n\n              case 10:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function loadAttachmentPayload() {\n        return _loadAttachmentPayload9.apply(this, arguments);\n      }\n\n      return loadAttachmentPayload;\n    }()\n    /**\r\n     * Checks if the document is a text\r\n     */\n\n  }, {\n    key: \"hasPreviewProperty\",\n\n    /**\r\n     * Checks for a property in preview\r\n     */\n    value: function hasPreviewProperty(name) {\n      var preview = this.preview;\n\n      if (preview === null) {\n        return false;\n      }\n\n      return name in preview;\n    }\n    /**\r\n     * Returns the custom data\r\n     */\n\n  }, {\n    key: inspectCustomData,\n    value: function value() {\n      return copyParams(this, ['title', 'typeId', 'typeName', 'createdAt', 'extension', 'url']);\n    }\n  }, {\n    key: \"isText\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return this.typeId === 1;\n    }\n    /**\r\n     * Checks if the document is a archive\r\n     */\n\n  }, {\n    key: \"isArchive\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return this.typeId === 2;\n    }\n    /**\r\n     * Checks if the document is a gif file\r\n     */\n\n  }, {\n    key: \"isGif\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return this.typeId === 3;\n    }\n    /**\r\n     * Checks if the document is a image\r\n     */\n\n  }, {\n    key: \"isImage\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return this.typeId === 4;\n    }\n    /**\r\n     * Checks if the document is a graffiti\r\n     */\n\n  }, {\n    key: \"isGraffiti\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return this.hasPreviewProperty('graffiti');\n    }\n    /**\r\n     * Checks if the document is a audio\r\n     */\n\n  }, {\n    key: \"isAudio\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return this.typeId === 5;\n    }\n    /**\r\n     * Checks if the document is a voice\r\n     */\n\n  }, {\n    key: \"isVoice\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return this.hasPreviewProperty('audio_msg');\n    }\n    /**\r\n     * Checks if the document is a video\r\n     */\n\n  }, {\n    key: \"isVideo\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return this.typeId === 6;\n    }\n    /**\r\n     * Checks if the document is a book\r\n     */\n\n  }, {\n    key: \"isBook\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return this.typeId === 7;\n    }\n    /**\r\n     * Returns the document title\r\n     */\n\n  }, {\n    key: \"title\",\n    get: function get() {\n      return this.payload.title || null;\n    }\n    /**\r\n     * Returns the date when this document was created\r\n     */\n\n  }, {\n    key: \"createdAt\",\n    get: function get() {\n      return this.payload.date || null;\n    }\n    /**\r\n     * Returns the type identifier (1~8)\r\n     */\n\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return this.payload.type || null;\n    }\n    /**\r\n     * Returns the type name\r\n     */\n\n  }, {\n    key: \"typeName\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return documentTypes.get(this.typeId);\n    }\n    /**\r\n     * Returns the size in bytes\r\n     */\n\n  }, {\n    key: \"size\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return this.payload.size;\n    }\n    /**\r\n     * Returns the extension\r\n     */\n\n  }, {\n    key: \"extension\",\n    get: function get() {\n      return this.payload.ext || null;\n    }\n    /**\r\n     * Returns the URL of the document\r\n     */\n\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this.payload.url || null;\n    }\n    /**\r\n     * Returns the info to preview\r\n     */\n\n  }, {\n    key: \"preview\",\n    get: function get() {\n      return this.payload.preview || null;\n    }\n  }]);\n\n  return DocumentAttachment;\n}(Attachment);\n\nvar _AttachmentType13 = AttachmentType,\n    WALL_REPLY = _AttachmentType13.WALL_REPLY;\n\nvar WallReplyAttachment =\n/*#__PURE__*/\nfunction (_ExternalAttachment4) {\n  _inherits(WallReplyAttachment, _ExternalAttachment4);\n\n  /**\r\n   * Constructor\r\n   */\n  function WallReplyAttachment(payload, vk) {\n    var _this22;\n\n    _classCallCheck(this, WallReplyAttachment);\n\n    _this22 = _possibleConstructorReturn(this, _getPrototypeOf(WallReplyAttachment).call(this, WALL_REPLY, payload)); // @ts-ignore\n\n    _this22.vk = vk;\n    return _this22;\n  }\n\n  return WallReplyAttachment;\n}(ExternalAttachment);\n\nvar _AttachmentType14 = AttachmentType,\n    MARKET_ALBUM = _AttachmentType14.MARKET_ALBUM;\n\nvar MarketAlbumAttachment =\n/*#__PURE__*/\nfunction (_Attachment10) {\n  _inherits(MarketAlbumAttachment, _Attachment10);\n\n  /**\r\n   * Constructor\r\n   */\n  function MarketAlbumAttachment(payload, vk) {\n    var _this23;\n\n    _classCallCheck(this, MarketAlbumAttachment);\n\n    _this23 = _possibleConstructorReturn(this, _getPrototypeOf(MarketAlbumAttachment).call(this, MARKET_ALBUM, payload.owner_id, payload.id, payload.access_key)); // @ts-ignore\n\n    _this23.vk = vk;\n    _this23.payload = payload;\n    _this23.$filled = 'title' in payload && 'updated_time' in payload;\n    return _this23;\n  }\n  /**\r\n   * Load attachment payload\r\n   */\n\n\n  _createClass(MarketAlbumAttachment, [{\n    key: \"loadAttachmentPayload\",\n    value: function () {\n      var _loadAttachmentPayload10 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12() {\n        var _ref30, _ref31, album;\n\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                if (!this.$filled) {\n                  _context12.next = 2;\n                  break;\n                }\n\n                return _context12.abrupt(\"return\");\n\n              case 2:\n                _context12.next = 4;\n                return this.vk.api.market.getAlbumById({\n                  owner_id: this.ownerId,\n                  album_ids: this.id\n                });\n\n              case 4:\n                _ref30 = _context12.sent;\n                _ref31 = _slicedToArray(_ref30, 1);\n                album = _ref31[0];\n                this.payload = album;\n\n                if (this.payload.access_key) {\n                  this.accessKey = this.payload.access_key;\n                }\n\n                this.$filled = true;\n\n              case 10:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function loadAttachmentPayload() {\n        return _loadAttachmentPayload10.apply(this, arguments);\n      }\n\n      return loadAttachmentPayload;\n    }()\n  }]);\n\n  return MarketAlbumAttachment;\n}(Attachment);\n\nvar _AttachmentType15 = AttachmentType,\n    AUDIO_MESSAGE = _AttachmentType15.AUDIO_MESSAGE;\n\nvar AudioMessageAttachment =\n/*#__PURE__*/\nfunction (_Attachment11) {\n  _inherits(AudioMessageAttachment, _Attachment11);\n\n  /**\r\n   * Constructor\r\n   */\n  function AudioMessageAttachment(payload, vk) {\n    var _this24;\n\n    _classCallCheck(this, AudioMessageAttachment);\n\n    _this24 = _possibleConstructorReturn(this, _getPrototypeOf(AudioMessageAttachment).call(this, AUDIO_MESSAGE, payload.owner_id, payload.id, payload.access_key)); // @ts-ignore\n\n    _this24.vk = vk;\n    _this24.payload = payload;\n    _this24.$filled = 'duration' in payload;\n    return _this24;\n  }\n  /**\r\n   * Load attachment payload\r\n   */\n\n\n  _createClass(AudioMessageAttachment, [{\n    key: \"loadAttachmentPayload\",\n    value: function () {\n      var _loadAttachmentPayload11 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13() {\n        var _ref32, _ref33, document;\n\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                if (!this.$filled) {\n                  _context13.next = 2;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\");\n\n              case 2:\n                _context13.next = 4;\n                return this.vk.api.docs.getById({\n                  docs: \"\".concat(this.ownerId, \"_\").concat(this.id)\n                });\n\n              case 4:\n                _ref32 = _context13.sent;\n                _ref33 = _slicedToArray(_ref32, 1);\n                document = _ref33[0];\n                // @ts-ignore\n                this.payload = document;\n\n                if (this.payload.access_key) {\n                  this.accessKey = this.payload.access_key;\n                }\n\n                this.$filled = true;\n\n              case 10:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function loadAttachmentPayload() {\n        return _loadAttachmentPayload11.apply(this, arguments);\n      }\n\n      return loadAttachmentPayload;\n    }()\n    /**\r\n     * Returns the duration of the audio message\r\n     */\n\n  }, {\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      var payload = copyParams(this, ['duration', 'waveform', 'oggUrl', 'mp3Url', 'url']); // @ts-ignore\n\n      payload.waveform = \"[...\".concat(this.waveform.length, \" elements]\");\n      return payload;\n    }\n  }, {\n    key: \"duration\",\n    get: function get() {\n      if (!this.$filled) {\n        return null;\n      }\n\n      return this.payload.duration;\n    }\n    /**\r\n     * Returns the waveform of the audio message\r\n     */\n\n  }, {\n    key: \"waveform\",\n    get: function get() {\n      return this.payload.waveform || null;\n    }\n    /**\r\n     * Returns the ogg URL of the audio message\r\n     */\n\n  }, {\n    key: \"oggUrl\",\n    get: function get() {\n      return this.payload.link_ogg || null;\n    }\n    /**\r\n     * Returns the mp3 URL of the audio message\r\n     */\n\n  }, {\n    key: \"mp3Url\",\n    get: function get() {\n      return this.payload.link_mp3 || null;\n    }\n    /**\r\n     * Returns the URL of the audio message\r\n     */\n\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this.mp3Url || this.oggUrl;\n    }\n  }]);\n\n  return AudioMessageAttachment;\n}(Attachment);\n\nvar _UploadErrorCode = UploadErrorCode,\n    MISSING_PARAMETERS = _UploadErrorCode.MISSING_PARAMETERS,\n    NO_FILES_TO_UPLOAD = _UploadErrorCode.NO_FILES_TO_UPLOAD,\n    EXCEEDED_MAX_FILES = _UploadErrorCode.EXCEEDED_MAX_FILES,\n    UNSUPPORTED_SOURCE_TYPE = _UploadErrorCode.UNSUPPORTED_SOURCE_TYPE;\nvar isURL = /^https?:\\/\\//i;\nvar DocumentTypes = {\n  doc: DocumentAttachment,\n  graffiti: GraffitiAttachment,\n  audio_message: AudioMessageAttachment\n};\n\nvar Upload =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function Upload(vk) {\n    var _this25 = this;\n\n    _classCallCheck(this, Upload);\n\n    this.vk = vk;\n    this.graffiti = deprecate(function (params) {\n      return (// @ts-ignore\n        _this25.messageGraffiti(params)\n      );\n    }, 'graffiti(params) is deprecated, use messageGraffiti(params) instead');\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(Upload, [{\n    key: \"photoAlbum\",\n\n    /**\r\n     * Uploading photos to an album\r\n     */\n    value: function () {\n      var _photoAlbum = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee14(params) {\n        var _this26 = this;\n\n        var photos;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.next = 2;\n                return this.conduct({\n                  field: 'file',\n                  params: params,\n                  // @ts-ignore\n                  getServer: this.vk.api.photos.getUploadServer,\n                  serverParams: ['album_id', 'group_id'],\n                  saveFiles: this.vk.api.photos.save,\n                  saveParams: ['album_id', 'group_id', 'latitude', 'longitude', 'caption'],\n                  maxFiles: 5,\n                  attachmentType: 'photo'\n                });\n\n              case 2:\n                photos = _context14.sent;\n                return _context14.abrupt(\"return\", photos.map(function (photo) {\n                  return new PhotoAttachment(photo, _this26.vk);\n                }));\n\n              case 4:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function photoAlbum(_x8) {\n        return _photoAlbum.apply(this, arguments);\n      }\n\n      return photoAlbum;\n    }()\n    /**\r\n     * Uploading photos to the wall\r\n     */\n\n  }, {\n    key: \"wallPhoto\",\n    value: function () {\n      var _wallPhoto = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee15(params) {\n        var _ref34, _ref35, photo;\n\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.next = 2;\n                return this.conduct({\n                  field: 'photo',\n                  params: params,\n                  // @ts-ignore\n                  getServer: this.vk.api.photos.getWallUploadServer,\n                  serverParams: ['group_id'],\n                  // @ts-ignore\n                  saveFiles: this.vk.api.photos.saveWallPhoto,\n                  saveParams: ['user_id', 'group_id', 'latitude', 'longitude', 'caption'],\n                  maxFiles: 1,\n                  attachmentType: 'photo'\n                });\n\n              case 2:\n                _ref34 = _context15.sent;\n                _ref35 = _slicedToArray(_ref34, 1);\n                photo = _ref35[0];\n                return _context15.abrupt(\"return\", new PhotoAttachment(photo, this.vk));\n\n              case 6:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function wallPhoto(_x9) {\n        return _wallPhoto.apply(this, arguments);\n      }\n\n      return wallPhoto;\n    }()\n    /**\r\n     * Uploading the main photo of a user or community\r\n     */\n\n  }, {\n    key: \"ownerPhoto\",\n    value: function ownerPhoto(params) {\n      return this.conduct({\n        field: 'photo',\n        params: params,\n        // @ts-ignore\n        getServer: this.vk.api.photos.getOwnerPhotoUploadServer,\n        serverParams: ['owner_id'],\n        saveFiles: this.vk.api.photos.saveOwnerPhoto,\n        maxFiles: 1,\n        attachmentType: 'photo'\n      }); // {\n      //   photo_hash: 'c8d43da5e1281b7aed6bb8f0c4f3ad69',\n      //   photo_src: 'https://pp.userapi.com/c836429/v836429114/673f6/5VJB8GXtK88.jpg',\n      //   photo_src_big: 'https://pp.userapi.com/c836429/v836429114/673f7/7fGvrJ1wOx0.jpg',\n      //   photo_src_small: 'https://pp.userapi.com/c836429/v836429114/673f5/l5d1ASgyuxk.jpg',\n      //   saved: 1,\n      //   post_id: 3331\n      // }\n    }\n    /**\r\n     * Uploading a photo to a private message\r\n     */\n\n  }, {\n    key: \"messagePhoto\",\n    value: function () {\n      var _messagePhoto = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee16(params) {\n        var _ref36, _ref37, photo;\n\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return this.conduct({\n                  field: 'photo',\n                  params: params,\n                  // @ts-ignore\n                  getServer: this.vk.api.photos.getMessagesUploadServer,\n                  serverParams: ['peer_id'],\n                  // @ts-ignore\n                  saveFiles: this.vk.api.photos.saveMessagesPhoto,\n                  maxFiles: 1,\n                  attachmentType: 'photo'\n                });\n\n              case 2:\n                _ref36 = _context16.sent;\n                _ref37 = _slicedToArray(_ref36, 1);\n                photo = _ref37[0];\n                return _context16.abrupt(\"return\", new PhotoAttachment(photo, this.vk));\n\n              case 6:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function messagePhoto(_x10) {\n        return _messagePhoto.apply(this, arguments);\n      }\n\n      return messagePhoto;\n    }()\n    /**\r\n     * Uploading the main photo for a chat\r\n     */\n\n  }, {\n    key: \"chatPhoto\",\n    value: function chatPhoto(params) {\n      var _this27 = this;\n\n      return this.conduct({\n        field: 'file',\n        params: params,\n        // @ts-ignore\n        getServer: this.vk.api.photos.getChatUploadServer,\n        serverParams: ['chat_id', 'crop_x', 'crop_y', 'crop_width'],\n        saveFiles: function saveFiles(file) {\n          return (// @ts-ignore\n            _this27.vk.api.messages.setChatPhoto({\n              file: file\n            })\n          );\n        },\n        maxFiles: 1,\n        attachmentType: 'photo'\n      }); // {\n      //   message_id: 3745390,\n      //   chat: {\n      //    id: 152,\n      //    type: 'chat',\n      //    title: '<Titile name>',\n      //    admin_id: 335447860,\n      //    users: [335447860,\n      //      140192020,\n      //      153711615,\n      //      314650825,\n      //      218747758,\n      //      155944103,\n      //      159737827,\n      //      64299368,\n      //      157534541,\n      //      153608064,\n      //      335540121,\n      //      349609849,\n      //      344184938,\n      //      341178526,\n      //      198210835,\n      //      135446999,\n      //      163850606,\n      //      123640861,\n      //      316216798,\n      //      359118107,\n      //      241235369,\n      //      160213445,\n      //      126624591,\n      //      390221395,\n      //      195624402,\n      //      94955334,\n      //      167302501,\n      //      17516523,\n      //      294583792,\n      //      294869767,\n      //      114281676,\n      //      137762280,\n      //      406076540,\n      //      410605840,\n      //      395646590,\n      //      421554042,\n      //      331599090,\n      //      342269712\n      //    ],\n      //    photo_50: 'https://pp.userapi.com/c837624/v837624114/5d495/gLgv-JrVmkk.jpg',\n      //    photo_100: 'https://pp.userapi.com/c837624/v837624114/5d494/VNp61I1yuCk.jpg',\n      //    photo_200: 'https://pp.userapi.com/c837624/v837624114/5d492/lAoc_fAai2Q.jpg'\n      //   }\n      // }\n    }\n    /**\r\n     * Uploading a photo for a product\r\n     */\n\n  }, {\n    key: \"marketPhoto\",\n    value: function () {\n      var _marketPhoto = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee17(params) {\n        var _ref38, _ref39, photo;\n\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.next = 2;\n                return this.conduct({\n                  field: 'file',\n                  params: params,\n                  // @ts-ignore\n                  getServer: this.vk.api.photos.getMarketUploadServer,\n                  serverParams: ['group_id', 'main_photo', 'crop_x', 'crop_y', 'crop_width'],\n                  // @ts-ignore\n                  saveFiles: this.vk.api.photos.saveMarketPhoto,\n                  saveParams: ['group_id'],\n                  maxFiles: 1,\n                  attachmentType: 'photo'\n                });\n\n              case 2:\n                _ref38 = _context17.sent;\n                _ref39 = _slicedToArray(_ref38, 1);\n                photo = _ref39[0];\n                return _context17.abrupt(\"return\", new PhotoAttachment(photo, this.vk));\n\n              case 6:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function marketPhoto(_x11) {\n        return _marketPhoto.apply(this, arguments);\n      }\n\n      return marketPhoto;\n    }()\n    /**\r\n     * Uploads a photo for the selection of goods\r\n     */\n\n  }, {\n    key: \"marketAlbumPhoto\",\n    value: function () {\n      var _marketAlbumPhoto = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee18(params) {\n        var _ref40, _ref41, photo;\n\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return this.conduct({\n                  field: 'file',\n                  params: params,\n                  // @ts-ignore\n                  getServer: this.vk.api.photos.getMarketAlbumUploadServer,\n                  serverParams: ['group_id'],\n                  // @ts-ignore\n                  saveFiles: this.vk.api.photos.saveMarketAlbumPhoto,\n                  saveParams: ['group_id'],\n                  maxFiles: 1,\n                  attachmentType: 'photo'\n                });\n\n              case 2:\n                _ref40 = _context18.sent;\n                _ref41 = _slicedToArray(_ref40, 1);\n                photo = _ref41[0];\n                return _context18.abrupt(\"return\", new PhotoAttachment(photo, this.vk));\n\n              case 6:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function marketAlbumPhoto(_x12) {\n        return _marketAlbumPhoto.apply(this, arguments);\n      }\n\n      return marketAlbumPhoto;\n    }()\n    /**\r\n     * Uploads audio\r\n     */\n\n  }, {\n    key: \"audio\",\n    value: function () {\n      var _audio = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee19(params) {\n        var audio;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return this.conduct({\n                  field: 'file',\n                  params: params,\n                  // @ts-ignore\n                  getServer: this.vk.api.audio.getUploadServer,\n                  // @ts-ignore\n                  saveFiles: this.vk.api.audio.save,\n                  saveParams: ['title', 'artist'],\n                  maxFiles: 1,\n                  attachmentType: 'audio'\n                });\n\n              case 2:\n                audio = _context19.sent;\n                return _context19.abrupt(\"return\", new AudioAttachment(audio, this.vk));\n\n              case 4:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function audio(_x13) {\n        return _audio.apply(this, arguments);\n      }\n\n      return audio;\n    }()\n    /**\r\n     * Uploads video\r\n     */\n\n  }, {\n    key: \"video\",\n    value: function () {\n      var _video = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee20(params) {\n        var save, response, source, formData, video;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _context20.next = 2;\n                return this.vk.api.video.save(copyParams$1(params, ['group_id', 'album_id', 'link', 'name', 'description', 'is_private', 'wallpost', 'privacy_view', 'privacy_comment', 'no_comments', 'repeat', 'compression']));\n\n              case 2:\n                save = _context20.sent;\n                save.id = save.video_id;\n\n                if (!('link' in params)) {\n                  _context20.next = 11;\n                  break;\n                }\n\n                _context20.next = 7;\n                return fetch(save.upload_url, {\n                  agent: this.vk.options.agent\n                });\n\n              case 7:\n                response = _context20.sent;\n                _context20.next = 10;\n                return response.json();\n\n              case 10:\n                return _context20.abrupt(\"return\", new VideoAttachment(save, this.vk));\n\n              case 11:\n                source = params.source;\n\n                if (typeof source !== 'object' || source.constructor !== Object) {\n                  // @ts-ignore\n                  source = {\n                    values: source\n                  };\n                } // @ts-ignore\n\n\n                if (!Array.isArray(source.values)) {\n                  // @ts-ignore\n                  source.values = [source.values];\n                }\n\n                _context20.next = 16;\n                return this.buildPayload({\n                  maxFiles: 1,\n                  field: 'video_file',\n                  attachmentType: 'video',\n                  // @ts-ignore\n                  values: source.values\n                });\n\n              case 16:\n                formData = _context20.sent;\n                _context20.next = 19;\n                return this.upload(save.upload_url, {\n                  formData: formData,\n                  forceBuffer: true,\n                  // @ts-ignore\n                  timeout: source.timeout\n                });\n\n              case 19:\n                video = _context20.sent;\n                return _context20.abrupt(\"return\", new VideoAttachment(_objectSpread({}, save, {}, video), this.vk));\n\n              case 21:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function video(_x14) {\n        return _video.apply(this, arguments);\n      }\n\n      return video;\n    }()\n    /**\r\n     * Uploads document\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"conductDocument\",\n    value: function () {\n      var _conductDocument = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee21(params) {\n        var _ref42,\n            _ref42$attachmentType,\n            attachmentType,\n            response,\n            ConductAttachment,\n            _args21 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                _ref42 = _args21.length > 1 && _args21[1] !== undefined ? _args21[1] : {}, _ref42$attachmentType = _ref42.attachmentType, attachmentType = _ref42$attachmentType === void 0 ? 'doc' : _ref42$attachmentType;\n                _context21.next = 3;\n                return this.conduct({\n                  field: 'file',\n                  params: params,\n                  // @ts-ignore\n                  getServer: this.vk.api.docs.getUploadServer,\n                  serverParams: ['type', 'group_id'],\n                  // @ts-ignore\n                  saveFiles: this.vk.api.docs.save,\n                  saveParams: ['title', 'tags'],\n                  maxFiles: 1,\n                  attachmentType: attachmentType\n                });\n\n              case 3:\n                response = _context21.sent;\n                ConductAttachment = DocumentTypes[response.type] || DocumentTypes.doc;\n                return _context21.abrupt(\"return\", new ConductAttachment(response[response.type], this.vk));\n\n              case 6:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function conductDocument(_x15) {\n        return _conductDocument.apply(this, arguments);\n      }\n\n      return conductDocument;\n    }()\n    /**\r\n     * Uploads document\r\n     */\n\n  }, {\n    key: \"document\",\n    value: function document(params) {\n      return this.conductDocument(params, {\n        attachmentType: 'doc'\n      });\n    }\n    /**\r\n     * Uploads wall document\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"conductWallDocument\",\n    value: function () {\n      var _conductWallDocument = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee22(params) {\n        var _ref43,\n            _ref43$attachmentType,\n            attachmentType,\n            response,\n            ConductAttachment,\n            _args22 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                _ref43 = _args22.length > 1 && _args22[1] !== undefined ? _args22[1] : {}, _ref43$attachmentType = _ref43.attachmentType, attachmentType = _ref43$attachmentType === void 0 ? 'doc' : _ref43$attachmentType;\n                _context22.next = 3;\n                return this.conduct({\n                  field: 'file',\n                  params: params,\n                  // @ts-ignore\n                  getServer: this.vk.api.docs.getWallUploadServer,\n                  serverParams: ['type', 'group_id'],\n                  // @ts-ignore\n                  saveFiles: this.vk.api.docs.save,\n                  saveParams: ['title', 'tags'],\n                  maxFiles: 1,\n                  attachmentType: attachmentType\n                });\n\n              case 3:\n                response = _context22.sent;\n                ConductAttachment = DocumentTypes[response.type] || DocumentTypes.doc;\n                return _context22.abrupt(\"return\", new ConductAttachment(response[response.type], this.vk));\n\n              case 6:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function conductWallDocument(_x16) {\n        return _conductWallDocument.apply(this, arguments);\n      }\n\n      return conductWallDocument;\n    }()\n    /**\r\n     * Uploads wall document\r\n     */\n\n  }, {\n    key: \"wallDocument\",\n    value: function wallDocument(params) {\n      return this.conductWallDocument(params, {\n        attachmentType: 'doc'\n      });\n    }\n    /**\r\n     * Uploads wall document\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"conductMessageDocument\",\n    value: function () {\n      var _conductMessageDocument = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee23(params) {\n        var _ref44,\n            _ref44$attachmentType,\n            attachmentType,\n            response,\n            ConductAttachment,\n            _args23 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _ref44 = _args23.length > 1 && _args23[1] !== undefined ? _args23[1] : {}, _ref44$attachmentType = _ref44.attachmentType, attachmentType = _ref44$attachmentType === void 0 ? 'doc' : _ref44$attachmentType;\n                _context23.next = 3;\n                return this.conduct({\n                  field: 'file',\n                  params: params,\n                  // @ts-ignore\n                  getServer: this.vk.api.docs.getMessagesUploadServer,\n                  serverParams: ['type', 'peer_id'],\n                  // @ts-ignore\n                  saveFiles: this.vk.api.docs.save,\n                  saveParams: ['title', 'tags'],\n                  maxFiles: 1,\n                  attachmentType: attachmentType\n                });\n\n              case 3:\n                response = _context23.sent;\n                ConductAttachment = DocumentTypes[response.type] || DocumentTypes.doc;\n                return _context23.abrupt(\"return\", new ConductAttachment(response[response.type], this.vk));\n\n              case 6:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n\n      function conductMessageDocument(_x17) {\n        return _conductMessageDocument.apply(this, arguments);\n      }\n\n      return conductMessageDocument;\n    }()\n    /**\r\n     * Uploads message document\r\n     */\n\n  }, {\n    key: \"messageDocument\",\n    value: function messageDocument(params) {\n      return this.conductMessageDocument(_objectSpread({}, params, {\n        type: 'doc'\n      }), {\n        attachmentType: 'doc'\n      });\n    }\n    /**\r\n     * Uploads audio message\r\n     */\n\n  }, {\n    key: \"audioMessage\",\n    value: function audioMessage(params) {\n      return this.conductMessageDocument(_objectSpread({}, params, {\n        type: 'audio_message'\n      }), {\n        attachmentType: 'audioMessage'\n      }); // { type: 'audio_message',\n      // audio_message: {\n      //   id: 484017542,\n      //   owner_id: 195624402,\n      //   duration: 48,\n      //   waveform: [...],\n      //   link_ogg:\n      //   'https://psv4.userapi.com/c805324//u195624402/audiomsg/15734aa6bb.ogg',\n      //   link_mp3:\n      //   'https://psv4.userapi.com/c805324//u195624402/audiomsg/15734aa6bb.mp3',\n      //   access_key: '295cc90411e6222db0' } }\n    }\n    /**\r\n     * Uploads graffiti in documents\r\n     */\n\n  }, {\n    key: \"documentGraffiti\",\n    value: function documentGraffiti(params) {\n      return this.conductDocument(_objectSpread({}, params, {\n        type: 'graffiti'\n      }), {\n        attachmentType: 'graffiti'\n      });\n    }\n    /**\r\n     * Uploads graffiti in messages\r\n     */\n\n  }, {\n    key: \"messageGraffiti\",\n    value: function messageGraffiti(params) {\n      return this.conductMessageDocument(_objectSpread({}, params, {\n        type: 'graffiti'\n      }), {\n        attachmentType: 'graffiti'\n      });\n    }\n    /**\r\n     * Uploads community cover\r\n     */\n\n  }, {\n    key: \"groupCover\",\n    value: function groupCover(params) {\n      return this.conduct({\n        field: 'photo',\n        params: params,\n        // @ts-ignore\n        getServer: this.vk.api.photos.getOwnerCoverPhotoUploadServer,\n        serverParams: ['group_id', 'crop_x', 'crop_y', 'crop_x2', 'crop_y2'],\n        // @ts-ignore\n        saveFiles: this.vk.api.photos.saveOwnerCoverPhoto,\n        maxFiles: 1,\n        attachmentType: 'photo'\n      }); // {\n      //  images: [\n      //    {\n      //      url: 'https://cs7056.userapi.com/c639526/v639526192/46404/r-1Nhr-Dktc.jpg',\n      //      width: 200,\n      //      height: 50\n      //    },\n      //    {\n      //      url: 'https://cs7056.userapi.com/c639526/v639526192/46403/oDB9tAgtUrQ.jpg',\n      //      width: 400,\n      //      height: 101\n      //    },\n      //    {\n      //      url: 'https://cs7056.userapi.com/c639526/v639526192/46400/gLwCTmDEPXY.jpg',\n      //      width: 795,\n      //      height: 200\n      //    },\n      //    {\n      //      url: 'https://cs7056.userapi.com/c639526/v639526192/46402/w2ucyq8zwF8.jpg',\n      //      width: 1080,\n      //      height: 272\n      //    },\n      //    {\n      //      url: 'https://cs7056.userapi.com/c639526/v639526192/46401/YTmN89yMaU0.jpg',\n      //      width: 1590,\n      //      height: 400\n      //    }\n      //  ]\n      // }\n    }\n    /**\r\n     * Uploads photo stories\r\n     */\n\n  }, {\n    key: \"storiesPhoto\",\n    value: function storiesPhoto(params) {\n      return this.conduct({\n        field: 'file',\n        params: params,\n        // @ts-ignore\n        getServer: this.vk.api.stories.getPhotoUploadServer,\n        serverParams: ['add_to_news', 'user_ids', 'reply_to_story', 'link_text', 'link_url', 'group_id', 'attach_access_key'],\n        saveFiles: function saveFiles(save) {\n          return save;\n        },\n        maxFiles: 1,\n        attachmentType: 'photo'\n      });\n    }\n    /**\r\n     * Uploads video stories\r\n     */\n\n  }, {\n    key: \"storiesVideo\",\n    value: function storiesVideo(params) {\n      return this.conduct({\n        field: 'video_file',\n        params: params,\n        // @ts-ignore\n        getServer: this.vk.api.stories.getVideoUploadServer,\n        serverParams: ['add_to_news', 'user_ids', 'reply_to_story', 'link_text', 'link_url', 'group_id'],\n        saveFiles: function saveFiles(save) {\n          return save;\n        },\n        maxFiles: 1,\n        attachmentType: 'video',\n        forceBuffer: true\n      });\n    }\n    /**\r\n     * Uploads poll photo\r\n     */\n\n  }, {\n    key: \"pollPhoto\",\n    value: function pollPhoto(params // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n      return this.conduct({\n        field: 'file',\n        params: params,\n        // @ts-ignore\n        getServer: this.vk.api.polls.getPhotoUploadServer,\n        serverParams: ['owner_id'],\n        // @ts-ignore\n        saveFiles: this.vk.api.polls.savePhoto,\n        maxFiles: 1,\n        attachmentType: 'photo'\n      });\n    }\n    /**\r\n     * Behavior for the upload method\r\n     */\n\n  }, {\n    key: \"conduct\",\n    value: function () {\n      var _conduct = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee24(_ref45) {\n        var field, params, getServer, _ref45$serverParams, serverParams, saveFiles, _ref45$saveParams, saveParams, _ref45$maxFiles, maxFiles, attachmentType, _ref45$forceBuffer, forceBuffer, source, valuesLength, _ref46, _ref47, url, formData, uploaded, _response, response;\n\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                field = _ref45.field, params = _ref45.params, getServer = _ref45.getServer, _ref45$serverParams = _ref45.serverParams, serverParams = _ref45$serverParams === void 0 ? [] : _ref45$serverParams, saveFiles = _ref45.saveFiles, _ref45$saveParams = _ref45.saveParams, saveParams = _ref45$saveParams === void 0 ? [] : _ref45$saveParams, _ref45$maxFiles = _ref45.maxFiles, maxFiles = _ref45$maxFiles === void 0 ? 1 : _ref45$maxFiles, attachmentType = _ref45.attachmentType, _ref45$forceBuffer = _ref45.forceBuffer, forceBuffer = _ref45$forceBuffer === void 0 ? false : _ref45$forceBuffer;\n\n                if (!(!params || !params.source)) {\n                  _context24.next = 3;\n                  break;\n                }\n\n                throw new UploadError({\n                  message: 'Missing upload params',\n                  code: MISSING_PARAMETERS\n                });\n\n              case 3:\n                source = params.source;\n\n                if (typeof source !== 'object' || source.constructor !== Object // @ts-ignore\n                || source.value !== undefined) {\n                  // @ts-ignore\n                  source = {\n                    values: source\n                  };\n                } // @ts-ignore\n\n\n                if (!Array.isArray(source.values)) {\n                  // @ts-ignore\n                  source.values = [source.values];\n                } // @ts-ignore\n\n\n                if ('uploadUrl' in source) {\n                  // eslint-disable-next-line no-param-reassign\n                  getServer = function getServer() {\n                    return {\n                      // @ts-ignore\n                      upload_url: source.uploadUrl\n                    };\n                  };\n                } // @ts-ignore\n\n\n                valuesLength = source.values.length;\n\n                if (!(valuesLength === 0)) {\n                  _context24.next = 10;\n                  break;\n                }\n\n                throw new UploadError({\n                  message: 'No files to upload',\n                  code: NO_FILES_TO_UPLOAD\n                });\n\n              case 10:\n                if (!(valuesLength > maxFiles)) {\n                  _context24.next = 12;\n                  break;\n                }\n\n                throw new UploadError({\n                  message: 'The number of files uploaded has exceeded',\n                  code: EXCEEDED_MAX_FILES\n                });\n\n              case 12:\n                _context24.next = 14;\n                return Promise.all([getServer(copyParams$1(params, serverParams)), this.buildPayload({\n                  field: field,\n                  // @ts-ignore\n                  values: source.values,\n                  maxFiles: maxFiles,\n                  attachmentType: attachmentType\n                })]);\n\n              case 14:\n                _ref46 = _context24.sent;\n                _ref47 = _slicedToArray(_ref46, 2);\n                url = _ref47[0].upload_url;\n                formData = _ref47[1];\n                _context24.next = 20;\n                return this.upload(url, {\n                  formData: formData,\n                  forceBuffer: forceBuffer,\n                  // @ts-ignore\n                  timeout: source.timeout\n                });\n\n              case 20:\n                uploaded = _context24.sent;\n\n                if (!(typeof uploaded !== 'object')) {\n                  _context24.next = 26;\n                  break;\n                }\n\n                _context24.next = 24;\n                return saveFiles(uploaded);\n\n              case 24:\n                _response = _context24.sent;\n                return _context24.abrupt(\"return\", _response);\n\n              case 26:\n                _context24.next = 28;\n                return saveFiles(_objectSpread({}, copyParams$1(params, saveParams), {}, uploaded));\n\n              case 28:\n                response = _context24.sent;\n                return _context24.abrupt(\"return\", response);\n\n              case 30:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function conduct(_x18) {\n        return _conduct.apply(this, arguments);\n      }\n\n      return conduct;\n    }()\n    /**\r\n     * Building form data\r\n     */\n    // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"buildPayload\",\n    value: function () {\n      var _buildPayload = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee26(_ref48) {\n        var field, values, maxFiles, attachmentType, boundary, formData, isMultipart, tasks;\n        return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                field = _ref48.field, values = _ref48.values, maxFiles = _ref48.maxFiles, attachmentType = _ref48.attachmentType;\n                boundary = randomBytes(32).toString('hex');\n                formData = new MultipartStream(boundary);\n                isMultipart = maxFiles > 1;\n                tasks = values.map(function (value) {\n                  return typeof value === 'object' && value.constructor === Object ? value : {\n                    value: value\n                  };\n                }) // @ts-ignore\n                .map(\n                /*#__PURE__*/\n                function () {\n                  var _ref50 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee25(_ref49, i) {\n                    var value, filename, _ref49$contentType, contentType, response, name, headers;\n\n                    return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n                      while (1) {\n                        switch (_context25.prev = _context25.next) {\n                          case 0:\n                            value = _ref49.value, filename = _ref49.filename, _ref49$contentType = _ref49.contentType, contentType = _ref49$contentType === void 0 ? null : _ref49$contentType;\n\n                            if (!(typeof value === 'string')) {\n                              _context25.next = 10;\n                              break;\n                            }\n\n                            if (!isURL.test(value)) {\n                              _context25.next = 9;\n                              break;\n                            }\n\n                            _context25.next = 5;\n                            return fetch(value);\n\n                          case 5:\n                            response = _context25.sent;\n                            // eslint-disable-next-line no-param-reassign\n                            value = response.body;\n                            _context25.next = 10;\n                            break;\n\n                          case 9:\n                            // eslint-disable-next-line no-param-reassign\n                            value = createReadStream(value);\n\n                          case 10:\n                            if (!filename) {\n                              // @ts-ignore\n                              // eslint-disable-next-line no-param-reassign\n                              filename = \"file\".concat(i, \".\").concat(DefaultExtension[attachmentType] || 'dat');\n                            }\n\n                            if (!(isStream(value) || Buffer.isBuffer(value))) {\n                              _context25.next = 15;\n                              break;\n                            }\n\n                            name = isMultipart ? field + (i + 1) : field;\n                            headers = {\n                              'Content-Type': contentType === null // @ts-ignore\n                              ? DefaultContentType[attachmentType] : contentType\n                            };\n                            return _context25.abrupt(\"return\", formData.append(name, value, {\n                              filename: filename,\n                              headers: headers\n                            }));\n\n                          case 15:\n                            throw new UploadError({\n                              message: 'Unsupported source type',\n                              code: UNSUPPORTED_SOURCE_TYPE\n                            });\n\n                          case 16:\n                          case \"end\":\n                            return _context25.stop();\n                        }\n                      }\n                    }, _callee25);\n                  }));\n\n                  return function (_x20, _x21) {\n                    return _ref50.apply(this, arguments);\n                  };\n                }());\n                _context26.next = 7;\n                return Promise.all(tasks);\n\n              case 7:\n                return _context26.abrupt(\"return\", formData);\n\n              case 8:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26);\n      }));\n\n      function buildPayload(_x19) {\n        return _buildPayload.apply(this, arguments);\n      }\n\n      return buildPayload;\n    }()\n    /**\r\n     * Upload form data\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"upload\",\n    value: function () {\n      var _upload = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee27(url, _ref51) {\n        var formData, timeout, forceBuffer, _this$vk$options2, agent, uploadTimeout, body, response, result;\n\n        return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                formData = _ref51.formData, timeout = _ref51.timeout, forceBuffer = _ref51.forceBuffer;\n                _this$vk$options2 = this.vk.options, agent = _this$vk$options2.agent, uploadTimeout = _this$vk$options2.uploadTimeout;\n\n                if (!forceBuffer) {\n                  _context27.next = 8;\n                  break;\n                }\n\n                _context27.next = 5;\n                return streamToBuffer(formData);\n\n              case 5:\n                _context27.t0 = _context27.sent;\n                _context27.next = 9;\n                break;\n\n              case 8:\n                _context27.t0 = formData;\n\n              case 9:\n                body = _context27.t0;\n                _context27.next = 12;\n                return fetch(url, {\n                  agent: agent,\n                  compress: false,\n                  method: 'POST',\n                  timeout: timeout || uploadTimeout,\n                  headers: {\n                    Connection: 'keep-alive',\n                    'Content-Type': \"multipart/form-data; boundary=\".concat(formData.boundary)\n                  },\n                  body: body\n                });\n\n              case 12:\n                response = _context27.sent;\n\n                if (response.ok) {\n                  _context27.next = 15;\n                  break;\n                }\n\n                throw new Error(response.statusText);\n\n              case 15:\n                _context27.next = 17;\n                return response.json();\n\n              case 17:\n                result = _context27.sent;\n                return _context27.abrupt(\"return\", result.response !== undefined ? result.response : result);\n\n              case 19:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function upload(_x22, _x23) {\n        return _upload.apply(this, arguments);\n      }\n\n      return upload;\n    }()\n    /**\r\n     * Custom inspect object\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: inspect.custom,\n    value: function value(depth, options) {\n      var name = this.constructor.name;\n      return \"\".concat(options.stylize(name, 'special'), \" {}\");\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n  }]);\n\n  return Upload;\n}();\n\nvar unespaceOffset = /\"offset\":\"(\\w+)\"/g;\n\nvar getExecuteCode = function getExecuteCode(_ref52) {\n  var method = _ref52.method,\n      params = _ref52.params,\n      parallelCount = _ref52.parallelCount;\n  var methodCode = getExecuteMethod(method, _objectSpread({}, params, {\n    offset: 'offset'\n  }));\n  var code = \"\\n\\t\\tvar total = parseInt(Args.total);\\n\\t\\tvar offset = parseInt(Args.offset);\\n\\t\\tvar received = parseInt(Args.received);\\n\\n\\t\\tvar proceed = total == 0 || received < total;\\n\\n\\t\\tvar i = 0, items = [], profiles = [], groups = [], result, length;\\n\\n\\t\\twhile (i < \".concat(parallelCount, \" && proceed) {\\n\\t\\t\\tresult = \").concat(methodCode, \";\\n\\t\\t\\tlength = result.items.length;\\n\\n\\t\\t\\tif (total == 0 || total > result.count) {\\n\\t\\t\\t\\ttotal = result.count;\\n\\t\\t\\t}\\n\\n\\t\\t\\titems = items + result.items;\\n\\t\\t\\tif (result.profiles)\\n\\t\\t\\t\\tprofiles = profiles + result.profiles;\\n\\t\\t\\tif (result.groups)\\n\\t\\t\\t\\tgroups = groups + result.groups;\\n\\n\\t\\t\\toffset = offset + length;\\n\\t\\t\\treceived = received + length;\\n\\n\\t\\t\\tproceed = received < total;\\n\\t\\t\\ti = i + 1;\\n\\t\\t}\\n\\n\\t\\treturn {\\n\\t\\t\\ttotal: total,\\n\\t\\t\\titems: items.splice(0, total),\\n\\t\\t\\tprofiles: profiles.splice(0, total),\\n\\t\\t\\tgroups: groups.splice(0, total)\\n\\t\\t};\\n\\t\");\n  return code.replace(unespaceOffset, '\"offset\":$1');\n};\n\nvar debug$1 = createDebug('vk-io:collect:stream');\nvar _APIErrorCode3 = APIErrorCode,\n    APP_TOKEN_NOT_VALID = _APIErrorCode3.APP_TOKEN_NOT_VALID,\n    RESPONSE_SIZE_TOO_BIG = _APIErrorCode3.RESPONSE_SIZE_TOO_BIG;\nvar _CollectErrorCode = CollectErrorCode,\n    EXECUTE_ERROR = _CollectErrorCode.EXECUTE_ERROR;\n\nvar CollectStream =\n/*#__PURE__*/\nfunction (_Readable) {\n  _inherits(CollectStream, _Readable);\n\n  /**\r\n   * Constructor\r\n   */\n  function CollectStream(vk, _ref53) {\n    var _this28;\n\n    var options = _ref53.options,\n        method = _ref53.method,\n        limit = _ref53.limit,\n        max = _ref53.max;\n\n    _classCallCheck(this, CollectStream);\n\n    _this28 = _possibleConstructorReturn(this, _getPrototypeOf(CollectStream).call(this, {\n      objectMode: true\n    }));\n    _this28.vk = vk;\n\n    var _options$parallelCoun = options.parallelCount,\n        parallelCount = _options$parallelCoun === void 0 ? 25 : _options$parallelCoun,\n        _options$offset = options.offset,\n        offset = _options$offset === void 0 ? 0 : _options$offset,\n        count = options.count,\n        params = _objectWithoutProperties(options, [\"parallelCount\", \"offset\", \"count\"]);\n\n    _this28.method = method;\n    _this28.params = _objectSpread({}, params, {\n      count: limit\n    });\n\n    if (parallelCount < 1 || parallelCount > 25) {\n      throw new RangeError('The number of parallel calls can be between 1 and 25');\n    }\n\n    _this28.parallelCount = parallelCount;\n    var hasMax = max !== undefined;\n    var hasCount = count !== undefined; // @ts-ignore\n\n    if (hasCount && hasMax && count > max || hasMax && !hasCount) {\n      _this28.total = max;\n    } else {\n      _this28.total = count;\n    }\n\n    _this28.offset = offset;\n    _this28.skipOffset = offset;\n    _this28.received = 0;\n    _this28.attempts = 0;\n    _this28.promise = null;\n    _this28.supportExecute = true;\n    _this28.code = getExecuteCode({\n      params: _this28.params,\n      parallelCount: parallelCount,\n      method: method\n    });\n    return _this28;\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(CollectStream, [{\n    key: \"then\",\n\n    /**\r\n     * Promise based\r\n     */\n    value: function then( // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    thenFn, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    catchFn) {\n      var _this29 = this;\n\n      if (this.promise === null) {\n        var collectItems = [];\n        var collectProfiles = [];\n        var collectGroups = [];\n        this.promise = new Promise(function (resolve, reject) {\n          _this29.on('error', reject).on('end', function () {\n            return resolve({\n              items: collectItems,\n              profiles: collectProfiles,\n              groups: collectGroups\n            });\n          }).on('data', function (_ref54) {\n            var items = _ref54.items,\n                profiles = _ref54.profiles,\n                groups = _ref54.groups;\n            collectItems.push.apply(collectItems, _toConsumableArray(items));\n            collectProfiles.push.apply(collectProfiles, _toConsumableArray(profiles));\n            collectGroups.push.apply(collectGroups, _toConsumableArray(groups));\n          });\n        });\n      }\n\n      return Promise.resolve(this.promise).then(thenFn, catchFn);\n    }\n    /**\r\n     * Fetch data\r\n     */\n    // eslint-disable-next-line no-underscore-dangle\n\n  }, {\n    key: \"_read\",\n    value: function () {\n      var _read2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee28() {\n        var isNotFirst, items, profiles, groups, request, result, collectAttempts, _result, count, _result2, _collectAttempts, _result3, response, errors, _items2, length, total, received, percent;\n\n        return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                isNotFirst = this.total !== undefined && this.received !== 0;\n\n                if (!(isNotFirst && this.total - this.skipOffset <= this.received)) {\n                  _context28.next = 4;\n                  break;\n                }\n\n                this.push(null);\n                return _context28.abrupt(\"return\");\n\n              case 4:\n                if (!(!this.supportExecute || this.parallelCount === 1)) {\n                  _context28.next = 28;\n                  break;\n                }\n\n                request = new APIRequest({\n                  method: this.method,\n                  params: _objectSpread({}, this.params, {\n                    offset: this.offset\n                  })\n                });\n                _context28.prev = 6;\n                _context28.next = 9;\n                return this.vk.api.callWithRequest(request);\n\n              case 9:\n                result = _context28.sent;\n                _context28.next = 21;\n                break;\n\n              case 12:\n                _context28.prev = 12;\n                _context28.t0 = _context28[\"catch\"](6);\n                collectAttempts = this.vk.options.collectAttempts;\n\n                if (!(this.attempts >= collectAttempts)) {\n                  _context28.next = 18;\n                  break;\n                }\n\n                this.emit('error', _context28.t0);\n                return _context28.abrupt(\"return\");\n\n              case 18:\n                this.attempts += 1; // eslint-disable-next-line no-underscore-dangle\n\n                this._read();\n\n                return _context28.abrupt(\"return\");\n\n              case 21:\n                _result = result, count = _result.count;\n\n                if (this.total === undefined || this.total > count) {\n                  this.total = count;\n                }\n\n                items = result.items;\n                profiles = result.profiles;\n                groups = result.groups;\n                _context28.next = 61;\n                break;\n\n              case 28:\n                _context28.prev = 28;\n                _context28.next = 31;\n                return this.vk.api.execute({\n                  code: this.code,\n                  total: this.total,\n                  offset: this.offset,\n                  received: this.received\n                });\n\n              case 31:\n                _result2 = _context28.sent;\n                _context28.next = 53;\n                break;\n\n              case 34:\n                _context28.prev = 34;\n                _context28.t1 = _context28[\"catch\"](28);\n\n                if (!(_context28.t1.code === APP_TOKEN_NOT_VALID)) {\n                  _context28.next = 41;\n                  break;\n                }\n\n                this.supportExecute = false;\n                debug$1('execute not supported in token'); // eslint-disable-next-line no-underscore-dangle\n\n                this._read();\n\n                return _context28.abrupt(\"return\");\n\n              case 41:\n                if (!(_context28.t1.code === RESPONSE_SIZE_TOO_BIG)) {\n                  _context28.next = 46;\n                  break;\n                }\n\n                this.parallelCount -= 1;\n                this.code = getExecuteCode({\n                  parallelCount: this.parallelCount,\n                  params: this.params,\n                  method: this.method\n                }); // eslint-disable-next-line no-underscore-dangle\n\n                this._read();\n\n                return _context28.abrupt(\"return\");\n\n              case 46:\n                _collectAttempts = this.vk.options.collectAttempts;\n\n                if (!(this.attempts >= _collectAttempts)) {\n                  _context28.next = 50;\n                  break;\n                }\n\n                this.emit('error', _context28.t1);\n                return _context28.abrupt(\"return\");\n\n              case 50:\n                this.attempts += 1; // eslint-disable-next-line no-underscore-dangle\n\n                this._read();\n\n                return _context28.abrupt(\"return\");\n\n              case 53:\n                _result3 = _result2, response = _result3.response, errors = _result3.errors;\n\n                if (!(errors.length > 0)) {\n                  _context28.next = 57;\n                  break;\n                }\n\n                this.emit('error', new CollectError({\n                  message: 'Execute error',\n                  code: EXECUTE_ERROR,\n                  errors: errors\n                }));\n                return _context28.abrupt(\"return\");\n\n              case 57:\n                this.total = response.total;\n                items = response.items;\n                profiles = response.profiles;\n                groups = response.groups;\n\n              case 61:\n                _items2 = items, length = _items2.length;\n\n                if (!(length === 0)) {\n                  _context28.next = 65;\n                  break;\n                }\n\n                this.push(null);\n                return _context28.abrupt(\"return\");\n\n              case 65:\n                this.offset += length;\n                this.received += length;\n                total = this.total, received = this.received;\n                percent = Math.round(received / total * 100);\n\n                if (Number.isNaN(percent)) {\n                  percent = 100;\n                }\n\n                this.push({\n                  received: received,\n                  percent: percent,\n                  total: total,\n                  items: items,\n                  profiles: profiles,\n                  groups: groups\n                });\n\n              case 71:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this, [[6, 12], [28, 34]]);\n      }));\n\n      function _read() {\n        return _read2.apply(this, arguments);\n      }\n\n      return _read;\n    }()\n    /**\r\n     * Custom inspect object\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: inspect.custom,\n    value: function value(depth, options) {\n      var name = this.constructor.name;\n      var total = this.total,\n          offset = this.offset,\n          received = this.received;\n      var payload = {\n        total: total,\n        offset: offset,\n        received: received\n      };\n      return \"\".concat(options.stylize(name, 'special'), \" \").concat(inspect(payload, options));\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"on\",\n    value: function on(event, listener) {\n      return _get(_getPrototypeOf(CollectStream.prototype), \"on\", this).call(this, event, listener);\n    }\n  }, {\n    key: Symbol.asyncIterator,\n    value: function value() {\n      return this[Symbol.asyncIterator]();\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n  }]);\n\n  return CollectStream;\n}(Readable);\n/**\r\n * List limits VK\r\n * Last updated 09.10.2017\r\n */\n\n\nvar LIMITS_METHODS = [\n/**\r\n * Account\r\n */\n['account.getActiveOffers', 100], ['account.getBanned', 200],\n/**\r\n * Ads\r\n */\n['ads.getAds', 100, 2000], ['ads.getAdsLayout', 100, 2000], ['ads.getAdsTargeting', 100, 2000],\n/**\r\n * Apps\r\n */\n['apps.getCatalog', 100], ['apps.getFriendsList', 5000],\n/**\r\n * Audio\r\n */\n['audio.get', 6000], ['audio.search', 300, 1000], ['audio.getAlbums', 100], ['audio.getRecommendations', 1000], ['audio.getPopular', 1000],\n/**\r\n * Board\r\n */\n['board.getComments', 100], ['board.getTopics', 100],\n/**\r\n * Database\r\n */\n['database.getChairs', 10000], ['database.getCities', 1000], ['database.getCountries', 1000], ['database.getFaculties', 10000], ['database.getRegions', 1000], ['database.getSchools', 10000], ['database.getUniversities', 10000],\n/**\r\n * Docs\r\n */\n['docs.get', 2000, 2000], ['docs.search', 1000, 1000],\n/**\r\n * Fave\r\n */\n['fave.getPosts', 100], ['fave.getLinks', 100], ['fave.getMarketItems', 100], ['fave.getPhotos', 100], ['fave.getUsers', 100], ['fave.getVideos', 100],\n/**\r\n * Friends\r\n */\n['friends.get', 1000], ['friends.getMutual', 1000], ['friends.getMutual', 1000], ['friends.getOnline', 1000], ['friends.getRecent', 1000], ['friends.getRequests', 1000], ['friends.getSuggestions', 500], ['friends.search', 1000],\n/**\r\n * Gifts\r\n */\n['gifts.get', 100],\n/**\r\n * Groups\r\n */\n['groups.get', 1000], ['groups.getBanned', 200], ['groups.getInvitedUsers', 100], ['groups.getInvites', 100], ['groups.getMembers', 1000], ['groups.getRequests', 200],\n/**\r\n * Leads\r\n */\n['leads.getUsers', 1000],\n/**\r\n * Likes\r\n */\n['likes.getList', 100],\n/**\r\n * Market\r\n */\n['market.get', 200], ['market.getAlbums', 100], ['market.getCategories', 1000], ['market.getComments', 100], ['market.search', 200],\n/**\r\n * messages\r\n */\n['messages.get', 200], ['messages.getHistory', 200], ['messages.search', 100], ['messages.getConversations', 200],\n/**\r\n * Notes\r\n */\n['notes.get', 100], ['notes.getComments', 100],\n/**\r\n * Orders\r\n */\n['orders.get', 1000],\n/**\r\n * Photos\r\n */\n['photos.get', 1000], ['photos.getAlbums', 100], ['photos.getAll', 200], ['photos.getAllComments', 100], ['photos.getComments', 100], ['photos.getNewTags', 100], ['photos.getUserPhotos', 1000], ['photos.search', 1000],\n/**\r\n * Places\r\n */\n['places.getCheckins', 100], ['places.search', 1000],\n/**\r\n * Polls\r\n */\n['polls.getVoters', 100],\n/**\r\n * Storage\r\n */\n['storage.getKeys', 1000],\n/**\r\n * Users\r\n */\n['users.getFollowers', 1000], ['users.getSubscriptions', 200], ['users.search', 1000, 1000],\n/**\r\n * Utils\r\n */\n['utils.getLastShortenedLinks', 50],\n/**\r\n * Video\r\n */\n['video.get', 200], ['video.getAlbums', 100], ['video.getComments', 100], ['video.search', 1000, 1000],\n/**\r\n * Wall\r\n */\n['wall.get', 100], ['wall.getComments', 100], ['wall.getReposts', 1000], ['wall.search', 100],\n/**\r\n * Widgets\r\n */\n['widgets.getComments', 200], ['widgets.getPages', 200]];\n\nvar Chain =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function Chain(vk) {\n    _classCallCheck(this, Chain);\n\n    this.started = false;\n    this.queue = [];\n    this.vk = vk;\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(Chain, [{\n    key: \"append\",\n\n    /**\r\n     * Adds method to queue\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    value: function append(method, params) {\n      if (this.started) {\n        return Promise.reject(new VKError({\n          message: 'Chain already started',\n          code: 'ALREADY_STARTED'\n        }));\n      }\n\n      var request = new APIRequest({\n        method: method,\n        params: params\n      });\n      this.queue.push(request);\n      return request.promise;\n    }\n    /**\r\n     * Promise based\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"then\",\n    value: function then(thenFn, catchFn) {\n      // @ts-ignore\n      return Promise.resolve(this.run()).then(thenFn, catchFn);\n    }\n    /**\r\n     * Starts the chain\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee29() {\n        var queue, out, tasks, code, response, _iteratorNormalCompletion7, _didIteratorError7, _iteratorError7, _iterator7, _step7, task;\n\n        return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                if (!this.started) {\n                  _context29.next = 2;\n                  break;\n                }\n\n                throw new VKError({\n                  message: 'Chain already started',\n                  code: 'ALREADY_STARTED'\n                });\n\n              case 2:\n                this.started = true;\n                queue = this.queue;\n                out = {\n                  response: [],\n                  errors: []\n                };\n\n                if (!(queue.length === 0)) {\n                  _context29.next = 7;\n                  break;\n                }\n\n                return _context29.abrupt(\"return\", out);\n\n              case 7:\n                if (!(queue.length > 0)) {\n                  _context29.next = 42;\n                  break;\n                }\n\n                tasks = queue.splice(0, 25);\n                code = getChainReturn(tasks.map(String));\n                _context29.prev = 10;\n                _context29.next = 13;\n                return this.vk.api.execute({\n                  code: code\n                });\n\n              case 13:\n                response = _context29.sent;\n                resolveExecuteTask(tasks, response);\n                out = {\n                  response: [].concat(_toConsumableArray(out.response), _toConsumableArray(response.response)),\n                  errors: [].concat(_toConsumableArray(out.errors), _toConsumableArray(response.errors))\n                };\n                _context29.next = 40;\n                break;\n\n              case 18:\n                _context29.prev = 18;\n                _context29.t0 = _context29[\"catch\"](10);\n                _iteratorNormalCompletion7 = true;\n                _didIteratorError7 = false;\n                _iteratorError7 = undefined;\n                _context29.prev = 23;\n\n                for (_iterator7 = tasks[Symbol.iterator](); !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                  task = _step7.value;\n                  task.reject(_context29.t0);\n                }\n\n                _context29.next = 31;\n                break;\n\n              case 27:\n                _context29.prev = 27;\n                _context29.t1 = _context29[\"catch\"](23);\n                _didIteratorError7 = true;\n                _iteratorError7 = _context29.t1;\n\n              case 31:\n                _context29.prev = 31;\n                _context29.prev = 32;\n\n                if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n                  _iterator7.return();\n                }\n\n              case 34:\n                _context29.prev = 34;\n\n                if (!_didIteratorError7) {\n                  _context29.next = 37;\n                  break;\n                }\n\n                throw _iteratorError7;\n\n              case 37:\n                return _context29.finish(34);\n\n              case 38:\n                return _context29.finish(31);\n\n              case 39:\n                throw _context29.t0;\n\n              case 40:\n                _context29.next = 7;\n                break;\n\n              case 42:\n                return _context29.abrupt(\"return\", out);\n\n              case 43:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this, [[10, 18], [23, 27, 31, 39], [32,, 34, 38]]);\n      }));\n\n      function run() {\n        return _run.apply(this, arguments);\n      }\n\n      return run;\n    }()\n    /**\r\n     * Custom inspect object\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: inspect.custom,\n    value: function value(depth, options) {\n      var name = this.constructor.name;\n      var started = this.started,\n          queue = this.queue;\n      var payload = {\n        started: started,\n        queue: queue\n      };\n      return \"\".concat(options.stylize(name, 'special'), \" \").concat(inspect(payload, options));\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n  }]);\n\n  return Chain;\n}();\n\nvar Collect =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * constructor\r\n   */\n  function Collect(vk) {\n    var _this30 = this;\n\n    _classCallCheck(this, Collect);\n\n    this.vk = vk;\n    var _iteratorNormalCompletion8 = true;\n    var _didIteratorError8 = false;\n    var _iteratorError8 = undefined;\n\n    try {\n      var _loop2 = function _loop2() {\n        var _ref55 = _step8.value;\n        _ref56 = _slicedToArray(_ref55, 3);\n        var method = _ref56[0];\n        var limit = _ref56[1];\n        var max = _ref56[2];\n\n        var _method$split = method.split('.'),\n            _method$split2 = _slicedToArray(_method$split, 2),\n            group = _method$split2[0],\n            name = _method$split2[1];\n\n        if (!(group in _this30)) {\n          // @ts-ignore\n          _this30[group] = {};\n        } // @ts-ignore\n\n\n        _this30[group][name] = function () {\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return new CollectStream(_this30.vk, {\n            options: options,\n            method: method,\n            limit: limit,\n            max: max\n          });\n        };\n      };\n\n      for (var _iterator8 = LIMITS_METHODS[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n        var _ref56;\n\n        _loop2();\n      }\n    } catch (err) {\n      _didIteratorError8 = true;\n      _iteratorError8 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n          _iterator8.return();\n        }\n      } finally {\n        if (_didIteratorError8) {\n          throw _iteratorError8;\n        }\n      }\n    }\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(Collect, [{\n    key: \"chain\",\n\n    /**\r\n     * Returns new Chain instance\r\n     */\n    value: function chain() {\n      return new Chain(this.vk);\n    }\n    /**\r\n     * Call multiple executors\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"executes\",\n    value: function () {\n      var _executes = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee30(method, queue) {\n        var queueMethods, promises, code, out, _iteratorNormalCompletion9, _didIteratorError9, _iteratorError9, _iterator9, _step9, _ref58, response, errors;\n\n        return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                queueMethods = queue.map(function (params) {\n                  return getExecuteMethod(method, params);\n                }); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n                promises = [];\n\n                while (queueMethods.length !== 0) {\n                  code = getChainReturn(queueMethods.splice(0, 25));\n                  promises.push(this.vk.api.execute({\n                    code: code\n                  }));\n                }\n\n                out = {\n                  response: [],\n                  errors: []\n                };\n                _iteratorNormalCompletion9 = true;\n                _didIteratorError9 = false;\n                _iteratorError9 = undefined;\n                _context30.prev = 7;\n                _context30.next = 10;\n                return Promise.all(promises);\n\n              case 10:\n                _context30.t0 = Symbol.iterator;\n                _iterator9 = _context30.sent[_context30.t0]();\n\n              case 12:\n                if (_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done) {\n                  _context30.next = 20;\n                  break;\n                }\n\n                _ref58 = _step9.value;\n                response = _ref58.response;\n                errors = _ref58.errors;\n                out = {\n                  response: [].concat(_toConsumableArray(out.response), _toConsumableArray(response)),\n                  errors: [].concat(_toConsumableArray(out.errors), _toConsumableArray(errors))\n                };\n\n              case 17:\n                _iteratorNormalCompletion9 = true;\n                _context30.next = 12;\n                break;\n\n              case 20:\n                _context30.next = 26;\n                break;\n\n              case 22:\n                _context30.prev = 22;\n                _context30.t1 = _context30[\"catch\"](7);\n                _didIteratorError9 = true;\n                _iteratorError9 = _context30.t1;\n\n              case 26:\n                _context30.prev = 26;\n                _context30.prev = 27;\n\n                if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n                  _iterator9.return();\n                }\n\n              case 29:\n                _context30.prev = 29;\n\n                if (!_didIteratorError9) {\n                  _context30.next = 32;\n                  break;\n                }\n\n                throw _iteratorError9;\n\n              case 32:\n                return _context30.finish(29);\n\n              case 33:\n                return _context30.finish(26);\n\n              case 34:\n                return _context30.abrupt(\"return\", out);\n\n              case 35:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30, this, [[7, 22, 26, 34], [27,, 29, 33]]);\n      }));\n\n      function executes(_x24, _x25) {\n        return _executes.apply(this, arguments);\n      }\n\n      return executes;\n    }()\n    /**\r\n     * Custom inspect object\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: inspect.custom,\n    value: function value(depth, options) {\n      var name = this.constructor.name;\n      return \"\".concat(options.stylize(name, 'special'), \" {}\");\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n  }]);\n\n  return Collect;\n}();\n\nvar Context =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function Context(options) {\n    _classCallCheck(this, Context);\n\n    this.vk = options.vk;\n    this.type = options.type;\n    this.subTypes = options.subTypes;\n    this.payload = options.payload; // @ts-ignore\n\n    this.state = options.state || {};\n    this.$groupId = options.groupId;\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(Context, [{\n    key: \"is\",\n\n    /**\r\n     * Checks whether the context of some of these types\r\n     */\n    value: function is(rawTypes) {\n      var types = !Array.isArray(rawTypes) ? [rawTypes] : rawTypes;\n      return [this.type].concat(_toConsumableArray(this.subTypes)).some(function (type) {\n        return types.includes(type);\n      });\n    }\n    /**\r\n     * Returns data for JSON\r\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return _objectSpread({}, this[inspectCustomData](), {\n        type: this.type,\n        subTypes: this.subTypes,\n        state: this.state\n      });\n    }\n    /**\r\n     * Returns the custom data\r\n     */\n\n  }, {\n    key: inspectCustomData,\n    value: function value() {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var vk = this.vk,\n          payload = _objectWithoutProperties(this, [\"vk\"]);\n\n      return payload;\n    }\n    /**\r\n     * Custom inspect object\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: inspect.custom,\n    value: function value(depth, options) {\n      var name = this.constructor.name;\n\n      var customData = _objectSpread({}, this[inspectCustomData](), {\n        type: this.type,\n        subTypes: this.subTypes,\n        state: this.state\n      });\n\n      var payload = inspect(customData, _objectSpread({}, options, {\n        compact: false\n      }));\n      return \"\".concat(options.stylize(name, 'special'), \" \").concat(payload);\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n  }]);\n\n  return Context;\n}(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nvar VoteContext =\n/*#__PURE__*/\nfunction (_Context) {\n  _inherits(VoteContext, _Context);\n\n  function VoteContext(options) {\n    _classCallCheck(this, VoteContext);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(VoteContext).call(this, _objectSpread({}, options, {\n      type: 'vote',\n      subTypes: ['pull_vote']\n    })));\n  }\n  /**\r\n   * Returns the identifier poll\r\n   */\n\n\n  _createClass(VoteContext, [{\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['id', 'userId', 'ownerId', 'optionId']);\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this.payload.poll_id;\n    }\n    /**\r\n     * Returns the identifier user\r\n     */\n\n  }, {\n    key: \"userId\",\n    get: function get() {\n      return this.payload.user_id;\n    }\n    /**\r\n     * Returns the identifier owner\r\n     */\n\n  }, {\n    key: \"ownerId\",\n    get: function get() {\n      return this.payload.owner_id;\n    }\n    /**\r\n     * Returns the identifier option\r\n     */\n\n  }, {\n    key: \"optionId\",\n    get: function get() {\n      return this.payload.option_id;\n    }\n  }]);\n\n  return VoteContext;\n}(Context);\n\nvar transformPolling = function transformPolling(_ref59, updateType) {\n  var fromId = _ref59[1],\n      toId = _ref59[2];\n  return {\n    from_id: fromId,\n    to_id: updateType === 62 ? toId + CHAT_PEER : fromId,\n    state: 'typing'\n  };\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nvar TypingContext =\n/*#__PURE__*/\nfunction (_Context2) {\n  _inherits(TypingContext, _Context2);\n\n  function TypingContext(options) {\n    _classCallCheck(this, TypingContext);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TypingContext).call(this, _objectSpread({}, options, {\n      type: 'typing',\n      subTypes: [\"typing_\".concat(getPeerType(options.payload.from_id))],\n      payload: options.source === UpdateSource.POLLING // @ts-ignore\n      ? transformPolling(options.payload, options.updateType) : options.payload\n    })));\n  }\n  /**\r\n   * Checks is typing\r\n   */\n\n\n  _createClass(TypingContext, [{\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['fromId', 'toId', 'chatId', 'isUser', 'isGroup', 'isChat', 'isTyping', 'isAudioMessage']);\n    }\n  }, {\n    key: \"isTyping\",\n    get: function get() {\n      return this.payload.state === 'typing';\n    }\n    /**\r\n     * Checks is record audio message\r\n     */\n\n  }, {\n    key: \"isAudioMessage\",\n    get: function get() {\n      return this.payload.state === 'audiomessage';\n    }\n    /**\r\n     * Checks that the message is typed in the dm\r\n     */\n\n  }, {\n    key: \"isUser\",\n    get: function get() {\n      return this.subTypes.includes('typing_user');\n    }\n    /**\r\n     * Checks that the message is typed in the chat\r\n     */\n\n  }, {\n    key: \"isGroup\",\n    get: function get() {\n      return this.subTypes.includes('typing_group');\n    }\n    /**\r\n     * Checks that the message is typed in the chat\r\n     */\n\n  }, {\n    key: \"isChat\",\n    get: function get() {\n      return this.chatId !== null;\n    }\n    /**\r\n     * Returns the identifier sender\r\n     */\n\n  }, {\n    key: \"fromId\",\n    get: function get() {\n      return this.payload.from_id;\n    }\n    /**\r\n     * Returns the identifier destination\r\n     */\n\n  }, {\n    key: \"toId\",\n    get: function get() {\n      return this.payload.to_id;\n    }\n    /**\r\n     * @deprecated\r\n     */\n\n  }, {\n    key: \"peerId\",\n    get: function get() {\n      showDeprecatedMessage('TypingContext, use toId instead of peerId');\n      return this.toId;\n    }\n    /**\r\n     * @deprecated\r\n     */\n\n  }, {\n    key: \"userId\",\n    get: function get() {\n      showDeprecatedMessage('TypingContext, use fromId instead of userId');\n      return this.fromId;\n    }\n    /**\r\n     * Returns the identifier chat\r\n     */\n\n  }, {\n    key: \"chatId\",\n    get: function get() {\n      var chatId = this.toId - CHAT_PEER;\n      return chatId > 0 ? chatId : null;\n    }\n  }]);\n\n  return TypingContext;\n}(Context);\n\nvar kAttachments$1 = Symbol('attachments');\n\nvar MessageReply =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function MessageReply(payload, vk) {\n    _classCallCheck(this, MessageReply);\n\n    // @ts-ignore\n    this.vk = vk;\n    this.payload = payload;\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(MessageReply, [{\n    key: \"toJSON\",\n\n    /**\r\n     * Returns data for JSON\r\n     */\n    value: function toJSON() {\n      return copyParams(this, ['id', 'conversationMessageId', 'peerId', 'senderId', 'createdAt', 'updatedAt', 'text', 'attachments']);\n    }\n    /**\r\n     * Custom inspect object\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: inspect.custom,\n    value: function value(depth, options) {\n      var name = this.constructor.name;\n      var payload = copyParams(this, ['id', 'conversationMessageId', 'peerId', 'senderId', 'createdAt', 'updatedAt', 'text', 'attachments']);\n      return \"\".concat(options.stylize(name, 'special'), \" \").concat(inspect(payload, _objectSpread({}, options, {\n        compact: false\n      })));\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n    /**\r\n     * Checks if there is text\r\n     */\n\n  }, {\n    key: \"hasText\",\n    get: function get() {\n      return this.text !== null;\n    }\n    /**\r\n     * Returns the identifier message\r\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this.payload.id;\n    }\n    /**\r\n     * Returns the conversation message id\r\n     */\n\n  }, {\n    key: \"conversationMessageId\",\n    get: function get() {\n      return this.payload.conversation_message_id || null;\n    }\n    /**\r\n     * Returns the destination identifier\r\n     */\n\n  }, {\n    key: \"peerId\",\n    get: function get() {\n      return this.payload.peer_id;\n    }\n    /**\r\n     * Returns the date when this message was created\r\n     */\n\n  }, {\n    key: \"createdAt\",\n    get: function get() {\n      return this.payload.date;\n    }\n    /**\r\n     * Returns the date when this message was updated\r\n     */\n\n  }, {\n    key: \"updatedAt\",\n    get: function get() {\n      return this.payload.update_time;\n    }\n    /**\r\n     * Returns the message text\r\n     */\n\n  }, {\n    key: \"senderId\",\n    get: function get() {\n      return this.payload.from_id;\n    }\n    /**\r\n     * Returns the message text\r\n     */\n\n  }, {\n    key: \"text\",\n    get: function get() {\n      return this.payload.text || null;\n    }\n    /**\r\n     * Returns the attachments\r\n     */\n\n  }, {\n    key: \"attachments\",\n    get: function get() {\n      if (!this[kAttachments$1]) {\n        this[kAttachments$1] = transformAttachments(this.payload.attachments, this.vk);\n      }\n\n      return this[kAttachments$1];\n    }\n  }]);\n\n  return MessageReply;\n}();\n\napplyMixins(MessageReply, [Attachmentable]);\nvar kForwards = Symbol('forwards');\nvar kAttachments$2 = Symbol('attachments');\n\nvar MessageForward =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function MessageForward(options) {\n    _classCallCheck(this, MessageForward);\n\n    this.vk = options.vk;\n    this.payload = options.payload;\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(MessageForward, [{\n    key: \"toJSON\",\n\n    /**\r\n     * Returns data for JSON\r\n     */\n    value: function toJSON() {\n      return copyParams(this, ['senderId', 'createdAt', 'updatedAt', 'text', 'attachments', 'forwards']);\n    }\n    /**\r\n     * Custom inspect object\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: inspect.custom,\n    value: function value(depth, options) {\n      var name = this.constructor.name;\n      var payload = copyParams(this, ['senderId', 'createdAt', 'updatedAt', 'text', 'attachments', 'forwards']);\n      return \"\".concat(options.stylize(name, 'special'), \" \").concat(inspect(payload, _objectSpread({}, options, {\n        compact: false\n      })));\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n    /**\r\n     * Checks if there is text\r\n     */\n\n  }, {\n    key: \"hasText\",\n    get: function get() {\n      return this.text !== null;\n    }\n    /**\r\n     * Returns the date when this message was created\r\n     */\n\n  }, {\n    key: \"createdAt\",\n    get: function get() {\n      return this.payload.date;\n    }\n    /**\r\n     * Returns the date when this message was updated\r\n     */\n\n  }, {\n    key: \"updatedAt\",\n    get: function get() {\n      return this.payload.update_time;\n    }\n    /**\r\n     * Returns the message text\r\n     */\n\n  }, {\n    key: \"senderId\",\n    get: function get() {\n      return this.payload.from_id;\n    }\n    /**\r\n     * Returns the message text\r\n     */\n\n  }, {\n    key: \"text\",\n    get: function get() {\n      return this.payload.text || null;\n    }\n    /**\r\n     * Returns the forwards\r\n     */\n\n  }, {\n    key: \"forwards\",\n    get: function get() {\n      var _this31 = this;\n\n      if (!this[kForwards]) {\n        this[kForwards] = this.payload.fwd_messages ? this.payload.fwd_messages.map(function (forward) {\n          return new MessageForward({\n            vk: _this31.vk,\n            payload: forward\n          });\n        }) : [];\n      }\n\n      return this[kForwards];\n    }\n    /**\r\n     * Returns the attachments\r\n     */\n\n  }, {\n    key: \"attachments\",\n    get: function get() {\n      if (!this[kAttachments$2]) {\n        this[kAttachments$2] = transformAttachments(this.payload.attachments, this.vk);\n      }\n\n      return this[kAttachments$2];\n    }\n  }]);\n\n  return MessageForward;\n}();\n\napplyMixins(MessageForward, [Attachmentable]);\n/* eslint-disable @typescript-eslint/camelcase */\n\n/**\r\n * Special attachments in one message\r\n */\n\nvar specialAttachments = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  sticker: function sticker(raw) {\n    return {\n      type: 'sticker',\n      sticker: {\n        sticker_id: Number(raw.attach1),\n        product_id: Number(raw.attach1_product_id)\n      }\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  money_transfer: function money_transfer(raw) {\n    return {\n      type: 'money_transfer',\n      money_transfer: {\n        data: raw.attach1,\n        amount: Number(raw.attach1_amount),\n        currency: Number(raw.attach1_currency)\n      }\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  gift: function gift(raw) {\n    return {\n      type: 'gift',\n      gift: {\n        id: Number(raw.attach1)\n      }\n    };\n  }\n};\n/**\r\n * Transform message to Object\r\n */\n\nfunction transformMessage(_ref60) {\n  var id = _ref60[1],\n      flags = _ref60[2],\n      peer = _ref60[3],\n      date = _ref60[4],\n      text = _ref60[5],\n      extra = _ref60[6],\n      attachments = _ref60[7],\n      random_id = _ref60[8];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var message = {\n    id: id,\n    date: date,\n    text: text,\n    random_id: random_id,\n    geo: attachments.geo !== undefined ? {} : null,\n    payload: extra.payload ? extra.payload : null\n  };\n  message.peer_id = peer;\n\n  if (extra.from !== undefined) {\n    message.from_id = Number(extra.from);\n  } else {\n    message.from_id = peer;\n  }\n\n  if (peer < 0 && message.peer_id !== message.from_id) {\n    // eslint-disable-next-line no-bitwise\n    message.out = Number((flags & 2) === 0); // eslint-disable-next-line no-bitwise\n\n    message.important = (flags & 1) !== 0;\n  } else {\n    // eslint-disable-next-line no-bitwise\n    message.out = Number((flags & 2) !== 0); // eslint-disable-next-line no-bitwise\n\n    message.important = (flags & 8) !== 0;\n  }\n\n  if (extra.source_act !== undefined) {\n    message.action = {\n      type: extra.source_act,\n      text: extra.source_text,\n      member_id: extra.source_mid\n    };\n  }\n\n  if (attachments.attach1_type in specialAttachments) {\n    message.attachments = [specialAttachments[attachments.attach1_type](attachments)];\n  } else {\n    var messageAttachments = [];\n\n    for (var i = 1, key = 'attach1'; attachments[key] !== undefined; i += 1, key = \"attach\".concat(i)) {\n      var type = attachments[\"\".concat(key, \"_type\")];\n\n      if (type === 'link') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var _attachment = {\n          type: 'link',\n          link: {\n            url: attachments[\"\".concat(key, \"_url\")],\n            title: attachments[\"\".concat(key, \"_title\")],\n            description: attachments[\"\".concat(key, \"_desc\")]\n          }\n        };\n        var photoKey = \"\".concat(key, \"_photo\");\n\n        if (attachments[photoKey]) {\n          var _attachments$photoKey = attachments[photoKey].split('_'),\n              _attachments$photoKey2 = _slicedToArray(_attachments$photoKey, 2),\n              _owner = _attachments$photoKey2[0],\n              _attachmentId = _attachments$photoKey2[1];\n\n          _attachment.link.photo = {\n            id: Number(_attachmentId),\n            owner_id: Number(_owner)\n          };\n        }\n\n        messageAttachments.push(_attachment);\n        continue;\n      }\n\n      var _attachments$key$spli = attachments[key].split('_'),\n          _attachments$key$spli2 = _slicedToArray(_attachments$key$spli, 2),\n          owner = _attachments$key$spli2[0],\n          attachmentId = _attachments$key$spli2[1]; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var attachment = _defineProperty({\n        type: type\n      }, type, {\n        id: Number(attachmentId),\n        owner_id: Number(owner)\n      });\n\n      var kindKey = \"\".concat(key, \"_kind\");\n\n      if (type === 'doc' && attachments[kindKey] !== undefined) {\n        attachment[type].kind = attachments[kindKey];\n      }\n\n      messageAttachments.push(attachment);\n    }\n\n    message.attachments = messageAttachments;\n  }\n\n  var fwd = attachments.fwd; // Now long poll receive such forward messages 0_0,0_0\n  // Only for checking the presence of a sent message\n\n  if (fwd !== undefined) {\n    var indexColon = fwd.indexOf(':');\n\n    if (indexColon !== -1) {\n      fwd = fwd.substring(0, indexColon);\n    }\n\n    message.fwd_messages = fwd.split(',') // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    .map(function (attachment) {\n      var _attachment$split = attachment.split('_'),\n          _attachment$split2 = _slicedToArray(_attachment$split, 1),\n          owner = _attachment$split2[0];\n\n      return {\n        date: 0,\n        from_id: Number(owner),\n        text: '',\n        fwd_messages: [],\n        attachments: [],\n        update_time: 0\n      };\n    });\n  }\n\n  return message;\n}\n\nvar getForwards = function getForwards(rootForwards) {\n  var forwards = [];\n  var _iteratorNormalCompletion10 = true;\n  var _didIteratorError10 = false;\n  var _iteratorError10 = undefined;\n\n  try {\n    for (var _iterator10 = rootForwards[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n      var forward = _step10.value;\n      forwards.push.apply(forwards, [forward].concat(_toConsumableArray(getForwards(forward.forwards))));\n    }\n  } catch (err) {\n    _didIteratorError10 = true;\n    _iteratorError10 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n        _iterator10.return();\n      }\n    } finally {\n      if (_didIteratorError10) {\n        throw _iteratorError10;\n      }\n    }\n  }\n\n  return forwards;\n};\n\nvar kFlatten = Symbol('flatten');\n\nvar MessageForwardsCollection =\n/*#__PURE__*/\nfunction (_Array) {\n  _inherits(MessageForwardsCollection, _Array);\n\n  function MessageForwardsCollection() {\n    _classCallCheck(this, MessageForwardsCollection);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MessageForwardsCollection).apply(this, arguments));\n  }\n\n  _createClass(MessageForwardsCollection, [{\n    key: \"flatten\",\n\n    /**\r\n     * Returns a flat copy of forwards\r\n     */\n    get: function get() {\n      if (!this[kFlatten]) {\n        this[kFlatten] = getForwards(this);\n      }\n\n      return this[kFlatten];\n    }\n  }]);\n\n  return MessageForwardsCollection;\n}(_wrapNativeSuper(Array));\n\napplyMixins(MessageForwardsCollection, [\n/*#__PURE__*/\nfunction () {\n  function CustomAttachmentable() {\n    _classCallCheck(this, CustomAttachmentable);\n  }\n\n  _createClass(CustomAttachmentable, [{\n    key: \"hasAttachments\",\n    value: function hasAttachments() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      return this.flatten.some(function (forward) {\n        return forward.hasAttachments(type);\n      });\n    }\n  }, {\n    key: \"getAttachments\",\n    value: function getAttachments() {\n      var _ref61;\n\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var attachments = this.flatten.map(function (forward) {\n        return (// @ts-ignore\n          forward.getAttachments(type)\n        );\n      }); // @ts-ignore\n\n      return (_ref61 = []).concat.apply(_ref61, _toConsumableArray(attachments));\n    }\n  }]);\n\n  return CustomAttachmentable;\n}()]);\n/* eslint-disable max-classes-per-file */\n\nvar subTypesEnum = {\n  4: 'new_message',\n  5: 'edit_message',\n  message_new: 'new_message',\n  message_edit: 'edit_message',\n  message_reply: 'reply_message'\n};\nvar kForwards$1 = Symbol('forwards');\nvar kReplyMessage = Symbol('replyMessage');\nvar kAttachments$3 = Symbol('attachments'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar MessageContext =\n/*#__PURE__*/\nfunction (_Context3) {\n  _inherits(MessageContext, _Context3);\n\n  function MessageContext(options) {\n    var _this32;\n\n    _classCallCheck(this, MessageContext);\n\n    _this32 = _possibleConstructorReturn(this, _getPrototypeOf(MessageContext).call(this, _objectSpread({}, options, {\n      type: 'message',\n      subTypes: []\n    })));\n    var payload = options.payload;\n\n    if (options.source === UpdateSource.POLLING) {\n      // eslint-disable-next-line no-param-reassign\n      // @ts-ignore\n      payload = transformMessage(payload);\n      _this32.$filled = false;\n    } else {\n      _this32.$filled = true;\n    }\n\n    _this32.applyPayload(payload);\n\n    _this32.subTypes = [_this32.eventType || subTypesEnum[options.updateType]];\n    return _this32;\n  }\n  /**\r\n   * Load message payload\r\n   */\n\n\n  _createClass(MessageContext, [{\n    key: \"loadMessagePayload\",\n    value: function () {\n      var _loadMessagePayload = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee31() {\n        var _ref62, items, _items3, message;\n\n        return _regeneratorRuntime.wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                if (!this.$filled) {\n                  _context31.next = 2;\n                  break;\n                }\n\n                return _context31.abrupt(\"return\");\n\n              case 2:\n                if (!(this.id !== 0)) {\n                  _context31.next = 8;\n                  break;\n                }\n\n                _context31.next = 5;\n                return this.vk.api.messages.getById({\n                  message_ids: this.id\n                });\n\n              case 5:\n                _context31.t0 = _context31.sent;\n                _context31.next = 11;\n                break;\n\n              case 8:\n                _context31.next = 10;\n                return this.vk.api.messages.getByConversationMessageId({\n                  peer_id: this.peerId,\n                  conversation_message_ids: this.conversationMessageId\n                });\n\n              case 10:\n                _context31.t0 = _context31.sent;\n\n              case 11:\n                _ref62 = _context31.t0;\n                items = _ref62.items;\n                _items3 = _slicedToArray(items, 1), message = _items3[0];\n                this[kForwards$1] = null;\n                this[kAttachments$3] = null;\n                this[kReplyMessage] = null; // @ts-ignore\n\n                this.applyPayload(message);\n                this.$filled = true;\n\n              case 19:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31, this);\n      }));\n\n      function loadMessagePayload() {\n        return _loadMessagePayload.apply(this, arguments);\n      }\n\n      return loadMessagePayload;\n    }()\n    /**\r\n     * Checks if there is text\r\n     */\n\n  }, {\n    key: \"getInviteLink\",\n\n    /**\r\n     * Gets a link to invite the user to a conversation\r\n     */\n    value: function getInviteLink() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.vk.api.messages.getInviteLink(_objectSpread({}, params, {\n        peer_id: this.peerId\n      }));\n    }\n    /**\r\n     * Edits a message\r\n     */\n\n  }, {\n    key: \"editMessage\",\n    value: function editMessage(params) {\n      return this.vk.api.messages.edit(_objectSpread({\n        attachment: String(this.attachments.filter(function (attachment) {\n          return attachment.canBeAttached;\n        })),\n        message: this.text,\n        keep_forward_messages: 1,\n        keep_snippets: 1\n      }, params, {\n        peer_id: this.peerId,\n        message_id: this.id\n      }));\n    }\n    /**\r\n     * Edits a message text\r\n     */\n\n  }, {\n    key: \"editMessageText\",\n    value: function () {\n      var _editMessageText = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee32(message) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee32$(_context32) {\n          while (1) {\n            switch (_context32.prev = _context32.next) {\n              case 0:\n                _context32.next = 2;\n                return this.editMessage({\n                  message: message\n                });\n\n              case 2:\n                response = _context32.sent;\n                this.text = message;\n                return _context32.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context32.stop();\n            }\n          }\n        }, _callee32, this);\n      }));\n\n      function editMessageText(_x26) {\n        return _editMessageText.apply(this, arguments);\n      }\n\n      return editMessageText;\n    }()\n    /**\r\n     * Sends a message to the current dialog\r\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(text, params) {\n      return this.vk.api.messages.send(_objectSpread({\n        peer_id: this.peerId\n      }, typeof text !== 'object' ? _objectSpread({\n        message: text\n      }, params) : text));\n    }\n    /**\r\n     * Responds to the current message\r\n     */\n\n  }, {\n    key: \"reply\",\n    value: function reply(text, params) {\n      return this.send(_objectSpread({\n        reply_to: this.id\n      }, typeof text !== 'object' ? _objectSpread({\n        message: text\n      }, params) : text));\n    }\n    /**\r\n     * Sends a sticker to the current dialog\r\n     */\n\n  }, {\n    key: \"sendSticker\",\n    value: function sendSticker(id) {\n      return this.send({\n        sticker_id: id\n      });\n    }\n    /**\r\n     * Sends a photos to the current dialog\r\n     */\n\n  }, {\n    key: \"sendPhotos\",\n    value: function () {\n      var _sendPhotos = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee33(rawSources) {\n        var _this33 = this;\n\n        var params,\n            sources,\n            attachment,\n            response,\n            _args33 = arguments;\n        return _regeneratorRuntime.wrap(function _callee33$(_context33) {\n          while (1) {\n            switch (_context33.prev = _context33.next) {\n              case 0:\n                params = _args33.length > 1 && _args33[1] !== undefined ? _args33[1] : {};\n                sources = !Array.isArray(rawSources) ? [rawSources] : rawSources;\n                _context33.next = 4;\n                return Promise.all(sources.map(function (source) {\n                  return _this33.vk.upload.messagePhoto({\n                    source: source,\n                    peer_id: _this33.peerId\n                  });\n                }));\n\n              case 4:\n                attachment = _context33.sent;\n                _context33.next = 7;\n                return this.send(_objectSpread({}, params, {\n                  attachment: attachment\n                }));\n\n              case 7:\n                response = _context33.sent;\n                return _context33.abrupt(\"return\", response);\n\n              case 9:\n              case \"end\":\n                return _context33.stop();\n            }\n          }\n        }, _callee33, this);\n      }));\n\n      function sendPhotos(_x27) {\n        return _sendPhotos.apply(this, arguments);\n      }\n\n      return sendPhotos;\n    }()\n    /**\r\n     * @deprecated\r\n     */\n\n  }, {\n    key: \"sendPhoto\",\n    value: function () {\n      var _sendPhoto = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee34(rawSources) {\n        var params,\n            _args34 = arguments;\n        return _regeneratorRuntime.wrap(function _callee34$(_context34) {\n          while (1) {\n            switch (_context34.prev = _context34.next) {\n              case 0:\n                params = _args34.length > 1 && _args34[1] !== undefined ? _args34[1] : {};\n                showDeprecatedMessage('MessageContext, use sendPhotos instead of sendPhoto');\n                return _context34.abrupt(\"return\", this.sendPhotos(rawSources, params));\n\n              case 3:\n              case \"end\":\n                return _context34.stop();\n            }\n          }\n        }, _callee34, this);\n      }));\n\n      function sendPhoto(_x28) {\n        return _sendPhoto.apply(this, arguments);\n      }\n\n      return sendPhoto;\n    }()\n    /**\r\n     * Sends a documents to the current dialog\r\n     */\n\n  }, {\n    key: \"sendDocuments\",\n    value: function () {\n      var _sendDocuments = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee35(rawSources) {\n        var _this34 = this;\n\n        var params,\n            sources,\n            attachment,\n            response,\n            _args35 = arguments;\n        return _regeneratorRuntime.wrap(function _callee35$(_context35) {\n          while (1) {\n            switch (_context35.prev = _context35.next) {\n              case 0:\n                params = _args35.length > 1 && _args35[1] !== undefined ? _args35[1] : {};\n                sources = !Array.isArray(rawSources) ? [rawSources] : rawSources;\n                _context35.next = 4;\n                return Promise.all(sources.map(function (source) {\n                  return _this34.vk.upload.messageDocument({\n                    source: source,\n                    peer_id: _this34.peerId\n                  });\n                }));\n\n              case 4:\n                attachment = _context35.sent;\n                _context35.next = 7;\n                return this.send(_objectSpread({}, params, {\n                  attachment: attachment\n                }));\n\n              case 7:\n                response = _context35.sent;\n                return _context35.abrupt(\"return\", response);\n\n              case 9:\n              case \"end\":\n                return _context35.stop();\n            }\n          }\n        }, _callee35, this);\n      }));\n\n      function sendDocuments(_x29) {\n        return _sendDocuments.apply(this, arguments);\n      }\n\n      return sendDocuments;\n    }()\n    /**\r\n     * @deprecated\r\n     */\n\n  }, {\n    key: \"sendDocument\",\n    value: function () {\n      var _sendDocument = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee36(rawSources) {\n        var params,\n            _args36 = arguments;\n        return _regeneratorRuntime.wrap(function _callee36$(_context36) {\n          while (1) {\n            switch (_context36.prev = _context36.next) {\n              case 0:\n                params = _args36.length > 1 && _args36[1] !== undefined ? _args36[1] : {};\n                showDeprecatedMessage('MessageContext, use sendDocuments instead of sendDocument');\n                return _context36.abrupt(\"return\", this.sendDocuments(rawSources, params));\n\n              case 3:\n              case \"end\":\n                return _context36.stop();\n            }\n          }\n        }, _callee36, this);\n      }));\n\n      function sendDocument(_x30) {\n        return _sendDocument.apply(this, arguments);\n      }\n\n      return sendDocument;\n    }()\n    /**\r\n     * Sends a audio message to the current dialog\r\n     */\n\n  }, {\n    key: \"sendAudioMessage\",\n    value: function () {\n      var _sendAudioMessage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee37(source) {\n        var params,\n            attachment,\n            response,\n            _args37 = arguments;\n        return _regeneratorRuntime.wrap(function _callee37$(_context37) {\n          while (1) {\n            switch (_context37.prev = _context37.next) {\n              case 0:\n                params = _args37.length > 1 && _args37[1] !== undefined ? _args37[1] : {};\n                _context37.next = 3;\n                return this.vk.upload.audioMessage({\n                  source: source,\n                  peer_id: this.peerId\n                });\n\n              case 3:\n                attachment = _context37.sent;\n                _context37.next = 6;\n                return this.send(_objectSpread({}, params, {\n                  attachment: attachment\n                }));\n\n              case 6:\n                response = _context37.sent;\n                return _context37.abrupt(\"return\", response);\n\n              case 8:\n              case \"end\":\n                return _context37.stop();\n            }\n          }\n        }, _callee37, this);\n      }));\n\n      function sendAudioMessage(_x31) {\n        return _sendAudioMessage.apply(this, arguments);\n      }\n\n      return sendAudioMessage;\n    }()\n    /**\r\n     * Changes the status of typing in the dialog\r\n     */\n\n  }, {\n    key: \"setActivity\",\n    value: function () {\n      var _setActivity = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee38() {\n        var isActivited;\n        return _regeneratorRuntime.wrap(function _callee38$(_context38) {\n          while (1) {\n            switch (_context38.prev = _context38.next) {\n              case 0:\n                _context38.next = 2;\n                return this.vk.api.messages.setActivity({\n                  peer_id: this.peerId,\n                  type: 'typing'\n                });\n\n              case 2:\n                isActivited = _context38.sent;\n                return _context38.abrupt(\"return\", Boolean(isActivited));\n\n              case 4:\n              case \"end\":\n                return _context38.stop();\n            }\n          }\n        }, _callee38, this);\n      }));\n\n      function setActivity() {\n        return _setActivity.apply(this, arguments);\n      }\n\n      return setActivity;\n    }()\n    /**\r\n     * Marks messages as important or removes a mark\r\n     */\n\n  }, {\n    key: \"markAsImportant\",\n    value: function () {\n      var _markAsImportant = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee39() {\n        var ids,\n            options,\n            messageIds,\n            _args39 = arguments;\n        return _regeneratorRuntime.wrap(function _callee39$(_context39) {\n          while (1) {\n            switch (_context39.prev = _context39.next) {\n              case 0:\n                ids = _args39.length > 0 && _args39[0] !== undefined ? _args39[0] : [this.id];\n                options = _args39.length > 1 && _args39[1] !== undefined ? _args39[1] : {\n                  important: Number(!this.isImportant)\n                };\n                _context39.next = 4;\n                return this.vk.api.messages.markAsImportant(_objectSpread({}, options, {\n                  message_ids: ids\n                }));\n\n              case 4:\n                messageIds = _context39.sent;\n\n                if (messageIds.includes(this.id)) {\n                  this.message.important = Boolean(options.important);\n                }\n\n                return _context39.abrupt(\"return\", messageIds);\n\n              case 7:\n              case \"end\":\n                return _context39.stop();\n            }\n          }\n        }, _callee39, this);\n      }));\n\n      function markAsImportant() {\n        return _markAsImportant.apply(this, arguments);\n      }\n\n      return markAsImportant;\n    }()\n    /**\r\n     * Deletes the message\r\n     */\n\n  }, {\n    key: \"deleteMessage\",\n    value: function () {\n      var _deleteMessage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee40() {\n        var ids,\n            options,\n            messageIds,\n            _args40 = arguments;\n        return _regeneratorRuntime.wrap(function _callee40$(_context40) {\n          while (1) {\n            switch (_context40.prev = _context40.next) {\n              case 0:\n                ids = _args40.length > 0 && _args40[0] !== undefined ? _args40[0] : [this.id];\n                options = _args40.length > 1 && _args40[1] !== undefined ? _args40[1] : {\n                  spam: 0\n                };\n                _context40.next = 4;\n                return this.vk.api.messages.delete(_objectSpread({}, options, {\n                  message_ids: ids\n                }));\n\n              case 4:\n                messageIds = _context40.sent;\n                return _context40.abrupt(\"return\", messageIds);\n\n              case 6:\n              case \"end\":\n                return _context40.stop();\n            }\n          }\n        }, _callee40, this);\n      }));\n\n      function deleteMessage() {\n        return _deleteMessage.apply(this, arguments);\n      }\n\n      return deleteMessage;\n    }()\n    /**\r\n     * Restores the message\r\n     */\n\n  }, {\n    key: \"restoreMessage\",\n    value: function () {\n      var _restoreMessage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee41() {\n        var isRestored;\n        return _regeneratorRuntime.wrap(function _callee41$(_context41) {\n          while (1) {\n            switch (_context41.prev = _context41.next) {\n              case 0:\n                _context41.next = 2;\n                return this.vk.api.messages.restore({\n                  message_id: this.id\n                });\n\n              case 2:\n                isRestored = _context41.sent;\n                return _context41.abrupt(\"return\", Boolean(isRestored));\n\n              case 4:\n              case \"end\":\n                return _context41.stop();\n            }\n          }\n        }, _callee41, this);\n      }));\n\n      function restoreMessage() {\n        return _restoreMessage.apply(this, arguments);\n      }\n\n      return restoreMessage;\n    }()\n    /**\r\n     * Rename the chat\r\n     */\n\n  }, {\n    key: \"renameChat\",\n    value: function () {\n      var _renameChat = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee42(title) {\n        var isRenamed;\n        return _regeneratorRuntime.wrap(function _callee42$(_context42) {\n          while (1) {\n            switch (_context42.prev = _context42.next) {\n              case 0:\n                this.assertIsChat();\n                _context42.next = 3;\n                return this.vk.api.messages.editChat({\n                  chat_id: this.chatId,\n                  title: title\n                });\n\n              case 3:\n                isRenamed = _context42.sent;\n                return _context42.abrupt(\"return\", Boolean(isRenamed));\n\n              case 5:\n              case \"end\":\n                return _context42.stop();\n            }\n          }\n        }, _callee42, this);\n      }));\n\n      function renameChat(_x32) {\n        return _renameChat.apply(this, arguments);\n      }\n\n      return renameChat;\n    }()\n    /**\r\n     * Sets a new image for the chat\r\n     */\n\n  }, {\n    key: \"newChatPhoto\",\n    value: function () {\n      var _newChatPhoto = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee43(source) {\n        var params,\n            response,\n            _args43 = arguments;\n        return _regeneratorRuntime.wrap(function _callee43$(_context43) {\n          while (1) {\n            switch (_context43.prev = _context43.next) {\n              case 0:\n                params = _args43.length > 1 && _args43[1] !== undefined ? _args43[1] : {};\n                this.assertIsChat();\n                _context43.next = 4;\n                return this.vk.upload.chatPhoto(_objectSpread({}, params, {\n                  chat_id: this.chatId,\n                  source: source\n                }));\n\n              case 4:\n                response = _context43.sent;\n                return _context43.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context43.stop();\n            }\n          }\n        }, _callee43, this);\n      }));\n\n      function newChatPhoto(_x33) {\n        return _newChatPhoto.apply(this, arguments);\n      }\n\n      return newChatPhoto;\n    }()\n    /**\r\n     * Remove the chat photo\r\n     */\n\n  }, {\n    key: \"deleteChatPhoto\",\n    value: function () {\n      var _deleteChatPhoto = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee44() {\n        return _regeneratorRuntime.wrap(function _callee44$(_context44) {\n          while (1) {\n            switch (_context44.prev = _context44.next) {\n              case 0:\n                this.assertIsChat();\n                _context44.next = 3;\n                return this.vk.api.messages.deleteChatPhoto({\n                  chat_id: this.chatId\n                });\n\n              case 3:\n                return _context44.abrupt(\"return\", true);\n\n              case 4:\n              case \"end\":\n                return _context44.stop();\n            }\n          }\n        }, _callee44, this);\n      }));\n\n      function deleteChatPhoto() {\n        return _deleteChatPhoto.apply(this, arguments);\n      }\n\n      return deleteChatPhoto;\n    }()\n    /**\r\n     * Invites a new user\r\n     */\n\n  }, {\n    key: \"inviteUser\",\n    value: function () {\n      var _inviteUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee45() {\n        var id,\n            isInvited,\n            _args45 = arguments;\n        return _regeneratorRuntime.wrap(function _callee45$(_context45) {\n          while (1) {\n            switch (_context45.prev = _context45.next) {\n              case 0:\n                id = _args45.length > 0 && _args45[0] !== undefined ? _args45[0] : this.eventMemberId;\n                this.assertIsChat();\n                _context45.next = 4;\n                return this.vk.api.messages.addChatUser({\n                  chat_id: this.chatId,\n                  user_id: id\n                });\n\n              case 4:\n                isInvited = _context45.sent;\n                return _context45.abrupt(\"return\", Boolean(isInvited));\n\n              case 6:\n              case \"end\":\n                return _context45.stop();\n            }\n          }\n        }, _callee45, this);\n      }));\n\n      function inviteUser() {\n        return _inviteUser.apply(this, arguments);\n      }\n\n      return inviteUser;\n    }()\n    /**\r\n     * Excludes user\r\n     */\n\n  }, {\n    key: \"kickUser\",\n    value: function () {\n      var _kickUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee46() {\n        var id,\n            isKicked,\n            _args46 = arguments;\n        return _regeneratorRuntime.wrap(function _callee46$(_context46) {\n          while (1) {\n            switch (_context46.prev = _context46.next) {\n              case 0:\n                id = _args46.length > 0 && _args46[0] !== undefined ? _args46[0] : this.eventMemberId;\n                this.assertIsChat();\n                _context46.next = 4;\n                return this.vk.api.messages.removeChatUser({\n                  chat_id: this.chatId,\n                  member_id: id\n                });\n\n              case 4:\n                isKicked = _context46.sent;\n                return _context46.abrupt(\"return\", Boolean(isKicked));\n\n              case 6:\n              case \"end\":\n                return _context46.stop();\n            }\n          }\n        }, _callee46, this);\n      }));\n\n      function kickUser() {\n        return _kickUser.apply(this, arguments);\n      }\n\n      return kickUser;\n    }()\n    /**\r\n     * Pins a message\r\n     */\n\n  }, {\n    key: \"pinMessage\",\n    value: function () {\n      var _pinMessage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee47() {\n        var isPinned;\n        return _regeneratorRuntime.wrap(function _callee47$(_context47) {\n          while (1) {\n            switch (_context47.prev = _context47.next) {\n              case 0:\n                this.assertIsChat();\n                _context47.next = 3;\n                return this.vk.api.messages.pin({\n                  peer_id: this.peerId,\n                  message_id: this.id\n                });\n\n              case 3:\n                isPinned = _context47.sent;\n                return _context47.abrupt(\"return\", Boolean(isPinned));\n\n              case 5:\n              case \"end\":\n                return _context47.stop();\n            }\n          }\n        }, _callee47, this);\n      }));\n\n      function pinMessage() {\n        return _pinMessage.apply(this, arguments);\n      }\n\n      return pinMessage;\n    }()\n    /**\r\n     * Unpins a message\r\n     */\n\n  }, {\n    key: \"unpinMessage\",\n    value: function () {\n      var _unpinMessage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee48() {\n        var isUnpinned;\n        return _regeneratorRuntime.wrap(function _callee48$(_context48) {\n          while (1) {\n            switch (_context48.prev = _context48.next) {\n              case 0:\n                this.assertIsChat();\n                _context48.next = 3;\n                return this.vk.api.messages.unpin({\n                  peer_id: this.peerId,\n                  message_id: this.id\n                });\n\n              case 3:\n                isUnpinned = _context48.sent;\n                return _context48.abrupt(\"return\", Boolean(isUnpinned));\n\n              case 5:\n              case \"end\":\n                return _context48.stop();\n            }\n          }\n        }, _callee48, this);\n      }));\n\n      function unpinMessage() {\n        return _unpinMessage.apply(this, arguments);\n      }\n\n      return unpinMessage;\n    }()\n    /**\r\n     * Return alias of payload.message\r\n     */\n\n  }, {\n    key: \"applyPayload\",\n\n    /**\r\n     * Applies the payload\r\n     */\n    value: function applyPayload(payload) {\n      // Polyfill for all events except new_message\n      if (payload.client_info === undefined) {\n        // eslint-disable-next-line no-param-reassign\n        payload = {\n          // @ts-ignore\n          message: payload,\n          client_info: {\n            button_actions: ['text'],\n            inline_keyboard: false,\n            keyboard: true,\n            lang_id: 0\n          }\n        };\n      }\n\n      this.payload = payload;\n      this.text = payload.message.text ? unescapeHTML(payload.message.text) : null;\n    }\n    /**\r\n     * Checks that in a chat\r\n     */\n\n  }, {\n    key: \"assertIsChat\",\n    value: function assertIsChat() {\n      if (!this.isChat) {\n        throw new VKError({\n          message: 'This method is only available in chat',\n          code: 'IS_NOT_CHAT'\n        });\n      }\n    }\n    /**\r\n     * Returns the custom data\r\n     */\n\n  }, {\n    key: inspectCustomData,\n    value: function value() {\n      var beforeAttachments = [];\n\n      if (this.isEvent) {\n        beforeAttachments.push('eventType', 'eventMemberId', 'eventText', 'eventEmail');\n      }\n\n      if (this.hasReplyMessage) {\n        beforeAttachments.push('replyMessage');\n      }\n\n      var afterAttachments = [];\n\n      if (this.hasMessagePayload) {\n        afterAttachments.push('messagePayload');\n      }\n\n      afterAttachments.push('isOutbox');\n\n      if (this.referralValue) {\n        afterAttachments.push('referralValue', 'referralSource');\n      }\n\n      if (this.$match) {\n        afterAttachments.push('$match');\n      } // @ts-ignore\n\n\n      return copyParams(this, ['id', 'conversationMessageId', 'peerId', 'peerType', 'senderId', 'senderType', 'createdAt', 'text'].concat(beforeAttachments, ['forwards', 'attachments'], afterAttachments));\n    }\n  }, {\n    key: \"hasText\",\n    get: function get() {\n      return Boolean(this.text);\n    }\n    /**\r\n     * Checks for reply message\r\n     */\n\n  }, {\n    key: \"hasReplyMessage\",\n    get: function get() {\n      return this.replyMessage !== null;\n    }\n    /**\r\n     * Checks for forwarded messages\r\n     */\n\n  }, {\n    key: \"hasForwards\",\n    get: function get() {\n      return this.forwards.length > 0;\n    }\n    /**\r\n     * Checks for hast message payload\r\n     */\n\n  }, {\n    key: \"hasMessagePayload\",\n    get: function get() {\n      return Boolean(this.message.payload);\n    }\n    /**\r\n     * Checks if there is text\r\n     */\n\n  }, {\n    key: \"hasGeo\",\n    get: function get() {\n      return Boolean(this.message.geo);\n    }\n    /**\r\n     * Checks is a chat\r\n     */\n\n  }, {\n    key: \"isChat\",\n    get: function get() {\n      return this.peerType === MessageSource.CHAT;\n    }\n    /**\r\n     * Check is a user\r\n     */\n\n  }, {\n    key: \"isUser\",\n    get: function get() {\n      return this.senderType === MessageSource.USER;\n    }\n    /**\r\n     * Checks is a group\r\n     */\n\n  }, {\n    key: \"isGroup\",\n    get: function get() {\n      return this.senderType === MessageSource.GROUP;\n    }\n    /**\r\n     * Checks is from the user\r\n     */\n\n  }, {\n    key: \"isFromUser\",\n    get: function get() {\n      return this.peerType === MessageSource.USER;\n    }\n    /**\r\n     * Checks is from the group\r\n     */\n\n  }, {\n    key: \"isFromGroup\",\n    get: function get() {\n      return this.peerType === MessageSource.GROUP;\n    }\n    /**\r\n     * Checks a message has arrived in direct messages\r\n     */\n\n  }, {\n    key: \"isDM\",\n    get: function get() {\n      return this.isFromUser || this.isFromGroup;\n    }\n    /**\r\n     * Check is special event\r\n     */\n\n  }, {\n    key: \"isEvent\",\n    get: function get() {\n      return this.eventType !== null;\n    }\n    /**\r\n     * Checks whether the message is outbox\r\n     */\n\n  }, {\n    key: \"isOutbox\",\n    get: function get() {\n      return Boolean(this.message.out);\n    }\n    /**\r\n     * Checks whether the message is inbox\r\n     */\n\n  }, {\n    key: \"isInbox\",\n    get: function get() {\n      return !this.isOutbox;\n    }\n    /**\r\n     * Checks that the message is important\r\n     */\n\n  }, {\n    key: \"isImportant\",\n    get: function get() {\n      return this.message.important;\n    }\n    /**\r\n     * Returns the identifier message\r\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this.message.id;\n    }\n    /**\r\n     * Returns the conversation message id\r\n     */\n\n  }, {\n    key: \"conversationMessageId\",\n    get: function get() {\n      return this.message.conversation_message_id || null;\n    }\n    /**\r\n     * Returns the destination identifier\r\n     */\n\n  }, {\n    key: \"peerId\",\n    get: function get() {\n      return this.message.peer_id;\n    }\n    /**\r\n     * Returns the peer type\r\n     */\n\n  }, {\n    key: \"peerType\",\n    get: function get() {\n      return getPeerType(this.message.peer_id);\n    }\n    /**\r\n     * Returns the sender identifier\r\n     */\n\n  }, {\n    key: \"senderId\",\n    get: function get() {\n      return this.message.from_id;\n    }\n    /**\r\n     * Returns the sender type\r\n     */\n\n  }, {\n    key: \"senderType\",\n    get: function get() {\n      return getPeerType(this.message.from_id);\n    }\n    /**\r\n     * Returns the identifier chat\r\n     */\n\n  }, {\n    key: \"chatId\",\n    get: function get() {\n      if (!this.isChat) {\n        return null;\n      }\n\n      return this.peerId - CHAT_PEER;\n    }\n    /**\r\n     * Returns the referral value\r\n     */\n\n  }, {\n    key: \"referralValue\",\n    get: function get() {\n      return this.message.ref;\n    }\n    /**\r\n     * Returns the referral source\r\n     */\n\n  }, {\n    key: \"referralSource\",\n    get: function get() {\n      return this.message.ref_source;\n    }\n    /**\r\n     * Returns the date when this message was created\r\n     */\n\n  }, {\n    key: \"createdAt\",\n    get: function get() {\n      return this.message.date;\n    }\n    /**\r\n     * Returns geo\r\n     */\n\n  }, {\n    key: \"geo\",\n    get: function get() {\n      if (!this.hasGeo) {\n        return null;\n      }\n\n      if (!this.$filled) {\n        throw new VKError({\n          message: 'The message payload is not fully loaded',\n          code: 'PAYLOAD_IS_NOT_FULL'\n        });\n      }\n\n      return this.message.geo;\n    }\n    /**\r\n     * Returns the event name\r\n     */\n\n  }, {\n    key: \"eventType\",\n    get: function get() {\n      return this.message.action && this.message.action.type || null;\n    }\n    /**\r\n     * Returns the event member id\r\n     */\n\n  }, {\n    key: \"eventMemberId\",\n    get: function get() {\n      return this.message.action && this.message.action.member_id || null;\n    }\n    /**\r\n     * Returns the event name\r\n     */\n\n  }, {\n    key: \"eventText\",\n    get: function get() {\n      return this.message.action && this.message.action.text || null;\n    }\n    /**\r\n     * Returns the event email\r\n     */\n\n  }, {\n    key: \"eventEmail\",\n    get: function get() {\n      return this.message.action && this.message.action.email || null;\n    }\n    /**\r\n     * Returns the message payload\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"messagePayload\",\n    get: function get() {\n      var _this$message$payload = this.message.payload,\n          payload = _this$message$payload === void 0 ? null : _this$message$payload;\n\n      if (payload === null) {\n        return null;\n      }\n\n      return JSON.parse(payload);\n    }\n    /**\r\n     * Returns the forwards\r\n     */\n\n  }, {\n    key: \"forwards\",\n    get: function get() {\n      var _this35 = this;\n\n      if (!this[kForwards$1]) {\n        this[kForwards$1] = this.message.fwd_messages ? _construct(MessageForwardsCollection, _toConsumableArray(this.message.fwd_messages.map(function (forward) {\n          return new MessageForward({\n            vk: _this35.vk,\n            // @ts-ignore\n            payload: forward\n          });\n        }))) : new MessageForwardsCollection();\n      }\n\n      return this[kForwards$1];\n    }\n    /**\r\n     * Returns the reply message\r\n     */\n\n  }, {\n    key: \"replyMessage\",\n    get: function get() {\n      if (!this[kReplyMessage]) {\n        this[kReplyMessage] = this.message.reply_message ? new MessageReply(this.message.reply_message, this.vk) : null;\n      }\n\n      return this[kReplyMessage];\n    }\n    /**\r\n     * Returns the attachments\r\n     */\n\n  }, {\n    key: \"attachments\",\n    get: function get() {\n      if (!this[kAttachments$3]) {\n        this[kAttachments$3] = transformAttachments(this.message.attachments, this.vk);\n      }\n\n      return this[kAttachments$3];\n    }\n    /**\r\n     * Returns the capabilities of the client the user is using.\r\n     */\n\n  }, {\n    key: \"clientInfo\",\n    get: function get() {\n      return this.payload.client_info;\n    }\n  }, {\n    key: \"message\",\n    get: function get() {\n      return this.payload.message;\n    }\n  }]);\n\n  return MessageContext;\n}(Context);\n\napplyMixins(MessageContext, [Attachmentable,\n/*#__PURE__*/\nfunction (_Attachmentable) {\n  _inherits(AllAttachmentable, _Attachmentable);\n\n  function AllAttachmentable() {\n    _classCallCheck(this, AllAttachmentable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AllAttachmentable).apply(this, arguments));\n  }\n\n  _createClass(AllAttachmentable, [{\n    key: \"hasAllAttachments\",\n    value: function hasAllAttachments() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      return this.hasAttachments(type) || this.replyMessage && this.replyMessage.hasAttachments(type) || this.forwards.hasAttachments(type);\n    }\n  }, {\n    key: \"getAllAttachments\",\n    value: function getAllAttachments(type) {\n      return [].concat(_toConsumableArray(this.getAttachments(type)), _toConsumableArray(this.replyMessage && this.replyMessage.getAttachments(type) || []), _toConsumableArray(this.forwards.getAttachments(type)));\n    }\n  }]);\n\n  return AllAttachmentable;\n}(Attachmentable)]);\nvar subTypes = {\n  wall_post_new: 'new_wall_post',\n  wall_repost: 'new_wall_repost'\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar WallPostContext =\n/*#__PURE__*/\nfunction (_Context4) {\n  _inherits(WallPostContext, _Context4);\n\n  function WallPostContext(options) {\n    var _this36;\n\n    _classCallCheck(this, WallPostContext);\n\n    _this36 = _possibleConstructorReturn(this, _getPrototypeOf(WallPostContext).call(this, _objectSpread({}, options, {\n      type: 'wall_post',\n      subTypes: [subTypes[options.updateType]]\n    }))); // @ts-ignore\n\n    _this36.wall = new WallAttachment(_this36.payload, _this36.vk);\n    return _this36;\n  }\n  /**\r\n   * Checks is repost\r\n   */\n\n\n  _createClass(WallPostContext, [{\n    key: \"deletePost\",\n\n    /**\r\n     * Removes a record from the wall\r\n     */\n    value: function deletePost() {\n      var wall = this.wall;\n      return this.vk.api.wall.delete({\n        post_id: wall.id,\n        owner_id: wall.ownerId\n      });\n    }\n    /**\r\n     * Returns the custom data\r\n     */\n\n  }, {\n    key: inspectCustomData,\n    value: function value() {\n      return copyParams(this, ['wall', 'isRepost']);\n    }\n  }, {\n    key: \"isRepost\",\n    get: function get() {\n      return this.subTypes.includes('new_wall_repost');\n    }\n  }]);\n\n  return WallPostContext;\n}(Context);\n/**\r\n * Causes of blocking\r\n */\n\n\nvar reasonNames = new Map([[0, 'other'], [1, 'spam'], [2, 'members_insult'], [3, 'obscene_expressions'], [4, 'messages_off_topic']]);\nvar subTypes$1 = {\n  user_block: 'block_group_user',\n  user_unblock: 'unblock_group_user'\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar GroupUserContext =\n/*#__PURE__*/\nfunction (_Context5) {\n  _inherits(GroupUserContext, _Context5);\n\n  function GroupUserContext(options) {\n    _classCallCheck(this, GroupUserContext);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GroupUserContext).call(this, _objectSpread({}, options, {\n      type: 'group_user',\n      subTypes: [subTypes$1[options.updateType]]\n    })));\n  }\n  /**\r\n   * Checks is join user\r\n   */\n\n\n  _createClass(GroupUserContext, [{\n    key: \"ban\",\n\n    /**\r\n     * Adds a user to the community blacklist\r\n     */\n    value: function ban(params) {\n      if (this.isBlocked) {\n        return Promise.reject(new VKError({\n          message: 'User is blocked',\n          code: 'ALREADY_BANNED'\n        }));\n      }\n\n      return this.vk.api.groups.ban(_objectSpread({}, params, {\n        group_id: this.$groupId,\n        user_id: this.userId\n      }));\n    }\n    /**\r\n     * Adds a user to the community blacklist\r\n     */\n\n  }, {\n    key: \"unban\",\n    value: function unban() {\n      if (this.isUnblocked) {\n        return Promise.reject(new VKError({\n          message: 'User is not blocked',\n          code: 'ALREADY_UNBANNED'\n        }));\n      }\n\n      return this.vk.api.groups.unban({\n        group_id: this.$groupId,\n        user_id: this.userId\n      });\n    }\n    /**\r\n     * Returns the custom data\r\n     */\n\n  }, {\n    key: inspectCustomData,\n    value: function value() {\n      return copyParams(this, ['adminId', 'userId', 'reasonId', 'reasonName', 'comment', 'isExpired', 'isBlocked', 'isUnblocked']);\n    }\n  }, {\n    key: \"isBlocked\",\n    get: function get() {\n      return this.subTypes.includes('block_group_user');\n    }\n    /**\r\n     * Checks is leave user\r\n     */\n\n  }, {\n    key: \"isUnblocked\",\n    get: function get() {\n      return this.subTypes.includes('unblock_group_user');\n    }\n    /**\r\n     * Checks that the block has expired\r\n     */\n\n  }, {\n    key: \"isExpired\",\n    get: function get() {\n      if (this.isBlocked) {\n        return null;\n      }\n\n      return Boolean(this.payload.by_end_date);\n    }\n    /**\r\n     * Returns the identifier admin\r\n     */\n\n  }, {\n    key: \"adminId\",\n    get: function get() {\n      return this.payload.admin_id;\n    }\n    /**\r\n     * Returns the identifier user\r\n     */\n\n  }, {\n    key: \"userId\",\n    get: function get() {\n      return this.payload.user_id;\n    }\n    /**\r\n     * Returns the reason for the ban\r\n     */\n\n  }, {\n    key: \"reasonId\",\n    get: function get() {\n      return this.payload.reason || null;\n    }\n    /**\r\n     * Returns the reason name for the ban\r\n     */\n\n  }, {\n    key: \"reasonName\",\n    get: function get() {\n      // @ts-ignore\n      return reasonNames.get(this.reasonId);\n    }\n    /**\r\n     * Returns the unblock date or null if permanent\r\n     */\n\n  }, {\n    key: \"unblockAt\",\n    get: function get() {\n      return this.payload.unblock_date || null;\n    }\n    /**\r\n     * Returns the administrator comment to block\r\n     */\n\n  }, {\n    key: \"comment\",\n    get: function get() {\n      return this.payload.comment || null;\n    }\n  }]);\n\n  return GroupUserContext;\n}(Context);\n\nvar subTypes$2 = {\n  8: 'user_online',\n  9: 'user_offline'\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar UserOnlineContext =\n/*#__PURE__*/\nfunction (_Context6) {\n  _inherits(UserOnlineContext, _Context6);\n\n  function UserOnlineContext(options) {\n    _classCallCheck(this, UserOnlineContext);\n\n    var _options$payload = _slicedToArray(options.payload, 4),\n        eventId = _options$payload[0],\n        userId = _options$payload[1],\n        extra = _options$payload[2],\n        date = _options$payload[3];\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UserOnlineContext).call(this, _objectSpread({}, options, {\n      type: 'user_active',\n      subTypes: [subTypes$2[eventId]],\n      payload: {\n        user_id: -userId,\n        extra: extra,\n        date: date\n      }\n    })));\n  }\n  /**\r\n   * Checks that the user is online\r\n   */\n\n\n  _createClass(UserOnlineContext, [{\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['userId', 'createdAt', 'platformName', 'isSelfExit', 'isTimeoutExit', 'isUserOnline', 'isUserOffline']);\n    }\n  }, {\n    key: \"isUserOnline\",\n    get: function get() {\n      return this.subTypes.includes('user_online');\n    }\n    /**\r\n     * Checks that the user is online\r\n     */\n\n  }, {\n    key: \"isUserOffline\",\n    get: function get() {\n      return this.subTypes.includes('user_offline');\n    }\n    /**\r\n     * Checks that the user has logged out of the network himself\r\n     */\n\n  }, {\n    key: \"isSelfExit\",\n    get: function get() {\n      return this.isUserOffline && !this.payload.extra;\n    }\n    /**\r\n     * Checks that the user logged out a timeout\r\n     */\n\n  }, {\n    key: \"isTimeoutExit\",\n    get: function get() {\n      return this.isUserOffline && Boolean(this.payload.extra);\n    }\n    /**\r\n     * Returns the user id\r\n     */\n\n  }, {\n    key: \"userId\",\n    get: function get() {\n      return this.payload.user_id || null;\n    }\n    /**\r\n     * Returns the date when this event was created\r\n     */\n\n  }, {\n    key: \"createdAt\",\n    get: function get() {\n      return this.payload.date;\n    }\n    /**\r\n     * Returns the name of the platform from which the user entered\r\n     */\n\n  }, {\n    key: \"platformName\",\n    get: function get() {\n      return platforms.get(this.payload.extra);\n    }\n  }]);\n\n  return UserOnlineContext;\n}(Context);\n\nvar subTypes$3 = {\n  10: 'remove_dialog_flags',\n  11: 'update_dialog_flags',\n  12: 'set_dialog_flags'\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar DialogFlagsContext =\n/*#__PURE__*/\nfunction (_Context7) {\n  _inherits(DialogFlagsContext, _Context7);\n\n  function DialogFlagsContext(options) {\n    _classCallCheck(this, DialogFlagsContext);\n\n    var _options$payload2 = _slicedToArray(options.payload, 3),\n        eventId = _options$payload2[0],\n        peerId = _options$payload2[1],\n        flags = _options$payload2[2];\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DialogFlagsContext).call(this, _objectSpread({}, options, {\n      type: 'dialog_flags',\n      subTypes: [subTypes$3[eventId]],\n      payload: {\n        peer_id: peerId,\n        flags: flags\n      }\n    })));\n  }\n  /**\r\n   * Checks that an important dialogue\r\n   */\n\n\n  _createClass(DialogFlagsContext, [{\n    key: \"markAsAnsweredConversation\",\n\n    /**\r\n     * Marks the conversation as answered or unchecked\r\n     */\n    value: function markAsAnsweredConversation(params) {\n      return this.vk.api.messages.markAsAnsweredConversation(_objectSpread({}, params, {\n        peer_id: this.peerId\n      }));\n    }\n    /**\r\n     * Marks the conversation as important or removes the mark\r\n     */\n\n  }, {\n    key: \"markAsImportantConversation\",\n    value: function markAsImportantConversation(params) {\n      return this.vk.api.messages.markAsImportantConversation(_objectSpread({}, params, {\n        peer_id: this.peerId\n      }));\n    }\n    /**\r\n     * Returns the custom data\r\n     */\n\n  }, {\n    key: inspectCustomData,\n    value: function value() {\n      return copyParams(this, ['peerId', 'flags', 'isImportant', 'isUnanswered']);\n    }\n  }, {\n    key: \"isImportant\",\n    get: function get() {\n      // eslint-disable-next-line no-bitwise\n      return Boolean(this.flags & 1);\n    }\n    /**\r\n     * Checks that the unanswered dialog\r\n     */\n\n  }, {\n    key: \"isUnanswered\",\n    get: function get() {\n      // eslint-disable-next-line no-bitwise\n      return Boolean(this.flags & 2);\n    }\n    /**\r\n     * Returns the destination identifier\r\n     */\n\n  }, {\n    key: \"peerId\",\n    get: function get() {\n      return this.payload.peer_id;\n    }\n    /**\r\n     * Returns the values of the flags\r\n     */\n\n  }, {\n    key: \"flags\",\n    get: function get() {\n      return this.payload.flags;\n    }\n  }]);\n\n  return DialogFlagsContext;\n}(Context);\n\nvar subTypes$4 = {\n  group_change_photo: 'group_update_photo',\n  group_update_officers: 'group_update_officers',\n  group_change_settings: 'group_update_settings'\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar GroupUpdateContext =\n/*#__PURE__*/\nfunction (_Context8) {\n  _inherits(GroupUpdateContext, _Context8);\n\n  function GroupUpdateContext(options) {\n    var _this37;\n\n    _classCallCheck(this, GroupUpdateContext);\n\n    _this37 = _possibleConstructorReturn(this, _getPrototypeOf(GroupUpdateContext).call(this, _objectSpread({}, options, {\n      type: 'group_update',\n      subTypes: [subTypes$4[options.updateType]]\n    })));\n    _this37.attachments = options.updateType === 'group_change_photo' // @ts-ignore\n    ? [new PhotoAttachment(_this37.payload.photo, _this37.vk)] : [];\n    return _this37;\n  }\n  /**\r\n   * Checks is change photo\r\n   */\n\n\n  _createClass(GroupUpdateContext, [{\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['adminId', 'userId', 'oldLevel', 'newLevel', 'changes', 'attachments']);\n    }\n  }, {\n    key: \"isChangePhoto\",\n    get: function get() {\n      return this.subTypes.includes('group_update_photo');\n    }\n    /**\r\n     * Checks is change officers\r\n     */\n\n  }, {\n    key: \"isChangeOfficers\",\n    get: function get() {\n      return this.subTypes.includes('group_update_officers');\n    }\n    /**\r\n     * Checks is change settings\r\n     */\n\n  }, {\n    key: \"isChangeSettings\",\n    get: function get() {\n      return this.subTypes.includes('group_update_settings');\n    }\n    /**\r\n     * Returns the identifier admin\r\n     */\n\n  }, {\n    key: \"adminId\",\n    get: function get() {\n      return this.payload.admin_id || null;\n    }\n    /**\r\n     * Returns the identifier user\r\n     */\n\n  }, {\n    key: \"userId\",\n    get: function get() {\n      return this.payload.user_id;\n    }\n    /**\r\n     * Returns the old level permission\r\n     */\n\n  }, {\n    key: \"oldLevel\",\n    get: function get() {\n      return this.payload.level_old || null;\n    }\n    /**\r\n     * Returns the new level permission\r\n     */\n\n  }, {\n    key: \"newLevel\",\n    get: function get() {\n      return this.payload.level_new || null;\n    }\n    /**\r\n     * Returns the changes settings\r\n     */\n\n  }, {\n    key: \"changes\",\n    get: function get() {\n      return this.payload.changes || null;\n    }\n  }]);\n\n  return GroupUpdateContext;\n}(Context);\n\napplyMixins(GroupUpdateContext, [Attachmentable]);\nvar subTypes$5 = {\n  group_leave: 'leave_group_member',\n  group_join: 'join_group_member'\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar GroupMemberContext =\n/*#__PURE__*/\nfunction (_Context9) {\n  _inherits(GroupMemberContext, _Context9);\n\n  function GroupMemberContext(options) {\n    _classCallCheck(this, GroupMemberContext);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GroupMemberContext).call(this, _objectSpread({}, options, {\n      type: 'group_member',\n      subTypes: [subTypes$5[options.updateType]]\n    })));\n  }\n  /**\r\n   * Checks is join user\r\n   */\n\n\n  _createClass(GroupMemberContext, [{\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['userId', 'joinType', 'isJoin', 'isLeave', 'isSelfLeave']);\n    }\n  }, {\n    key: \"isJoin\",\n    get: function get() {\n      return this.subTypes.includes('join_group_member');\n    }\n    /**\r\n     * Checks is leave user\r\n     */\n\n  }, {\n    key: \"isLeave\",\n    get: function get() {\n      return this.subTypes.includes('leave_group_member');\n    }\n    /**\r\n     * Checks is self leave user\r\n     */\n\n  }, {\n    key: \"isSelfLeave\",\n    get: function get() {\n      if (this.isJoin) {\n        return null;\n      }\n\n      return Boolean(this.payload.self);\n    }\n    /**\r\n     * Returns the identifier user\r\n     */\n\n  }, {\n    key: \"userId\",\n    get: function get() {\n      return this.payload.user_id;\n    }\n    /**\r\n     * Returns the join type\r\n     */\n\n  }, {\n    key: \"joinType\",\n    get: function get() {\n      if (this.isLeave) {\n        return null;\n      }\n\n      return this.payload.join_type;\n    }\n  }]);\n\n  return GroupMemberContext;\n}(Context);\n\nvar subTypes$6 = {\n  message_allow: 'message_subscribe',\n  message_deny: 'message_unsubscribe'\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar MessageAllowContext =\n/*#__PURE__*/\nfunction (_Context10) {\n  _inherits(MessageAllowContext, _Context10);\n\n  function MessageAllowContext(options) {\n    _classCallCheck(this, MessageAllowContext);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MessageAllowContext).call(this, _objectSpread({}, options, {\n      type: 'message_subscribers',\n      subTypes: [subTypes$6[options.updateType]]\n    })));\n  }\n  /**\r\n   * Checks that the user has subscribed to messages\r\n   */\n\n\n  _createClass(MessageAllowContext, [{\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['userId', 'key', 'isSubscribed', 'isUbsubscribed']);\n    }\n  }, {\n    key: \"isSubscribed\",\n    get: function get() {\n      return this.subTypes.includes('message_subscribe');\n    }\n    /**\r\n     * Checks that the user has unsubscribed from the messages\r\n     */\n\n  }, {\n    key: \"isUbsubscribed\",\n    get: function get() {\n      return this.subTypes.includes('message_unsubscribe');\n    }\n    /**\r\n     * Returns the identifier user\r\n     */\n\n  }, {\n    key: \"userId\",\n    get: function get() {\n      return this.payload.user_id;\n    }\n    /**\r\n     * Returns the key\r\n     */\n\n  }, {\n    key: \"key\",\n    get: function get() {\n      return this.payload.key || null;\n    }\n  }]);\n\n  return MessageAllowContext;\n}(Context);\n\nvar subTypes$7 = {\n  6: 'read_inbox_messages',\n  7: 'read_outbox_messages'\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar ReadMessagesContext =\n/*#__PURE__*/\nfunction (_Context11) {\n  _inherits(ReadMessagesContext, _Context11);\n\n  function ReadMessagesContext(options) {\n    _classCallCheck(this, ReadMessagesContext);\n\n    var _options$payload3 = _slicedToArray(options.payload, 3),\n        eventId = _options$payload3[0],\n        peerId = _options$payload3[1],\n        id = _options$payload3[2];\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ReadMessagesContext).call(this, _objectSpread({}, options, {\n      type: 'read_messages',\n      subTypes: [subTypes$7[eventId]],\n      payload: {\n        peer_id: peerId,\n        id: id\n      }\n    })));\n  }\n  /**\r\n   * Checks that inbox messages are read\r\n   */\n\n\n  _createClass(ReadMessagesContext, [{\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['id', 'peerId', 'isInbox', 'isOutbox']);\n    }\n  }, {\n    key: \"isInbox\",\n    get: function get() {\n      return this.subTypes.includes('read_inbox_messages');\n    }\n    /**\r\n     * Checks that outbox messages are read\r\n     */\n\n  }, {\n    key: \"isOutbox\",\n    get: function get() {\n      return this.subTypes.includes('read_outbox_messages');\n    }\n    /**\r\n     * Returns the ID before the message read\r\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this.payload.id;\n    }\n    /**\r\n     * Returns the peer ID\r\n     */\n\n  }, {\n    key: \"peerId\",\n    get: function get() {\n      return this.payload.peer_id;\n    }\n  }]);\n\n  return ReadMessagesContext;\n}(Context);\n\nvar subTypes$8 = {\n  1: 'update_message_flags',\n  2: 'set_message_flags',\n  3: 'remove_message_flags'\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar MessageFlagsContext =\n/*#__PURE__*/\nfunction (_Context12) {\n  _inherits(MessageFlagsContext, _Context12);\n\n  function MessageFlagsContext(options) {\n    _classCallCheck(this, MessageFlagsContext);\n\n    var _options$payload4 = _slicedToArray(options.payload, 4),\n        eventId = _options$payload4[0],\n        id = _options$payload4[1],\n        flags = _options$payload4[2],\n        peerId = _options$payload4[3];\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MessageFlagsContext).call(this, _objectSpread({}, options, {\n      type: 'message_flags',\n      subTypes: [subTypes$8[eventId]],\n      payload: {\n        peer_id: peerId,\n        flags: flags,\n        id: id\n      }\n    })));\n  }\n  /**\r\n   * Verifies that the message is not read\r\n   */\n\n\n  _createClass(MessageFlagsContext, [{\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['id', 'peerId', 'flags']);\n    }\n  }, {\n    key: \"isUnread\",\n    get: function get() {\n      // eslint-disable-next-line no-bitwise\n      return Boolean(this.flags & 1);\n    }\n    /**\r\n     * Checks that the outgoing message\r\n     */\n\n  }, {\n    key: \"isOutbox\",\n    get: function get() {\n      // eslint-disable-next-line no-bitwise\n      return Boolean(this.flags & 2);\n    }\n    /**\r\n     * Verifies that a reply has been created to the message\r\n     */\n\n  }, {\n    key: \"isReplied\",\n    get: function get() {\n      // eslint-disable-next-line no-bitwise\n      return Boolean(this.flags & 4);\n    }\n    /**\r\n     * Verifies that the marked message\r\n     */\n\n  }, {\n    key: \"isImportant\",\n    get: function get() {\n      // eslint-disable-next-line no-bitwise\n      return Boolean(this.flags & 8);\n    }\n    /**\r\n     * Verifies that the message was sent via chat\r\n     */\n\n  }, {\n    key: \"isChat\",\n    get: function get() {\n      // eslint-disable-next-line no-bitwise\n      return Boolean(this.flags & 16);\n    }\n    /**\r\n     * Verifies that the message was sent by a friend\r\n     */\n\n  }, {\n    key: \"isFriends\",\n    get: function get() {\n      // eslint-disable-next-line no-bitwise\n      return Boolean(this.flags & 32);\n    }\n    /**\r\n     * Verifies that the message is marked as \"Spam\"\r\n     */\n\n  }, {\n    key: \"isSpam\",\n    get: function get() {\n      // eslint-disable-next-line no-bitwise\n      return Boolean(this.flags & 64);\n    }\n    /**\r\n     * Verifies that the message has been deleted (in the Recycle Bin)\r\n     */\n\n  }, {\n    key: \"isDeleted\",\n    get: function get() {\n      // eslint-disable-next-line no-bitwise\n      return Boolean(this.flags & 128);\n    }\n    /**\r\n     * Verifies that the message was verified by the user for spam\r\n     */\n\n  }, {\n    key: \"isFixed\",\n    get: function get() {\n      // eslint-disable-next-line no-bitwise\n      return Boolean(this.flags & 256);\n    }\n    /**\r\n     * Verifies that the message contains media content\r\n     */\n\n  }, {\n    key: \"isMedia\",\n    get: function get() {\n      // eslint-disable-next-line no-bitwise\n      return Boolean(this.flags & 512);\n    }\n    /**\r\n     * Checks that a welcome message from the community\r\n     */\n\n  }, {\n    key: \"isHidden\",\n    get: function get() {\n      // eslint-disable-next-line no-bitwise\n      return Boolean(this.flags & 65536);\n    }\n    /**\r\n     * Message deleted for all recipients\r\n     */\n\n  }, {\n    key: \"isDeletedForAll\",\n    get: function get() {\n      // eslint-disable-next-line no-bitwise\n      return Boolean(this.flags & 131072);\n    }\n    /**\r\n     * Returns the message ID\r\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this.payload.id;\n    }\n    /**\r\n     * Returns the destination identifier\r\n     */\n\n  }, {\n    key: \"peerId\",\n    get: function get() {\n      return this.payload.peer_id;\n    }\n    /**\r\n     * Returns the values of the flags\r\n     */\n\n  }, {\n    key: \"flags\",\n    get: function get() {\n      return this.payload.flags;\n    }\n  }]);\n\n  return MessageFlagsContext;\n}(Context); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nvar VKAppPayloadContext =\n/*#__PURE__*/\nfunction (_Context13) {\n  _inherits(VKAppPayloadContext, _Context13);\n\n  function VKAppPayloadContext(options) {\n    _classCallCheck(this, VKAppPayloadContext);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(VKAppPayloadContext).call(this, _objectSpread({}, options, {\n      type: 'vk_app_event',\n      subTypes: ['vk_app_payload']\n    })));\n  }\n  /**\r\n   * Returns the identifier of the user whose action the event was sent to in the application\r\n   */\n\n\n  _createClass(VKAppPayloadContext, [{\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['userId', 'appId', 'groupId', 'eventPayload']);\n    }\n  }, {\n    key: \"userId\",\n    get: function get() {\n      return this.payload.user_id;\n    }\n    /**\r\n     * Returns the identifier of the application from which the event was sent\r\n     */\n\n  }, {\n    key: \"appId\",\n    get: function get() {\n      return this.payload.app_id;\n    }\n    /**\r\n     * Returns the identifier of the community to which the notification was sent\r\n     */\n\n  }, {\n    key: \"groupId\",\n    get: function get() {\n      return this.payload.group_id;\n    }\n    /**\r\n     * Returns the transferred useful data\r\n     */\n\n  }, {\n    key: \"eventPayload\",\n    get: function get() {\n      return this.payload.payload;\n    }\n  }]);\n\n  return VKAppPayloadContext;\n}(Context);\n/**\r\n * Find types\r\n *\r\n * ```\r\n * wall_reply_new\r\n * ```\r\n */\n\n\nvar findTypes = /([^_]+)_([^_]+)_([^_]+)/; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar CommentActionContext =\n/*#__PURE__*/\nfunction (_Context14) {\n  _inherits(CommentActionContext, _Context14);\n\n  function CommentActionContext(options) {\n    var _this38;\n\n    _classCallCheck(this, CommentActionContext);\n\n    var _options$updateType$m = options.updateType.match(findTypes),\n        initiator = _options$updateType$m[1],\n        action = _options$updateType$m[3];\n\n    _this38 = _possibleConstructorReturn(this, _getPrototypeOf(CommentActionContext).call(this, _objectSpread({}, options, {\n      type: 'comment',\n      subTypes: [\"\".concat(initiator, \"_comment\"), \"\".concat(action, \"_\").concat(initiator, \"_comment\")]\n    })));\n    _this38.attachments = transformAttachments(_this38.payload.attachments, _this38.vk);\n    return _this38;\n  }\n  /**\r\n   * Checks is new comment\r\n   */\n\n\n  _createClass(CommentActionContext, [{\n    key: \"includesFromSubType\",\n\n    /**\r\n     * Includes from subtype\r\n     */\n    value: function includesFromSubType(type) {\n      return this.subTypes[1].includes(type);\n    }\n    /**\r\n     * Edits a comment\r\n     */\n\n  }, {\n    key: \"editComment\",\n    value: function editComment(options) {\n      if (this.isDelete) {\n        return Promise.reject(new VKError({\n          message: 'Comment is deleted',\n          code: 'ALREADY_DELETED'\n        }));\n      }\n\n      if (this.isBoardComment) {\n        // @ts-ignore\n        return this.vk.api.board.editComment(_objectSpread({}, options, {\n          comment_id: this.id,\n          topic_id: this.objectId,\n          group_id: this.$groupId\n        }));\n      }\n\n      var params = _objectSpread({}, options, {\n        comment_id: this.id,\n        owner_id: this.ownerId\n      });\n\n      if (this.isPhotoComment) {\n        // @ts-ignore\n        return this.vk.api.photos.editComment(params);\n      }\n\n      if (this.isVideoComment) {\n        // @ts-ignore\n        return this.vk.api.video.editComment(params);\n      }\n\n      if (this.isWallComment) {\n        // @ts-ignore\n        return this.vk.api.wall.editComment(params);\n      }\n\n      if (this.isMarketComment) {\n        // @ts-ignore\n        return this.vk.api.market.editComment(params);\n      }\n\n      return Promise.reject(new VKError({\n        message: 'Unsupported event for editing comment',\n        code: 'UNSUPPORTED_EVENT'\n      }));\n    }\n    /**\r\n     * Removes comment\r\n     */\n\n  }, {\n    key: \"deleteComment\",\n    value: function deleteComment() {\n      if (this.isDelete) {\n        return Promise.reject(new VKError({\n          message: 'Comment is deleted',\n          code: 'ALREADY_DELETED'\n        }));\n      }\n\n      if (this.isBoardComment) {\n        // @ts-ignore\n        return this.vk.api.board.deleteComment({\n          comment_id: this.id,\n          topic_id: this.objectId,\n          group_id: this.$groupId\n        });\n      }\n\n      var params = {\n        comment_id: this.id,\n        owner_id: this.ownerId\n      };\n\n      if (this.isPhotoComment) {\n        // @ts-ignore\n        return this.vk.api.photos.deleteComment(params);\n      }\n\n      if (this.isVideoComment) {\n        // @ts-ignore\n        return this.vk.api.video.deleteComment(params);\n      }\n\n      if (this.isWallComment) {\n        // @ts-ignore\n        return this.vk.api.wall.deleteComment(params);\n      }\n\n      if (this.isMarketComment) {\n        // @ts-ignore\n        return this.vk.api.market.deleteComment(params);\n      }\n\n      return Promise.reject(new VKError({\n        message: 'Unsupported event for deleting comment',\n        code: 'UNSUPPORTED_EVENT'\n      }));\n    }\n    /**\r\n     * Returns the custom data\r\n     */\n\n  }, {\n    key: inspectCustomData,\n    value: function value() {\n      var _this39 = this;\n\n      var properties = ['id', 'replyId', 'userId', 'replyUserId', 'removerUserId', 'objectId', 'ownerId', 'createdAt', 'text', 'likes', 'attachments', 'isReply'];\n      var filtredEmptyProperties = properties.filter(function (property) {\n        return (// @ts-ignore\n          _this39[property] !== null\n        );\n      }); // @ts-ignore\n\n      return copyParams(this, filtredEmptyProperties);\n    }\n  }, {\n    key: \"isNew\",\n    get: function get() {\n      return this.includesFromSubType('new');\n    }\n    /**\r\n     * Checks is edit comment\r\n     */\n\n  }, {\n    key: \"isEdit\",\n    get: function get() {\n      return this.includesFromSubType('edit');\n    }\n    /**\r\n     * Checks is delete comment\r\n     */\n\n  }, {\n    key: \"isDelete\",\n    get: function get() {\n      return this.includesFromSubType('delete');\n    }\n    /**\r\n     * Checks is restore comment\r\n     */\n\n  }, {\n    key: \"isRestore\",\n    get: function get() {\n      return this.includesFromSubType('restore');\n    }\n    /**\r\n     * Checks is photo comment\r\n     */\n\n  }, {\n    key: \"isPhotoComment\",\n    get: function get() {\n      return this.includesFromSubType('photo');\n    }\n    /**\r\n     * Checks is wall comment\r\n     */\n\n  }, {\n    key: \"isWallComment\",\n    get: function get() {\n      return this.includesFromSubType('wall');\n    }\n    /**\r\n     * Checks is video comment\r\n     */\n\n  }, {\n    key: \"isVideoComment\",\n    get: function get() {\n      return this.includesFromSubType('video');\n    }\n    /**\r\n     * Checks is board comment\r\n     */\n\n  }, {\n    key: \"isBoardComment\",\n    get: function get() {\n      return this.includesFromSubType('board');\n    }\n    /**\r\n     * Checks is board comment\r\n     */\n\n  }, {\n    key: \"isMarketComment\",\n    get: function get() {\n      return this.includesFromSubType('market');\n    }\n    /**\r\n     * Checks is reply comment\r\n     */\n\n  }, {\n    key: \"isReply\",\n    get: function get() {\n      return 'reply_to_comment' in this.payload;\n    }\n    /**\r\n     * Returns the identifier comment\r\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this.payload.id;\n    }\n    /**\r\n     * Returns the identifier reply comment\r\n     */\n\n  }, {\n    key: \"replyId\",\n    get: function get() {\n      return this.payload.reply_to_comment || null;\n    }\n    /**\r\n     * Returns the identifier user\r\n     */\n\n  }, {\n    key: \"userId\",\n    get: function get() {\n      return this.payload.from_id || this.payload.user_id || null;\n    }\n    /**\r\n     * Returns the identifier reply user\r\n     */\n\n  }, {\n    key: \"replyUserId\",\n    get: function get() {\n      return this.payload.reply_to_user || null;\n    }\n    /**\r\n     * Returns the identifier of the user who deleted the comment\r\n     */\n\n  }, {\n    key: \"removerUserId\",\n    get: function get() {\n      return this.payload.deleter_id || null;\n    }\n    /**\r\n     * Returns the identifier of object\r\n     */\n\n  }, {\n    key: \"objectId\",\n    get: function get() {\n      var payload = this.payload;\n      return payload.photo_id || payload.video_id || payload.post_id || payload.topic_id || payload.item_id || null;\n    }\n    /**\r\n     * Returns the identifier of owner\r\n     */\n\n  }, {\n    key: \"ownerId\",\n    get: function get() {\n      var payload = this.payload;\n      return payload.owner_id || payload.photo_owner_id || payload.video_owner_id || payload.post_owner_id || payload.topic_owner_id || payload.market_owner_id || null;\n    }\n    /**\r\n     * Returns the date creation action comment\r\n     */\n\n  }, {\n    key: \"createdAt\",\n    get: function get() {\n      return this.payload.date || null;\n    }\n    /**\r\n     * Returns the text comment\r\n     */\n\n  }, {\n    key: \"text\",\n    get: function get() {\n      return this.payload.text || null;\n    }\n    /**\r\n     * Returns the likes\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"likes\",\n    get: function get() {\n      return this.payload.likes || null;\n    }\n  }]);\n\n  return CommentActionContext;\n}(Context);\n\napplyMixins(CommentActionContext, [Attachmentable]); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar subTypes$9 = {\n  photo_new: ['new_photo_attachment', PhotoAttachment],\n  video_new: ['new_video_attachment', VideoAttachment],\n  audio_new: ['new_audio_attachment', AudioAttachment]\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar NewAttachmentsContext =\n/*#__PURE__*/\nfunction (_Context15) {\n  _inherits(NewAttachmentsContext, _Context15);\n\n  function NewAttachmentsContext(options) {\n    var _this40;\n\n    _classCallCheck(this, NewAttachmentsContext);\n\n    var _subTypes$9$options$u = _slicedToArray(subTypes$9[options.updateType], 2),\n        subType = _subTypes$9$options$u[0],\n        PayloadAttachment = _subTypes$9$options$u[1];\n\n    _this40 = _possibleConstructorReturn(this, _getPrototypeOf(NewAttachmentsContext).call(this, _objectSpread({}, options, {\n      type: 'new_attachment',\n      subTypes: [subType]\n    })));\n    _this40.attachments = [new PayloadAttachment(_this40.payload, _this40.vk)];\n    return _this40;\n  }\n  /**\r\n   * Checks is attachment photo\r\n   */\n\n\n  _createClass(NewAttachmentsContext, [{\n    key: \"deleteAttachment\",\n\n    /**\r\n     * Removes the attachment\r\n     */\n    value: function deleteAttachment() {\n      if (this.isPhoto) {\n        var _this$getAttachments = this.getAttachments(AttachmentType.PHOTO),\n            _this$getAttachments2 = _slicedToArray(_this$getAttachments, 1),\n            photo = _this$getAttachments2[0];\n\n        return this.vk.api.photos.delete({\n          owner_id: photo.ownerId,\n          photo_id: photo.id\n        });\n      }\n\n      if (this.isVideo) {\n        var _this$getAttachments3 = this.getAttachments(AttachmentType.VIDEO),\n            _this$getAttachments4 = _slicedToArray(_this$getAttachments3, 1),\n            video = _this$getAttachments4[0];\n\n        return this.vk.api.video.delete({\n          owner_id: video.ownerId,\n          video_id: video.id\n        });\n      }\n\n      if (this.isAudio) {\n        var _this$getAttachments5 = this.getAttachments(AttachmentType.AUDIO),\n            _this$getAttachments6 = _slicedToArray(_this$getAttachments5, 1),\n            audio = _this$getAttachments6[0]; // @ts-ignore\n\n\n        return this.vk.api.audio.delete({\n          owner_id: audio.ownerId,\n          audio_id: audio.id\n        });\n      }\n\n      return Promise.reject(new VKError({\n        message: 'Unsupported event for deleting attachment',\n        code: 'UNSUPPORTED_EVENT'\n      }));\n    }\n    /**\r\n     * Returns the custom data\r\n     */\n\n  }, {\n    key: inspectCustomData,\n    value: function value() {\n      return copyParams(this, ['attachments', 'isPhoto', 'isVideo', 'isAudio']);\n    }\n  }, {\n    key: \"isPhoto\",\n    get: function get() {\n      return this.subTypes.includes('new_photo_attachment');\n    }\n    /**\r\n     * Checks is attachment video\r\n     */\n\n  }, {\n    key: \"isVideo\",\n    get: function get() {\n      return this.subTypes.includes('new_video_attachment');\n    }\n    /**\r\n     * Checks is attachment audio\r\n     */\n\n  }, {\n    key: \"isAudio\",\n    get: function get() {\n      return this.subTypes.includes('new_audio_attachment');\n    }\n  }]);\n\n  return NewAttachmentsContext;\n}(Context);\n\napplyMixins(NewAttachmentsContext, [Attachmentable]);\nvar subTypes$a = {\n  13: 'delete_messages',\n  14: 'restore_messages'\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar RemovedMessagesContext =\n/*#__PURE__*/\nfunction (_Context16) {\n  _inherits(RemovedMessagesContext, _Context16);\n\n  function RemovedMessagesContext(options) {\n    _classCallCheck(this, RemovedMessagesContext);\n\n    var _options$payload5 = _slicedToArray(options.payload, 3),\n        eventId = _options$payload5[0],\n        peerId = _options$payload5[1],\n        id = _options$payload5[2];\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RemovedMessagesContext).call(this, _objectSpread({}, options, {\n      type: 'removed_messages',\n      subTypes: [subTypes$a[eventId]],\n      payload: {\n        peer_id: peerId,\n        id: id\n      }\n    })));\n  }\n  /**\r\n   * Checks that messages have been deleted\r\n   */\n\n\n  _createClass(RemovedMessagesContext, [{\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['id', 'peerId', 'isRemoved', 'isRecovery']);\n    }\n  }, {\n    key: \"isRemoved\",\n    get: function get() {\n      return this.subTypes.includes('delete_messages');\n    }\n    /**\r\n     * Checks that messages have been restored\r\n     */\n\n  }, {\n    key: \"isRecovery\",\n    get: function get() {\n      return this.subTypes.includes('restore_messages');\n    }\n    /**\r\n     * Returns the identifier of the message\r\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this.payload.id;\n    }\n    /**\r\n     * Returns the peer ID\r\n     */\n\n  }, {\n    key: \"peerId\",\n    get: function get() {\n      return this.payload.peer_id;\n    }\n  }]);\n\n  return RemovedMessagesContext;\n}(Context); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nvar VKPayTransactionContext =\n/*#__PURE__*/\nfunction (_Context17) {\n  _inherits(VKPayTransactionContext, _Context17);\n\n  function VKPayTransactionContext(options) {\n    _classCallCheck(this, VKPayTransactionContext);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(VKPayTransactionContext).call(this, _objectSpread({}, options, {\n      type: 'vk_pay_transaction',\n      subTypes: ['vk_pay_transfer']\n    })));\n  }\n  /**\r\n   * Returns the identifier transfer sender\r\n   */\n\n\n  _createClass(VKPayTransactionContext, [{\n    key: inspectCustomData,\n\n    /**\r\n     * Returns the custom data\r\n     */\n    value: function value() {\n      return copyParams(this, ['fromId', 'amount', 'description', 'createdAt']);\n    }\n  }, {\n    key: \"fromId\",\n    get: function get() {\n      return this.payload.from_id;\n    }\n    /**\r\n     * Returns the transfer amount in thousandths of a ruble\r\n     */\n\n  }, {\n    key: \"amount\",\n    get: function get() {\n      return this.payload.amount;\n    }\n    /**\r\n     * Returns the description on the translation\r\n     */\n\n  }, {\n    key: \"description\",\n    get: function get() {\n      return this.payload.description;\n    }\n    /**\r\n     * Returns the unixtime transfer time\r\n     */\n\n  }, {\n    key: \"createdAt\",\n    get: function get() {\n      return this.payload.date;\n    }\n  }]);\n\n  return VKPayTransactionContext;\n}(Context);\n\nvar _UpdatesErrorCode = UpdatesErrorCode,\n    NEED_RESTART = _UpdatesErrorCode.NEED_RESTART,\n    POLLING_REQUEST_FAILED = _UpdatesErrorCode.POLLING_REQUEST_FAILED;\nvar debug$2 = createDebug('vk-io:updates');\n/**\r\n * Version polling\r\n */\n\nvar POLLING_VERSION = 3;\n\nvar PollingTransport =\n/*#__PURE__*/\nfunction () {\n  function PollingTransport(vk) {\n    _classCallCheck(this, PollingTransport);\n\n    this.started = false;\n    /**\r\n     * 2 -  Attachments\r\n     * 8 -  Extended events\r\n     * 64 - Online user platform ID\r\n     */\n    // eslint-disable-next-line no-bitwise\n\n    this.mode = 2 | 8 | 64;\n    this.ts = 0;\n    this.pts = 0;\n    this.restarted = 0;\n    this.vk = vk;\n  }\n\n  _createClass(PollingTransport, [{\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee49() {\n        var pollingGroupId, isGroup, _ref63, server, key, ts, pollingURL;\n\n        return _regeneratorRuntime.wrap(function _callee49$(_context49) {\n          while (1) {\n            switch (_context49.prev = _context49.next) {\n              case 0:\n                if (!this.started) {\n                  _context49.next = 2;\n                  break;\n                }\n\n                throw new Error('Polling updates already started');\n\n              case 2:\n                if (this.pollingHandler) {\n                  _context49.next = 4;\n                  break;\n                }\n\n                throw new Error('You didn\\'t subscribe to updates');\n\n              case 4:\n                this.started = true;\n                _context49.prev = 5;\n                pollingGroupId = this.vk.options.pollingGroupId;\n                isGroup = pollingGroupId !== null;\n\n                if (!isGroup) {\n                  _context49.next = 14;\n                  break;\n                }\n\n                _context49.next = 11;\n                return this.vk.api.groups.getLongPollServer({\n                  group_id: pollingGroupId\n                });\n\n              case 11:\n                _context49.t0 = _context49.sent;\n                _context49.next = 17;\n                break;\n\n              case 14:\n                _context49.next = 16;\n                return this.vk.api.messages.getLongPollServer({\n                  lp_version: POLLING_VERSION\n                });\n\n              case 16:\n                _context49.t0 = _context49.sent;\n\n              case 17:\n                _ref63 = _context49.t0;\n                server = _ref63.server;\n                key = _ref63.key;\n                ts = _ref63.ts;\n\n                if (this.ts === 0) {\n                  this.ts = ts;\n                }\n\n                pollingURL = isGroup ? server : \"https://\".concat(server);\n                this.url = new URL(pollingURL);\n                this.url.search = String(new URLSearchParams({\n                  key: key,\n                  act: 'a_check',\n                  wait: '25',\n                  mode: String(this.mode),\n                  version: String(POLLING_VERSION)\n                }));\n                this.startFetchLoop();\n                debug$2(\"\".concat(isGroup ? 'Bot' : 'User', \" Polling started\"));\n                _context49.next = 33;\n                break;\n\n              case 29:\n                _context49.prev = 29;\n                _context49.t1 = _context49[\"catch\"](5);\n                this.started = false;\n                throw _context49.t1;\n\n              case 33:\n              case \"end\":\n                return _context49.stop();\n            }\n          }\n        }, _callee49, this, [[5, 29]]);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n    /**\r\n     * Stopping gets updates\r\n     */\n\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee50() {\n        return _regeneratorRuntime.wrap(function _callee50$(_context50) {\n          while (1) {\n            switch (_context50.prev = _context50.next) {\n              case 0:\n                this.started = false;\n                this.restarted = 0;\n\n              case 2:\n              case \"end\":\n                return _context50.stop();\n            }\n          }\n        }, _callee50, this);\n      }));\n\n      function stop() {\n        return _stop.apply(this, arguments);\n      }\n\n      return stop;\n    }()\n    /**\r\n     * Starts forever fetch updates  loop\r\n     */\n\n  }, {\n    key: \"startFetchLoop\",\n    value: function () {\n      var _startFetchLoop = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee51() {\n        var _this$vk$options3, pollingWait, pollingAttempts;\n\n        return _regeneratorRuntime.wrap(function _callee51$(_context51) {\n          while (1) {\n            switch (_context51.prev = _context51.next) {\n              case 0:\n                _context51.prev = 0;\n\n              case 1:\n                if (!this.started) {\n                  _context51.next = 6;\n                  break;\n                }\n\n                _context51.next = 4;\n                return this.fetchUpdates();\n\n              case 4:\n                _context51.next = 1;\n                break;\n\n              case 6:\n                _context51.next = 36;\n                break;\n\n              case 8:\n                _context51.prev = 8;\n                _context51.t0 = _context51[\"catch\"](0);\n                debug$2('longpoll error', _context51.t0);\n                _this$vk$options3 = this.vk.options, pollingWait = _this$vk$options3.pollingWait, pollingAttempts = _this$vk$options3.pollingAttempts;\n\n                if (!(_context51.t0.code !== NEED_RESTART && this.restarted < pollingAttempts)) {\n                  _context51.next = 19;\n                  break;\n                }\n\n                this.restarted += 1;\n                debug$2('longpoll restart request');\n                _context51.next = 17;\n                return delay(3e3);\n\n              case 17:\n                this.startFetchLoop();\n                return _context51.abrupt(\"return\");\n\n              case 19:\n                if (!this.started) {\n                  _context51.next = 36;\n                  break;\n                }\n\n                _context51.prev = 20;\n                _context51.next = 23;\n                return this.stop();\n\n              case 23:\n                _context51.next = 25;\n                return this.start();\n\n              case 25:\n                return _context51.abrupt(\"break\", 36);\n\n              case 28:\n                _context51.prev = 28;\n                _context51.t1 = _context51[\"catch\"](20);\n                debug$2('longpoll restarted error', _context51.t1);\n                this.started = true;\n                _context51.next = 34;\n                return delay(pollingWait);\n\n              case 34:\n                _context51.next = 19;\n                break;\n\n              case 36:\n              case \"end\":\n                return _context51.stop();\n            }\n          }\n        }, _callee51, this, [[0, 8], [20, 28]]);\n      }));\n\n      function startFetchLoop() {\n        return _startFetchLoop.apply(this, arguments);\n      }\n\n      return startFetchLoop;\n    }()\n    /**\r\n     * Gets updates\r\n     */\n\n  }, {\n    key: \"fetchUpdates\",\n    value: function () {\n      var _fetchUpdates = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee53() {\n        var _this41 = this;\n\n        var response, result;\n        return _regeneratorRuntime.wrap(function _callee53$(_context53) {\n          while (1) {\n            switch (_context53.prev = _context53.next) {\n              case 0:\n                this.url.searchParams.set('ts', String(this.ts));\n                debug$2('http -->');\n                _context53.next = 4;\n                return fetch(this.url, {\n                  agent: this.vk.options.agent,\n                  method: 'GET',\n                  timeout: 30e3,\n                  compress: false,\n                  headers: {\n                    connection: 'keep-alive'\n                  }\n                });\n\n              case 4:\n                response = _context53.sent;\n                debug$2(\"http <-- \".concat(response.status));\n\n                if (response.ok) {\n                  _context53.next = 8;\n                  break;\n                }\n\n                throw new UpdatesError({\n                  code: POLLING_REQUEST_FAILED,\n                  message: 'Polling request failed'\n                });\n\n              case 8:\n                _context53.next = 10;\n                return response.json();\n\n              case 10:\n                result = _context53.sent;\n\n                if (!(result.failed !== undefined)) {\n                  _context53.next = 17;\n                  break;\n                }\n\n                if (!(result.failed === 1)) {\n                  _context53.next = 15;\n                  break;\n                }\n\n                this.ts = result.ts;\n                return _context53.abrupt(\"return\");\n\n              case 15:\n                this.ts = 0;\n                throw new UpdatesError({\n                  code: NEED_RESTART,\n                  message: 'The server has failed'\n                });\n\n              case 17:\n                this.restarted = 0;\n                this.ts = result.ts;\n\n                if (result.pts) {\n                  this.pts = Number(result.pts);\n                }\n                /* Async handle updates */\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n                result.updates.forEach(\n                /*#__PURE__*/\n                function () {\n                  var _ref64 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee52(update) {\n                    return _regeneratorRuntime.wrap(function _callee52$(_context52) {\n                      while (1) {\n                        switch (_context52.prev = _context52.next) {\n                          case 0:\n                            _context52.prev = 0;\n                            _context52.next = 3;\n                            return _this41.pollingHandler(update);\n\n                          case 3:\n                            _context52.next = 8;\n                            break;\n\n                          case 5:\n                            _context52.prev = 5;\n                            _context52.t0 = _context52[\"catch\"](0);\n                            // eslint-disable-next-line no-console\n                            console.error('Handle polling update error:', _context52.t0);\n\n                          case 8:\n                          case \"end\":\n                            return _context52.stop();\n                        }\n                      }\n                    }, _callee52, null, [[0, 5]]);\n                  }));\n\n                  return function (_x34) {\n                    return _ref64.apply(this, arguments);\n                  };\n                }());\n\n              case 21:\n              case \"end\":\n                return _context53.stop();\n            }\n          }\n        }, _callee53, this);\n      }));\n\n      function fetchUpdates() {\n        return _fetchUpdates.apply(this, arguments);\n      }\n\n      return fetchUpdates;\n    }()\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(handler) {\n      this.pollingHandler = handler;\n    }\n  }]);\n\n  return PollingTransport;\n}();\n\nvar splitPath = function splitPath(path) {\n  return path.replace(/\\[([^[\\]]*)\\]/g, '.$1.').split('.').filter(Boolean);\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nvar getObjectValue = function getObjectValue(source, selectors) {\n  var link = source;\n  var _iteratorNormalCompletion11 = true;\n  var _didIteratorError11 = false;\n  var _iteratorError11 = undefined;\n\n  try {\n    for (var _iterator11 = selectors[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n      var selector = _step11.value;\n\n      if (!link[selector]) {\n        return undefined;\n      }\n\n      link = link[selector];\n    }\n  } catch (err) {\n    _didIteratorError11 = true;\n    _iteratorError11 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n        _iterator11.return();\n      }\n    } finally {\n      if (_didIteratorError11) {\n        throw _iteratorError11;\n      }\n    }\n  }\n\n  return link;\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nvar unifyCondition = function unifyCondition(condition) {\n  if (typeof condition === 'function') {\n    return condition;\n  }\n\n  if (condition instanceof RegExp) {\n    return function (text) {\n      return condition.test(text);\n    };\n  }\n\n  if (Array.isArray(condition)) {\n    var arrayConditions = condition.map(unifyCondition);\n    return function (value) {\n      return Array.isArray(value) ? arrayConditions.every(function (cond) {\n        return value.some(function (val) {\n          return cond(val);\n        });\n      }) : arrayConditions.some(function (cond) {\n        return cond(value);\n      });\n    };\n  }\n\n  return function (value) {\n    return value === condition;\n  };\n};\n\nvar parseRequestJSON = function parseRequestJSON(req, res) {\n  return new Promise(function (resolve, reject) {\n    var body = '';\n    req.on('error', reject);\n    req.on('data', function (chunk) {\n      if (body.length > 1e6) {\n        res.writeHead(413);\n        res.end();\n        req.connection.destroy();\n        reject();\n        return;\n      }\n\n      body += String(chunk);\n    });\n    req.on('end', function () {\n      try {\n        var json = JSON.parse(body);\n        resolve(json);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  });\n};\n\nvar debug$3 = createDebug('vk-io:updates');\n\nvar WebhookTransport =\n/*#__PURE__*/\nfunction () {\n  function WebhookTransport(vk) {\n    _classCallCheck(this, WebhookTransport);\n\n    this.started = false;\n    this.webhookServer = null;\n    this.vk = vk;\n  }\n  /**\r\n   * Starts the webhook server\r\n   */\n\n\n  _createClass(WebhookTransport, [{\n    key: \"start\",\n    value: function () {\n      var _start2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee54() {\n        var _ref65,\n            _ref65$path,\n            path,\n            tls,\n            host,\n            port,\n            next,\n            webhookCallback,\n            callback,\n            webhookServer,\n            listen,\n            serverPort,\n            _args54 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee54$(_context54) {\n          while (1) {\n            switch (_context54.prev = _context54.next) {\n              case 0:\n                _ref65 = _args54.length > 0 && _args54[0] !== undefined ? _args54[0] : {}, _ref65$path = _ref65.path, path = _ref65$path === void 0 ? '/' : _ref65$path, tls = _ref65.tls, host = _ref65.host, port = _ref65.port;\n                next = _args54.length > 1 ? _args54[1] : undefined;\n\n                if (!this.started) {\n                  _context54.next = 4;\n                  break;\n                }\n\n                throw new Error('Webhook updates already started');\n\n              case 4:\n                if (this.webhookHandler) {\n                  _context54.next = 6;\n                  break;\n                }\n\n                throw new Error('You didn\\'t subscribe to updates');\n\n              case 6:\n                this.started = true;\n                _context54.prev = 7;\n                webhookCallback = this.getWebhookCallback(path);\n                callback = typeof next === 'function' ? function (req, res) {\n                  return webhookCallback(req, res, function () {\n                    return next(req, res);\n                  });\n                } : function (req, res) {\n                  return webhookCallback(req, res, function () {\n                    res.writeHead(403);\n                    res.end();\n                  });\n                };\n                this.webhookServer = tls ? createServer(tls, callback) : createServer$1(callback);\n                webhookServer = this.webhookServer;\n                listen = promisify(webhookServer.listen).bind(webhookServer);\n                serverPort = port || (tls ? 443 : 80); // @ts-ignore\n\n                _context54.next = 16;\n                return listen(serverPort, host);\n\n              case 16:\n                debug$3(\"Webhook listening on port: \".concat(serverPort));\n                _context54.next = 23;\n                break;\n\n              case 19:\n                _context54.prev = 19;\n                _context54.t0 = _context54[\"catch\"](7);\n                this.started = false;\n                throw _context54.t0;\n\n              case 23:\n              case \"end\":\n                return _context54.stop();\n            }\n          }\n        }, _callee54, this, [[7, 19]]);\n      }));\n\n      function start() {\n        return _start2.apply(this, arguments);\n      }\n\n      return start;\n    }()\n    /**\r\n     * Stopping gets updates\r\n     */\n\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee55() {\n        var webhookServer, close;\n        return _regeneratorRuntime.wrap(function _callee55$(_context55) {\n          while (1) {\n            switch (_context55.prev = _context55.next) {\n              case 0:\n                this.started = false;\n\n                if (!(this.webhookServer !== null)) {\n                  _context55.next = 7;\n                  break;\n                }\n\n                webhookServer = this.webhookServer;\n                close = promisify(webhookServer.close).bind(webhookServer);\n                _context55.next = 6;\n                return close();\n\n              case 6:\n                this.webhookServer = null;\n\n              case 7:\n              case \"end\":\n                return _context55.stop();\n            }\n          }\n        }, _callee55, this);\n      }));\n\n      function stop() {\n        return _stop2.apply(this, arguments);\n      }\n\n      return stop;\n    }()\n    /**\r\n     * Returns webhook callback like http[s] or express\r\n     */\n\n  }, {\n    key: \"getWebhookCallback\",\n    value: function getWebhookCallback() {\n      var _this42 = this;\n\n      var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var headers = {\n        connection: 'keep-alive',\n        'content-type': 'text/plain'\n      };\n      var checkIsNotValidPath = path !== null ? function (requestPath) {\n        return requestPath !== path;\n      } : function () {\n        return false;\n      };\n      return (\n        /*#__PURE__*/\n        function () {\n          var _ref66 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee56(req, res, next) {\n            var update, _this42$vk$options, webhookSecret, webhookConfirmation;\n\n            return _regeneratorRuntime.wrap(function _callee56$(_context56) {\n              while (1) {\n                switch (_context56.prev = _context56.next) {\n                  case 0:\n                    if (!(req.method !== 'POST' || checkIsNotValidPath(req.url))) {\n                      _context56.next = 3;\n                      break;\n                    }\n\n                    next();\n                    return _context56.abrupt(\"return\");\n\n                  case 3:\n                    _context56.prev = 3;\n\n                    if (!(typeof req.body !== 'object')) {\n                      _context56.next = 10;\n                      break;\n                    }\n\n                    _context56.next = 7;\n                    return parseRequestJSON(req, res);\n\n                  case 7:\n                    _context56.t0 = _context56.sent;\n                    _context56.next = 11;\n                    break;\n\n                  case 10:\n                    _context56.t0 = // @ts-ignore\n                    req.body;\n\n                  case 11:\n                    update = _context56.t0;\n                    _context56.next = 18;\n                    break;\n\n                  case 14:\n                    _context56.prev = 14;\n                    _context56.t1 = _context56[\"catch\"](3);\n                    debug$3(_context56.t1);\n                    return _context56.abrupt(\"return\");\n\n                  case 18:\n                    _context56.prev = 18;\n                    _this42$vk$options = _this42.vk.options, webhookSecret = _this42$vk$options.webhookSecret, webhookConfirmation = _this42$vk$options.webhookConfirmation;\n\n                    if (!(webhookSecret !== null && update.secret !== webhookSecret)) {\n                      _context56.next = 24;\n                      break;\n                    }\n\n                    res.writeHead(403);\n                    res.end();\n                    return _context56.abrupt(\"return\");\n\n                  case 24:\n                    if (!(update.type === 'confirmation')) {\n                      _context56.next = 32;\n                      break;\n                    }\n\n                    if (!(webhookConfirmation === null)) {\n                      _context56.next = 29;\n                      break;\n                    }\n\n                    res.writeHead(500);\n                    res.end();\n                    return _context56.abrupt(\"return\");\n\n                  case 29:\n                    res.writeHead(200, headers);\n                    res.end(String(webhookConfirmation));\n                    return _context56.abrupt(\"return\");\n\n                  case 32:\n                    res.writeHead(200, headers);\n                    res.end('ok');\n\n                    _this42.webhookHandler(update).catch(function (error) {\n                      // eslint-disable-next-line no-console\n                      console.error('Handle webhook update error', error);\n                    });\n\n                    _context56.next = 42;\n                    break;\n\n                  case 37:\n                    _context56.prev = 37;\n                    _context56.t2 = _context56[\"catch\"](18);\n                    debug$3('webhook error', _context56.t2);\n                    res.writeHead(415);\n                    res.end();\n\n                  case 42:\n                  case \"end\":\n                    return _context56.stop();\n                }\n              }\n            }, _callee56, null, [[3, 14], [18, 37]]);\n          }));\n\n          return function (_x35, _x36, _x37) {\n            return _ref66.apply(this, arguments);\n          };\n        }()\n      );\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(handler) {\n      this.webhookHandler = handler;\n    }\n    /**\r\n     * Returns the middleware for the webhook under koa\r\n     */\n\n  }, {\n    key: \"getKoaWebhookMiddleware\",\n    value: function getKoaWebhookMiddleware() {\n      var _this43 = this;\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return (\n        /*#__PURE__*/\n        function () {\n          var _ref67 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee57(context) {\n            var update, _this43$vk$options, webhookSecret, webhookConfirmation;\n\n            return _regeneratorRuntime.wrap(function _callee57$(_context57) {\n              while (1) {\n                switch (_context57.prev = _context57.next) {\n                  case 0:\n                    update = context.request.body;\n                    _this43$vk$options = _this43.vk.options, webhookSecret = _this43$vk$options.webhookSecret, webhookConfirmation = _this43$vk$options.webhookConfirmation;\n\n                    if (!(webhookSecret !== null && update.secret !== webhookSecret)) {\n                      _context57.next = 5;\n                      break;\n                    }\n\n                    context.status = 403;\n                    return _context57.abrupt(\"return\");\n\n                  case 5:\n                    if (!(update.type === 'confirmation')) {\n                      _context57.next = 11;\n                      break;\n                    }\n\n                    if (!(webhookConfirmation === null)) {\n                      _context57.next = 9;\n                      break;\n                    }\n\n                    context.status = 500;\n                    return _context57.abrupt(\"return\");\n\n                  case 9:\n                    context.body = webhookConfirmation;\n                    return _context57.abrupt(\"return\");\n\n                  case 11:\n                    context.body = 'ok';\n                    context.set('connection', 'keep-alive');\n                    /* Do not delay server response */\n\n                    _this43.webhookHandler(update).catch(function (error) {\n                      // eslint-disable-next-line no-console\n                      console.error('Handle webhook update error', error);\n                    });\n\n                  case 14:\n                  case \"end\":\n                    return _context57.stop();\n                }\n              }\n            }, _callee57);\n          }));\n\n          return function (_x38) {\n            return _ref67.apply(this, arguments);\n          };\n        }()\n      );\n    }\n  }]);\n\n  return WebhookTransport;\n}();\n\nvar debug$4 = createDebug('vk-io:updates'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar webhookContextsEvents = [[['message_new', 'message_edit', 'message_reply'], MessageContext], [['message_allow', 'message_deny'], MessageAllowContext], [['photo_new', 'audio_new', 'video_new'], NewAttachmentsContext], [['wall_post_new', 'wall_repost'], WallPostContext], [['group_join', 'group_leave'], GroupMemberContext], [['user_block', 'user_unblock'], GroupUserContext], [['photo_comment_new', 'photo_comment_edit', 'photo_comment_delete', 'photo_comment_restore', 'video_comment_new', 'video_comment_edit', 'video_comment_delete', 'video_comment_restore', 'wall_reply_new', 'wall_reply_edit', 'wall_reply_delete', 'wall_reply_restore', 'board_post_new', 'board_post_edit', 'board_post_delete', 'board_post_restore', 'market_comment_new', 'market_comment_edit', 'market_comment_delete', 'market_comment_restore'], CommentActionContext], [['poll_vote_new'], VoteContext], [['group_change_photo', 'group_officers_edit', 'group_change_settings'], GroupUpdateContext], [['message_typing_state'], TypingContext], [['app_payload'], VKAppPayloadContext], [['vkpay_transaction'], VKPayTransactionContext]]; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar pollingContextsEvents = [[[1, 2, 3], MessageFlagsContext], [[4, 5], MessageContext], [[6, 7], ReadMessagesContext], [[8, 9], UserOnlineContext], [[10, 11, 12], DialogFlagsContext], [[13, 14], RemovedMessagesContext], [[61, 62], TypingContext]];\n\nvar makeContexts = function makeContexts(groups) {\n  var contexts = {};\n  var _iteratorNormalCompletion12 = true;\n  var _didIteratorError12 = false;\n  var _iteratorError12 = undefined;\n\n  try {\n    for (var _iterator12 = groups[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n      var _ref70 = _step12.value;\n\n      var _ref69 = _slicedToArray(_ref70, 2);\n\n      var events = _ref69[0];\n      var UpdateContext = _ref69[1];\n      var _iteratorNormalCompletion13 = true;\n      var _didIteratorError13 = false;\n      var _iteratorError13 = undefined;\n\n      try {\n        for (var _iterator13 = events[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n          var event = _step13.value;\n          contexts[event] = UpdateContext;\n        }\n      } catch (err) {\n        _didIteratorError13 = true;\n        _iteratorError13 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n            _iterator13.return();\n          }\n        } finally {\n          if (_didIteratorError13) {\n            throw _iteratorError13;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError12 = true;\n    _iteratorError12 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n        _iterator12.return();\n      }\n    } finally {\n      if (_didIteratorError12) {\n        throw _iteratorError12;\n      }\n    }\n  }\n\n  return contexts;\n}; // @ts-ignore\n\n\nvar webhookContexts = makeContexts(webhookContextsEvents); // @ts-ignore\n\nvar pollingContexts = makeContexts(pollingContextsEvents);\n\nvar Updates =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function Updates(vk) {\n    _classCallCheck(this, Updates);\n\n    this.stack = [];\n    this.hearStack = [];\n\n    this.hearFallbackHandler = function (context, next) {\n      return next();\n    };\n\n    this.vk = vk;\n    this.reloadMiddleware();\n    this.pollingTransport = new PollingTransport(vk);\n    this.webhookTransport = new WebhookTransport(vk);\n    this.webhookTransport.subscribe(this.handleWebhookUpdate.bind(this));\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(Updates, [{\n    key: \"use\",\n\n    /**\r\n     * Added middleware\r\n     */\n    value: function use(middleware) {\n      if (typeof middleware !== 'function') {\n        throw new TypeError('Middleware must be a function');\n      } // @ts-ignore\n\n\n      this.stack.push(middleware);\n      this.reloadMiddleware();\n      return this;\n    }\n  }, {\n    key: \"on\",\n    value: function on(rawEvents, rawHandlers) {\n      var events = !Array.isArray(rawEvents) ? [rawEvents] : rawEvents;\n      var handler = Array.isArray(rawHandlers) ? compose(rawHandlers) : rawHandlers;\n      var hasEvents = events.every(Boolean);\n\n      if (!hasEvents) {\n        throw new Error('Events should be not empty');\n      }\n\n      if (typeof handler !== 'function') {\n        throw new TypeError('Handler must be a function');\n      }\n\n      return this.use(function (context, next) {\n        return context.is(events) // @ts-ignore\n        ? handler(context, next) : next();\n      });\n    }\n    /**\r\n     * Listen by context condition\r\n     */\n\n  }, {\n    key: \"hear\",\n    value: function hear(hearConditions, handler) {\n      var rawConditions = !Array.isArray(hearConditions) ? [hearConditions] : hearConditions;\n      var hasConditions = rawConditions.every(Boolean);\n\n      if (!hasConditions) {\n        throw new Error('Condition should be not empty');\n      }\n\n      if (typeof handler !== 'function') {\n        throw new TypeError('Handler must be a function');\n      }\n\n      var textCondition = false;\n      var functionCondtion = false; // @ts-ignore\n\n      var conditions = rawConditions.map(function (condition) {\n        if (typeof condition === 'object' && !(condition instanceof RegExp)) {\n          functionCondtion = true;\n          var entries = Object.entries(condition).map(function (_ref71) {\n            var _ref72 = _slicedToArray(_ref71, 2),\n                path = _ref72[0],\n                value = _ref72[1];\n\n            return [splitPath(path), unifyCondition(value)];\n          });\n          return function (text, context) {\n            return entries.every(function (_ref73) {\n              var _ref74 = _slicedToArray(_ref73, 2),\n                  selectors = _ref74[0],\n                  callback = _ref74[1];\n\n              var value = getObjectValue(context, selectors);\n              return callback(value, context);\n            });\n          };\n        }\n\n        if (typeof condition === 'function') {\n          functionCondtion = true;\n          return condition;\n        }\n\n        textCondition = true;\n\n        if (condition instanceof RegExp) {\n          return function (text, context) {\n            var passed = condition.test(text);\n\n            if (passed) {\n              context.$match = text.match(condition);\n            }\n\n            return passed;\n          };\n        }\n\n        var stringCondition = String(condition);\n        return function (text) {\n          return text === stringCondition;\n        };\n      });\n      var needText = textCondition && functionCondtion === false; // @ts-ignore\n\n      this.hearStack.push(function (context, next) {\n        var text = context.text;\n\n        if (needText && text === null) {\n          return next();\n        }\n\n        var hasSome = conditions.some(function (condition) {\n          return condition(text, context);\n        });\n        return hasSome // @ts-ignore\n        ? handler(context, next) : next();\n      });\n      this.reloadMiddleware();\n      return this;\n    }\n    /**\r\n     * A handler that is called when handlers are not found\r\n     */\n\n  }, {\n    key: \"setHearFallbackHandler\",\n    value: function setHearFallbackHandler(handler) {\n      // @ts-ignore\n      this.hearFallbackHandler = handler;\n      this.reloadMiddleware();\n      return this;\n    }\n    /**\r\n     * Handles longpoll event\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"handlePollingUpdate\",\n    value: function handlePollingUpdate(update) {\n      debug$4('longpoll update', update);\n      var type = update[0];\n      var UpdateContext = pollingContexts[type];\n\n      if (!UpdateContext) {\n        debug$4(\"Unsupported polling context type \".concat(type));\n        return Promise.resolve();\n      } // @ts-ignore\n\n\n      return this.dispatchMiddleware(new UpdateContext({\n        vk: this.vk,\n        payload: update,\n        updateType: type,\n        source: UpdateSource.POLLING\n      }));\n    }\n    /**\r\n     * Handles webhook event\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"handleWebhookUpdate\",\n    value: function handleWebhookUpdate(update) {\n      debug$4('webhook update', update);\n      var type = update.type,\n          payload = update.object,\n          groupId = update.group_id;\n      var UpdateContext = webhookContexts[type];\n\n      if (!UpdateContext) {\n        debug$4(\"Unsupported webhook context type \".concat(type));\n        return Promise.resolve();\n      } // @ts-ignore\n\n\n      return this.dispatchMiddleware(new UpdateContext({\n        vk: this.vk,\n        payload: payload,\n        groupId: groupId,\n        updateType: type,\n        source: UpdateSource.WEBHOOK\n      }));\n    }\n    /**\r\n     * Starts to poll server\r\n     */\n\n  }, {\n    key: \"startPolling\",\n    value: function startPolling() {\n      var pollingGroupId = this.vk.options.pollingGroupId;\n      var isGroup = pollingGroupId !== null;\n      this.pollingTransport.subscribe(isGroup ? this.handleWebhookUpdate.bind(this) : this.handlePollingUpdate.bind(this));\n      return this.pollingTransport.start();\n    }\n    /**\r\n     * Starts the webhook server\r\n     */\n\n  }, {\n    key: \"startWebhook\",\n    value: function () {\n      var _startWebhook = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee58() {\n        var options,\n            next,\n            _args58 = arguments;\n        return _regeneratorRuntime.wrap(function _callee58$(_context58) {\n          while (1) {\n            switch (_context58.prev = _context58.next) {\n              case 0:\n                options = _args58.length > 0 && _args58[0] !== undefined ? _args58[0] : {};\n                next = _args58.length > 1 ? _args58[1] : undefined;\n                return _context58.abrupt(\"return\", this.webhookTransport.start(options, next));\n\n              case 3:\n              case \"end\":\n                return _context58.stop();\n            }\n          }\n        }, _callee58, this);\n      }));\n\n      function startWebhook() {\n        return _startWebhook.apply(this, arguments);\n      }\n\n      return startWebhook;\n    }()\n    /**\r\n     * Automatically determines the settings to run\r\n     */\n\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee59() {\n        var _ref75,\n            webhook,\n            _ref76,\n            _ref77,\n            group,\n            _args59 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee59$(_context59) {\n          while (1) {\n            switch (_context59.prev = _context59.next) {\n              case 0:\n                _ref75 = _args59.length > 0 && _args59[0] !== undefined ? _args59[0] : {}, webhook = _ref75.webhook;\n\n                if (!webhook) {\n                  _context59.next = 5;\n                  break;\n                }\n\n                _context59.next = 4;\n                return this.startWebhook(webhook);\n\n              case 4:\n                return _context59.abrupt(\"return\");\n\n              case 5:\n                if (this.vk.options.pollingGroupId) {\n                  _context59.next = 20;\n                  break;\n                }\n\n                _context59.prev = 6;\n                _context59.next = 9;\n                return this.vk.api.groups.getById({});\n\n              case 9:\n                _ref76 = _context59.sent;\n                _ref77 = _slicedToArray(_ref76, 1);\n                group = _ref77[0];\n                this.vk.options.pollingGroupId = group.id;\n                _context59.next = 20;\n                break;\n\n              case 15:\n                _context59.prev = 15;\n                _context59.t0 = _context59[\"catch\"](6);\n\n                if (!(_context59.t0.code !== APIErrorCode.WRONG_PARAMETER)) {\n                  _context59.next = 19;\n                  break;\n                }\n\n                throw _context59.t0;\n\n              case 19:\n                debug$4('This is not a group.');\n\n              case 20:\n                _context59.next = 22;\n                return this.startPolling();\n\n              case 22:\n              case \"end\":\n                return _context59.stop();\n            }\n          }\n        }, _callee59, this, [[6, 15]]);\n      }));\n\n      function start() {\n        return _start3.apply(this, arguments);\n      }\n\n      return start;\n    }()\n    /**\r\n     * Stopping gets updates\r\n     */\n\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee60() {\n        return _regeneratorRuntime.wrap(function _callee60$(_context60) {\n          while (1) {\n            switch (_context60.prev = _context60.next) {\n              case 0:\n                _context60.next = 2;\n                return Promise.all([this.pollingTransport.stop(), this.webhookTransport.stop()]);\n\n              case 2:\n              case \"end\":\n                return _context60.stop();\n            }\n          }\n        }, _callee60, this);\n      }));\n\n      function stop() {\n        return _stop3.apply(this, arguments);\n      }\n\n      return stop;\n    }()\n    /**\r\n     * Returns webhook callback like http[s] or express\r\n     */\n\n  }, {\n    key: \"getWebhookCallback\",\n    value: function getWebhookCallback() {\n      var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      return this.webhookTransport.getWebhookCallback(path);\n    }\n    /**\r\n     * Returns the middleware for the webhook under koa\r\n     */\n\n  }, {\n    key: \"getKoaWebhookMiddleware\",\n    value: function getKoaWebhookMiddleware() {\n      return this.webhookTransport.getKoaWebhookMiddleware();\n    }\n    /**\r\n     * Calls up the middleware chain\r\n     */\n\n  }, {\n    key: \"dispatchMiddleware\",\n    value: function dispatchMiddleware(context) {\n      return this.stackMiddleware(context, noopNext);\n    }\n    /**\r\n     * Reloads middleware\r\n     */\n\n  }, {\n    key: \"reloadMiddleware\",\n    value: function reloadMiddleware() {\n      var stack = _toConsumableArray(this.stack);\n\n      if (this.hearStack.length !== 0) {\n        stack.push( // @ts-ignore\n        getOptionalMiddleware(function (context) {\n          return context.is('new_message') && !context.isEvent;\n        }, compose([].concat(_toConsumableArray(this.hearStack), [this.hearFallbackHandler]))));\n      }\n\n      this.stackMiddleware = compose(stack);\n    }\n    /**\r\n     * Custom inspect object\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: inspect.custom,\n    value: function value(depth, options) {\n      var name = this.constructor.name;\n      var isStarted = this.isStarted,\n          stack = this.stack;\n      var payload = {\n        isStarted: isStarted,\n        stack: stack\n      };\n      return \"\".concat(options.stylize(name, 'special'), \" \").concat(inspect(payload, options));\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n    /**\r\n     * Checks is started\r\n     */\n\n  }, {\n    key: \"isStarted\",\n    get: function get() {\n      return this.pollingTransport.started || this.webhookTransport.started;\n    }\n  }]);\n\n  return Updates;\n}();\n\nvar _SnippetErrorCode = SnippetErrorCode,\n    INVALID_URL = _SnippetErrorCode.INVALID_URL,\n    INVALID_RESOURCE = _SnippetErrorCode.INVALID_RESOURCE,\n    RESOURCE_NOT_FOUND = _SnippetErrorCode.RESOURCE_NOT_FOUND;\nvar numberRe = /^-?\\d+$/;\nvar hasProtocolRe = /https?:\\/\\//i;\nvar isVKUrl = /^(?:https?:\\/\\/)?(?:m\\.)?vk\\.com/i;\nvar isUserMentionRe = /\\*|@/;\nvar systemMentionRe = /\\[([^|]+)|([^|\\]]+)\\]/;\n/**\r\n * Switch resource types\r\n */\n\nvar enumResourceTypes = {\n  id: ResourceType.USER,\n  club: ResourceType.GROUP,\n  public: ResourceType.GROUP,\n  app: ResourceType.APPLICATION\n};\n/**\r\n * Remove search param\r\n */\n\nvar removeSearchParam = /(\\?|&)[^=]+=/;\n/**\r\n * Resolve the attachment resource\r\n */\n\nvar resolveOwnerResource = function resolveOwnerResource(resource, pattern) {\n  var _resource$match = resource.match(pattern),\n      type = _resource$match[1],\n      owner = _resource$match[2],\n      id = _resource$match[3];\n\n  return {\n    id: Number(id),\n    owner: Number(owner),\n    type: type.toLowerCase().replace(removeSearchParam, '')\n  };\n};\n\nvar ResourceResolver =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function ResourceResolver(vk) {\n    _classCallCheck(this, ResourceResolver);\n\n    this.vk = vk;\n  }\n  /**\r\n   * Resolve resource\r\n   */\n\n\n  _createClass(ResourceResolver, [{\n    key: \"resolve\",\n    value: function () {\n      var _resolve = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee61(rawResource) {\n        var resource, isMention;\n        return _regeneratorRuntime.wrap(function _callee61$(_context61) {\n          while (1) {\n            switch (_context61.prev = _context61.next) {\n              case 0:\n                if (rawResource) {\n                  _context61.next = 2;\n                  break;\n                }\n\n                throw new SnippetsError({\n                  code: INVALID_RESOURCE,\n                  message: 'Resource is required'\n                });\n\n              case 2:\n                resource = String(rawResource).trim();\n\n                if (!numberRe.test(resource)) {\n                  _context61.next = 5;\n                  break;\n                }\n\n                return _context61.abrupt(\"return\", this.resolveNumber(Number(resource)));\n\n              case 5:\n                isMention = isUserMentionRe.test(resource) || systemMentionRe.test(resource);\n\n                if (!isMention) {\n                  _context61.next = 8;\n                  break;\n                }\n\n                return _context61.abrupt(\"return\", this.resolveMention(resource));\n\n              case 8:\n                if (!isVKUrl.test(resource)) {\n                  _context61.next = 10;\n                  break;\n                }\n\n                return _context61.abrupt(\"return\", this.resolveUrl(resource));\n\n              case 10:\n                return _context61.abrupt(\"return\", this.resolveScreenName(resource));\n\n              case 11:\n              case \"end\":\n                return _context61.stop();\n            }\n          }\n        }, _callee61, this);\n      }));\n\n      function resolve(_x39) {\n        return _resolve.apply(this, arguments);\n      }\n\n      return resolve;\n    }()\n    /**\r\n     * Resolve number\r\n     */\n\n  }, {\n    key: \"resolveNumber\",\n    value: function resolveNumber(resource) {\n      var isGroup = resource < 0;\n      var type = isGroup ? 'club' : 'id';\n      return this.resolveScreenName(type + (isGroup ? -resource : resource));\n    }\n    /**\r\n     * Resolve resource mention\r\n     */\n\n  }, {\n    key: \"resolveMention\",\n    value: function resolveMention(resource) {\n      if (isUserMentionRe.test(resource)) {\n        return this.resolveScreenName(resource.substring(1));\n      }\n\n      var _resource$match2 = resource.match(systemMentionRe),\n          mentionResource = _resource$match2[1];\n\n      return this.resolveScreenName(mentionResource);\n    }\n    /**\r\n     * Resolve resource url\r\n     */\n\n  }, {\n    key: \"resolveUrl\",\n    value: function () {\n      var _resolveUrl = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee62(rawResourceUrl) {\n        var resourceUrl, _ref78, pathname, search;\n\n        return _regeneratorRuntime.wrap(function _callee62$(_context62) {\n          while (1) {\n            switch (_context62.prev = _context62.next) {\n              case 0:\n                resourceUrl = !hasProtocolRe.test(rawResourceUrl) ? \"https://\".concat(rawResourceUrl) : rawResourceUrl;\n                _ref78 = new URL(resourceUrl), pathname = _ref78.pathname, search = _ref78.search;\n\n                if (!(pathname === '/')) {\n                  _context62.next = 4;\n                  break;\n                }\n\n                throw new SnippetsError({\n                  code: INVALID_URL,\n                  message: 'URL should contain path'\n                });\n\n              case 4:\n                if (!parseAttachment.test(search)) {\n                  _context62.next = 6;\n                  break;\n                }\n\n                return _context62.abrupt(\"return\", resolveOwnerResource(search, parseAttachment));\n\n              case 6:\n                if (!parseOwnerResource.test(search)) {\n                  _context62.next = 8;\n                  break;\n                }\n\n                return _context62.abrupt(\"return\", resolveOwnerResource(search, parseOwnerResource));\n\n              case 8:\n                return _context62.abrupt(\"return\", this.resolveScreenName(pathname.substring(1)));\n\n              case 9:\n              case \"end\":\n                return _context62.stop();\n            }\n          }\n        }, _callee62, this);\n      }));\n\n      function resolveUrl(_x40) {\n        return _resolveUrl.apply(this, arguments);\n      }\n\n      return resolveUrl;\n    }()\n    /**\r\n     * Resolve screen name\r\n     */\n\n  }, {\n    key: \"resolveScreenName\",\n    value: function () {\n      var _resolveScreenName = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee63(resource) {\n        var _resource$match3, typeResource, _id, _type, response, type, id;\n\n        return _regeneratorRuntime.wrap(function _callee63$(_context63) {\n          while (1) {\n            switch (_context63.prev = _context63.next) {\n              case 0:\n                if (!parseAttachment.test(resource)) {\n                  _context63.next = 2;\n                  break;\n                }\n\n                return _context63.abrupt(\"return\", resolveOwnerResource(resource, parseAttachment));\n\n              case 2:\n                if (!parseOwnerResource.test(resource)) {\n                  _context63.next = 4;\n                  break;\n                }\n\n                return _context63.abrupt(\"return\", resolveOwnerResource(resource, parseOwnerResource));\n\n              case 4:\n                if (!parseResource.test(resource)) {\n                  _context63.next = 9;\n                  break;\n                }\n\n                _resource$match3 = resource.match(parseResource), typeResource = _resource$match3[1], _id = _resource$match3[2];\n                _type = typeResource.toLowerCase();\n\n                if (_type in enumResourceTypes) {\n                  _type = enumResourceTypes[_type];\n                }\n\n                return _context63.abrupt(\"return\", {\n                  id: Number(_id),\n                  type: _type\n                });\n\n              case 9:\n                _context63.next = 11;\n                return this.vk.api.utils.resolveScreenName({\n                  screen_name: resource\n                });\n\n              case 11:\n                response = _context63.sent;\n\n                if (!Array.isArray(response)) {\n                  _context63.next = 14;\n                  break;\n                }\n\n                throw new SnippetsError({\n                  message: 'Resource not found',\n                  code: RESOURCE_NOT_FOUND\n                });\n\n              case 14:\n                // @ts-ignore\n                type = response.type, id = response.object_id;\n\n                if (!(type === 'page')) {\n                  _context63.next = 17;\n                  break;\n                }\n\n                return _context63.abrupt(\"return\", {\n                  id: id,\n                  type: ResourceType.GROUP\n                });\n\n              case 17:\n                return _context63.abrupt(\"return\", {\n                  id: id,\n                  type: type\n                });\n\n              case 18:\n              case \"end\":\n                return _context63.stop();\n            }\n          }\n        }, _callee63, this);\n      }));\n\n      function resolveScreenName(_x41) {\n        return _resolveScreenName.apply(this, arguments);\n      }\n\n      return resolveScreenName;\n    }()\n  }]);\n\n  return ResourceResolver;\n}();\n\nvar Snippets =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function Snippets(vk) {\n    _classCallCheck(this, Snippets);\n\n    this.vk = vk;\n    this.resourceResolver = new ResourceResolver(this.vk);\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(Snippets, [{\n    key: \"resolveResource\",\n\n    /**\r\n     * Defines the type of object (user, community, application, attachment)\r\n     */\n    value: function resolveResource(resource) {\n      return this.resourceResolver.resolve(resource);\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n  }]);\n\n  return Snippets;\n}();\n\nvar _SharedErrorCode = SharedErrorCode,\n    MISSING_CAPTCHA_HANDLER = _SharedErrorCode.MISSING_CAPTCHA_HANDLER,\n    MISSING_TWO_FACTOR_HANDLER = _SharedErrorCode.MISSING_TWO_FACTOR_HANDLER;\n\nvar CallbackService =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function CallbackService(vk) {\n    _classCallCheck(this, CallbackService);\n\n    this.captchaHandler = null;\n    this.twoFactorHandler = null;\n    this.vk = vk;\n  }\n  /**\r\n   * Checks if there is a captcha handler\r\n   */\n\n\n  _createClass(CallbackService, [{\n    key: \"processingCaptcha\",\n\n    /**\r\n     * Processing captcha\r\n     */\n    value: function processingCaptcha(payload) {\n      var _this44 = this;\n\n      return new Promise(function (resolveProcessing, rejectProcessing) {\n        if (!_this44.hasCaptchaHandler) {\n          rejectProcessing(new VKError({\n            message: 'Missing captcha handler',\n            code: MISSING_CAPTCHA_HANDLER\n          }));\n          return;\n        } // @ts-ignore\n\n\n        _this44.captchaHandler(payload, function (key) {\n          return new Promise(function (resolve, reject) {\n            if (key instanceof Error) {\n              reject(key);\n              rejectProcessing(key);\n              return;\n            } // @ts-ignore\n\n\n            resolveProcessing({\n              key: key,\n              validate: {\n                resolve: resolve,\n                reject: reject\n              }\n            });\n          });\n        });\n      });\n    }\n    /**\r\n     * Processing two-factor\r\n     */\n\n  }, {\n    key: \"processingTwoFactor\",\n    value: function processingTwoFactor(payload) {\n      var _this45 = this;\n\n      return new Promise(function (resolveProcessing, rejectProcessing) {\n        if (!_this45.hasTwoFactorHandler) {\n          rejectProcessing(new VKError({\n            message: 'Missing two-factor handler',\n            code: MISSING_TWO_FACTOR_HANDLER\n          }));\n          return;\n        } // @ts-ignore\n\n\n        _this45.twoFactorHandler(payload, function (code) {\n          return new Promise(function (resolve, reject) {\n            if (code instanceof Error) {\n              reject(code);\n              rejectProcessing(code);\n              return;\n            } // @ts-ignore\n\n\n            resolveProcessing({\n              code: code,\n              validate: {\n                resolve: resolve,\n                reject: reject\n              }\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"hasCaptchaHandler\",\n    get: function get() {\n      return this.captchaHandler !== null;\n    }\n    /**\r\n     * Checks if there is a two-factor handler\r\n     */\n\n  }, {\n    key: \"hasTwoFactorHandler\",\n    get: function get() {\n      return this.twoFactorHandler !== null;\n    }\n  }]);\n\n  return CallbackService;\n}();\n\nvar kAuth = Symbol('auth');\nvar kStreaming = Symbol('streaming');\n/**\r\n * Main class\r\n */\n\nvar VK =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Constructor\r\n   */\n  function VK() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, VK);\n\n    this.options = _objectSpread({}, defaultOptions, {\n      agent: new Agent({\n        keepAlive: true,\n        keepAliveMsecs: 10000\n      })\n    });\n    this.api = new API(this);\n    this.upload = new Upload(this);\n    this.collect = new Collect(this);\n    this.updates = new Updates(this);\n    this.snippets = new Snippets(this);\n    this.callbackService = new CallbackService(this);\n    this.setOptions(options);\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(VK, [{\n    key: \"setOptions\",\n\n    /**\r\n     * Sets options\r\n     */\n    value: function setOptions(options) {\n      Object.assign(this.options, options);\n      return this;\n    }\n    /**\r\n     * Sets token\r\n     */\n\n  }, {\n    key: inspect.custom,\n\n    /**\r\n     * Custom inspect object\r\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    value: function value(depth, options) {\n      var name = this.constructor.name;\n      var api = this.api,\n          updates = this.updates;\n      var _this$options = this.options,\n          appId = _this$options.appId,\n          token = _this$options.token,\n          login = _this$options.login,\n          phone = _this$options.phone;\n      var payload = {\n        options: {\n          appId: appId,\n          login: login,\n          phone: phone,\n          token: token\n        },\n        api: api,\n        updates: updates\n      };\n      return \"\".concat(options.stylize(name, 'special'), \" \").concat(inspect(payload, options));\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"auth\",\n    get: function get() {\n      if (!this[kAuth]) {\n        showDeprecatedMessage('vk.auth deprecated, use @vk-io/authorization instead'); // eslint-disable-next-line\n\n        this[kAuth] = new (require('@vk-io/authorization').Authorization)(this);\n      }\n\n      return this[kAuth];\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"streaming\",\n    get: function get() {\n      if (!this[kStreaming]) {\n        showDeprecatedMessage('vk.streaming deprecated, use @vk-io/streaming instead'); // eslint-disable-next-line\n\n        this[kStreaming] = new (require('@vk-io/streaming').StreamingAPI)(this);\n      }\n\n      return this[kStreaming];\n    }\n  }, {\n    key: \"token\",\n    set: function set(token) {\n      this.options.token = token;\n    }\n    /**\r\n     * Returns token\r\n     */\n    ,\n    get: function get() {\n      return this.options.token;\n    }\n    /**\r\n     * Sets captcha handler\r\n     *\r\n     * ```ts\r\n     * vk.captchaHandler = (payload, retry) => {...};\r\n     * ```\r\n     */\n\n  }, {\n    key: \"captchaHandler\",\n    set: function set(handler) {\n      this.callbackService.captchaHandler = handler;\n    }\n    /**\r\n     * Sets two-factor handler\r\n     *\r\n     * ```ts\r\n     * vk.twoFactorHandler = (payload, retry) => {...};\r\n     * ```\r\n     */\n\n  }, {\n    key: \"twoFactorHandler\",\n    set: function set(handler) {\n      this.callbackService.twoFactorHandler = handler;\n    }\n  }]);\n\n  return VK;\n}();\n/**\r\n * Primary colors used in the text button\r\n */\n// eslint-disable-next-line import/prefer-default-export\n\n\nvar ButtonColor;\n\n(function (ButtonColor) {\n  /**\r\n   * The white button, indicates secondary action\r\n   *\r\n   * Hex color #FFFFFF\r\n   */\n  ButtonColor[\"SECONDARY\"] = \"secondary\";\n  /**\r\n   * The blue button, indicates the main action\r\n   *\r\n   * Hex color #5181B8\r\n   */\n\n  ButtonColor[\"PRIMARY\"] = \"primary\";\n  /**\r\n   * The red button, indicates a dangerous or a negative action (reject, delete, etc...)\r\n   *\r\n   * Hex color #E64646\r\n   */\n\n  ButtonColor[\"NEGATIVE\"] = \"negative\";\n  /**\r\n   * The green button, indicates a agree, confirm, ...etc\r\n   *\r\n   * Hex color #4BB34B\r\n   */\n\n  ButtonColor[\"POSITIVE\"] = \"positive\";\n})(ButtonColor || (ButtonColor = {}));\n\nvar KeyboardBuilder =\n/*#__PURE__*/\nfunction () {\n  function KeyboardBuilder() {\n    _classCallCheck(this, KeyboardBuilder);\n\n    /**\r\n     * Does the keyboard close after pressing the button\r\n     */\n    this.isOneTime = false;\n    /**\r\n     * The keyboard must be attached to the message\r\n     */\n\n    this.isInline = false;\n    /**\r\n     * Rows with all buttons\r\n     */\n\n    this.rows = [];\n    /**\r\n     * Current row of buttons\r\n     */\n\n    this.currentRow = [];\n  }\n  /**\r\n   * Returns custom tag\r\n   */\n\n\n  _createClass(KeyboardBuilder, [{\n    key: \"textButton\",\n\n    /**\r\n     * Text button, can be colored\r\n     *\r\n     * ```ts\r\n     * builder.textButton({\r\n     *  label: 'Buy a coffee',\r\n     *  payload: {\r\n     *   command: 'buy',\r\n     *   item: 'coffee'\r\n     *  },\r\n     *  color: Keyboard.POSITIVE_COLOR\r\n     * });\r\n     * ```\r\n     */\n    value: function textButton(_ref79) {\n      var label = _ref79.label,\n          _ref79$payload = _ref79.payload,\n          rawPayload = _ref79$payload === void 0 ? {} : _ref79$payload,\n          _ref79$color = _ref79.color,\n          color = _ref79$color === void 0 ? ButtonColor.SECONDARY : _ref79$color;\n\n      if (label.length > 40) {\n        throw new RangeError('Maximum length of label 40 characters');\n      }\n\n      var payload = JSON.stringify(rawPayload);\n\n      if (payload.length > 255) {\n        throw new RangeError('Maximum length of payload 255 characters');\n      }\n\n      return this.addButton({\n        color: color,\n        action: {\n          label: label,\n          payload: payload,\n          type: 'text'\n        }\n      });\n    }\n    /**\r\n     * User location request button, occupies the entire keyboard width\r\n     *\r\n     * ```ts\r\n     * builder.locationRequestButton({\r\n     *  payload: {\r\n     *   command: 'order_delivery'\r\n     *  }\r\n     * })\r\n     * ```\r\n     */\n\n  }, {\n    key: \"locationRequestButton\",\n    value: function locationRequestButton(_ref80) {\n      var _ref80$payload = _ref80.payload,\n          rawPayload = _ref80$payload === void 0 ? {} : _ref80$payload;\n      var payload = JSON.stringify(rawPayload);\n\n      if (payload.length > 255) {\n        throw new RangeError('Maximum length of payload 255 characters');\n      }\n\n      return this.addWideButton({\n        action: {\n          payload: payload,\n          type: 'location'\n        }\n      });\n    }\n    /**\r\n     * VK Pay button, occupies the entire keyboard width\r\n     *\r\n     * ```ts\r\n     * builder.payButton({\r\n     *  hash: {\r\n     *   action: 'transfer-to-group',\r\n     *   group_id: 1,\r\n     *   aid: 10\r\n     *  }\r\n     * })\r\n     * ```\r\n     */\n\n  }, {\n    key: \"payButton\",\n    value: function payButton(_ref81) {\n      var rawHash = _ref81.hash;\n      var hash = typeof rawHash === 'object' ? String(new URLSearchParams(Object.entries(rawHash))) : rawHash;\n      return this.addWideButton({\n        action: {\n          hash: hash,\n          type: 'vkpay'\n        }\n      });\n    }\n    /**\r\n     * VK Apps button, occupies the entire keyboard width\r\n     *\r\n     * ```ts\r\n     * builder.applicationButton({\r\n     *  label: 'LiveWidget',\r\n     *  appId: 6232540,\r\n     *  ownerId: -157525928\r\n     * })\r\n     * ```\r\n     */\n\n  }, {\n    key: \"applicationButton\",\n    value: function applicationButton(_ref82) {\n      var label = _ref82.label,\n          appId = _ref82.appId,\n          ownerId = _ref82.ownerId,\n          hash = _ref82.hash;\n\n      if (label.length > 40) {\n        throw new RangeError('Maximum length of label 40 characters');\n      }\n\n      return this.addWideButton({\n        action: {\n          label: label,\n          hash: hash,\n          app_id: appId,\n          owner_id: ownerId,\n          type: 'open_app'\n        }\n      });\n    }\n    /**\r\n     * Saves the current row of buttons in the general rows\r\n     */\n\n  }, {\n    key: \"row\",\n    value: function row() {\n      if (this.currentRow.length === 0) {\n        return this;\n      }\n\n      if (this.currentRow.length > 5) {\n        throw new RangeError('Max count of buttons at columns 5');\n      }\n\n      this.rows.push(this.currentRow);\n      this.currentRow = [];\n      return this;\n    }\n    /**\r\n     * Sets the keyboard to close after pressing\r\n     *\r\n     * ```ts\r\n     *  builder.oneTime();\r\n     *\r\n     *  builder.oneTime(false);\r\n     * ```\r\n     */\n\n  }, {\n    key: \"oneTime\",\n    value: function oneTime() {\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.isOneTime = enabled;\n      return this;\n    }\n    /**\r\n     * Sets the keyboard inline\r\n     *\r\n     * ```ts\r\n     *  builder.inline();\r\n     *\r\n     *  builder.inline(false);\r\n     * ```\r\n     */\n\n  }, {\n    key: \"inline\",\n    value: function inline() {\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.isInline = enabled;\n      return this;\n    }\n    /**\r\n     * Clones the builder with all the settings\r\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var builder = new KeyboardBuilder();\n      builder.oneTime(this.isOneTime);\n      builder.inline(this.isInline);\n      builder.rows = _toConsumableArray(this.rows);\n      builder.currentRow = _toConsumableArray(this.currentRow);\n      return builder;\n    }\n    /**\r\n     * Returns a string to keyboard a VK\r\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var maxRowsLength = this.isInline ? 6 : 10;\n\n      if (this.rows.length > maxRowsLength) {\n        throw new RangeError(\"Max count of keyboard rows \".concat(maxRowsLength));\n      }\n\n      var buttons = this.currentRow.length !== 0 ? [].concat(_toConsumableArray(this.rows), [this.currentRow]) : this.rows;\n      return JSON.stringify(this.isInline ? {\n        buttons: buttons,\n        inline: true\n      } : {\n        buttons: buttons,\n        one_time: this.isOneTime\n      });\n    }\n    /**\r\n     * Adds a button to the current row\r\n     */\n\n  }, {\n    key: \"addButton\",\n    value: function addButton(button) {\n      this.currentRow.push(button);\n      return this;\n    }\n    /**\r\n     * Adds a wide button to the new row\r\n     */\n\n  }, {\n    key: \"addWideButton\",\n    value: function addWideButton(button) {\n      if (this.currentRow.length !== 0) {\n        this.row();\n      }\n\n      this.addButton(button);\n      return this.row();\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n  }]);\n\n  return KeyboardBuilder;\n}();\n\nvar Keyboard =\n/*#__PURE__*/\nfunction () {\n  function Keyboard() {\n    _classCallCheck(this, Keyboard);\n  }\n\n  _createClass(Keyboard, [{\n    key: Symbol.toStringTag,\n\n    /**\r\n     * Returns custom tag\r\n     */\n    get: function get() {\n      return this.constructor.name;\n    }\n    /**\r\n     * @deprecated Use Keyboard.SECONDARY_COLOR instead\r\n     */\n    // eslint-disable-next-line class-methods-use-this\n\n  }], [{\n    key: \"builder\",\n\n    /**\r\n     * Returns keyboard builder\r\n     */\n    value: function builder() {\n      return new KeyboardBuilder();\n    }\n    /**\r\n     * Assembles a builder of buttons\r\n     */\n\n  }, {\n    key: \"keyboard\",\n    value: function keyboard(rows) {\n      var builder = new KeyboardBuilder();\n      var _iteratorNormalCompletion14 = true;\n      var _didIteratorError14 = false;\n      var _iteratorError14 = undefined;\n\n      try {\n        for (var _iterator14 = rows[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n          var row = _step14.value;\n          var buttons = Array.isArray(row) ? row : [row];\n          var _iteratorNormalCompletion15 = true;\n          var _didIteratorError15 = false;\n          var _iteratorError15 = undefined;\n\n          try {\n            for (var _iterator15 = buttons[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n              var _ref84 = _step15.value;\n              var kind = _ref84.kind;\n              var options = _ref84.options;\n\n              if (kind === 'text') {\n                builder.textButton(options);\n                continue;\n              }\n\n              if (kind === 'location_request') {\n                builder.locationRequestButton(options);\n                continue;\n              }\n\n              if (kind === 'vk_pay') {\n                builder.payButton(options);\n                continue;\n              }\n\n              if (kind === 'vk_application') {\n                builder.applicationButton(options);\n                continue;\n              }\n\n              throw new TypeError('Unsupported type button');\n            }\n          } catch (err) {\n            _didIteratorError15 = true;\n            _iteratorError15 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n                _iterator15.return();\n              }\n            } finally {\n              if (_didIteratorError15) {\n                throw _iteratorError15;\n              }\n            }\n          }\n\n          builder.row();\n        }\n      } catch (err) {\n        _didIteratorError14 = true;\n        _iteratorError14 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n            _iterator14.return();\n          }\n        } finally {\n          if (_didIteratorError14) {\n            throw _iteratorError14;\n          }\n        }\n      }\n\n      return builder;\n    }\n    /**\r\n     * Text button, can be colored\r\n     */\n\n  }, {\n    key: \"textButton\",\n    value: function textButton(options) {\n      return {\n        options: options,\n        kind: 'text'\n      };\n    }\n    /**\r\n     * User location request button, occupies the entire keyboard width\r\n     */\n\n  }, {\n    key: \"locationRequestButton\",\n    value: function locationRequestButton(options) {\n      return {\n        options: options,\n        kind: 'location_request'\n      };\n    }\n    /**\r\n     * VK Pay button, occupies the entire keyboard width\r\n     */\n\n  }, {\n    key: \"payButton\",\n    value: function payButton(options) {\n      return {\n        options: options,\n        kind: 'vk_pay'\n      };\n    }\n    /**\r\n     * VK Apps button, occupies the entire keyboard width\r\n     */\n\n  }, {\n    key: \"applicationButton\",\n    value: function applicationButton(options) {\n      return {\n        options: options,\n        kind: 'vk_application'\n      };\n    }\n  }, {\n    key: \"DEFAULT_COLOR\",\n    get: function get() {\n      // eslint-disable-next-line no-console\n      showDeprecatedMessage('Keyboard.DEFAULT_COLOR deprecated, use Keyboard.SECONDARY_COLOR instead');\n      return ButtonColor.SECONDARY;\n    }\n    /**\r\n     * The white button, indicates secondary action\r\n     *\r\n     * Hex color #FFFFFF\r\n     */\n    // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"SECONDARY_COLOR\",\n    get: function get() {\n      return ButtonColor.SECONDARY;\n    }\n    /**\r\n     * The blue button, indicates the main action\r\n     *\r\n     * Hex color #5181B8\r\n     */\n    // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"PRIMARY_COLOR\",\n    get: function get() {\n      return ButtonColor.PRIMARY;\n    }\n    /**\r\n     * The red button, indicates a dangerous or a negative action (reject, delete, etc...)\r\n     *\r\n     * Hex color #E64646\r\n     */\n    // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"NEGATIVE_COLOR\",\n    get: function get() {\n      return ButtonColor.NEGATIVE;\n    }\n    /**\r\n     * The green button, indicates a agree, confirm, ...etc\r\n     *\r\n     * Hex color #4BB34B\r\n     */\n    // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"POSITIVE_COLOR\",\n    get: function get() {\n      return ButtonColor.POSITIVE;\n    }\n  }]);\n\n  return Keyboard;\n}();\n\nvar Composer =\n/*#__PURE__*/\nfunction (_Composer$) {\n  _inherits(Composer, _Composer$);\n\n  function Composer() {\n    _classCallCheck(this, Composer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Composer).apply(this, arguments));\n  }\n\n  _createClass(Composer, null, [{\n    key: \"builder\",\n\n    /**\r\n     * Create new `Composer` instance\r\n     */\n    value: function builder() {\n      return new Composer();\n    }\n  }]);\n\n  return Composer;\n}(Composer$1);\n\nexport default VK;\nexport { APIError, APIErrorCode, APIRequest, Attachment, AttachmentType, AudioAttachment, AudioMessageAttachment, ButtonColor, CaptchaType, CollectError, CollectErrorCode, CommentActionContext, Composer, Context, DialogFlagsContext, DocumentAttachment, ExecuteError, ExternalAttachment, GiftAttachment, GraffitiAttachment, GroupMemberContext, GroupUpdateContext, GroupUserContext, Keyboard, KeyboardBuilder, LinkAttachment, MarketAlbumAttachment, MarketAttachment, MessageAllowContext, MessageContext, MessageFlagsContext, MessageSource, NewAttachmentsContext, PhotoAttachment, PollAttachment, ReadMessagesContext, RemovedMessagesContext, APIRequest as Request, ResourceType, SharedErrorCode, SnippetErrorCode, SnippetsError, StickerAttachment, StoryAttachment, TypingContext, UpdateSource, UpdatesError, UpdatesErrorCode, UploadError, UploadErrorCode, UserOnlineContext, VK, VKAppPayloadContext, VKError, VKPayTransactionContext, VideoAttachment, VoteContext, WallAttachment, WallPostContext, WallReplyAttachment, apiErrors, attachmentTypes, captchaTypes, collectErrors, inspectCustomData, messageSources, platforms, resourceTypes, sharedErrors, snippetsErrors, transformAttachments, updatesErrors, uploadErrors };","map":null,"metadata":{},"sourceType":"module"}